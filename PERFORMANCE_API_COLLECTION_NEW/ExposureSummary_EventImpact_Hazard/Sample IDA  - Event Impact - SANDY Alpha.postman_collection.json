{
	"info": {
		"_postman_id": "9dbc5e77-bb8a-4e5b-b4cb-1b00538d87ac",
		"name": "Sample IDA  - Event Impact : SANDY Alpha",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14426843"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set analysis - Event Impact Analysis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"setTimeout(function() {\r",
							"    console.log(\"Next API Call After 3 Minutes \")\r",
							"}, 180000);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 24226,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"analysisObject\": [\r\n        {\r\n            \"CurrencyCode\": \"USD\",\r\n            \"IncludeAllContracts\": true,\r\n            \"big_tiff_flag\": true,\r\n            \"damageAdjustment\": 1,\r\n            \"ValuationTypeCode\": 1,\r\n            \"DamageFunctionID\": 127,\r\n            \"ExposureFilterSets\": {\r\n                \"AssetModel\": \"ERBASICS\",\r\n                \"FilterList\": [\r\n                    {\r\n                        \"AndOr\": \"AND\",\r\n                        \"FilterList\": [\r\n                            {\r\n                                \"AssetType\": \"Site\",\r\n                                \"Attribute\": \"Cause Of Loss\",\r\n                                \"Operator\": \"EQ\",\r\n                                \"Value\": \"TCXX\",\r\n                                \"AndOr\": \"AND\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"quantile\": 50,\r\n            \"Events\": [\r\n                {\r\n                    \"EventID\": 785478,\r\n                    \"SeverityModelID\": 435\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/load-exposure",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"load-exposure"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposure Summary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact Asset Count\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact Asset Count\", () => {\r",
							"    pm.expect(responseJson.Value.Analysis0[\"Asset Count\"]).to.eql(33);  // Validating Asset Count\r",
							"    console.log(\"Asset Count Value is matching. Expected: 33, Current: \", responseJson.Value.Analysis0[\"Asset Count\"]);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact Contracts Count\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact Contracts Count\", () => {\r",
							"    pm.expect(responseJson.Value.Analysis0[\"#Contracts\"]).to.eql(9);  // Validating Contract Count\r",
							"    console.log(\"Contracts Count Value is matching. Expected: 9, Current: \", responseJson.Value.Analysis0[\"#Contracts\"]);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact TIV\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact TIV\", () => {\r",
							"    pm.expect(responseJson.Value.Analysis0[\"TIV\"]).to.eql(1185914075.0472999);  // Validating TIV\r",
							"    console.log(\"TIV Value is matching. Expected: 1185914075.0472999, Current: \", responseJson.Value.Analysis0[\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact Gross Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact Gross Exposed Limit\", () => {\r",
							"    const expectedGrossExposedLimit = 1418567.1429582462;\r",
							"    const actualGrossExposedLimit = responseJson.Value.Analysis0[\"Gross Exposed Limit\"];\r",
							"  \r",
							"    const difference = Math.abs(expectedGrossExposedLimit - actualGrossExposedLimit);\r",
							"    console.log(\"Expected Gross Exposed Limit: \", expectedGrossExposedLimit);\r",
							"    console.log(\"Actual Gross Exposed Limit: \", actualGrossExposedLimit);\r",
							"    console.log(\"Difference: \", difference);\r",
							"\r",
							"    if (difference > 1) {\r",
							"        throw new Error(`Gross Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"    } else {\r",
							"        console.log(\"Gross Exposed Limit is within the acceptable range. No errors.\");\r",
							"    }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact ContractLoss_Value All Types_GL\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact ContractLoss_Value All Types_GL\", () => {\r",
							"    const expectedContractLoss_GL = 453922.88817694027;\r",
							"    const actualContractLoss_GL = responseJson.Value.Analysis0[\"ContractLoss_Value All Types_GL\"];\r",
							"  \r",
							"    const difference = Math.abs(expectedContractLoss_GL - actualContractLoss_GL);\r",
							"    console.log(\"Expected ContractLoss_Value All Types_GL: \", expectedContractLoss_GL);\r",
							"    console.log(\"Actual ContractLoss_Value All Types_GL: \", actualContractLoss_GL);\r",
							"    console.log(\"Difference: \", difference);\r",
							"\r",
							"    if (difference > 1) {\r",
							"        throw new Error(`ContractLoss_Value All Types_GL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"    } else {\r",
							"        console.log(\"ContractLoss_Value All Types_GL is within the acceptable range. No errors.\");\r",
							"    }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact Net Pre Cat Exposed Limit\", () => {\r",
							"    const expectedNetPreCatExposedLimit = 1418567.1429582462;\r",
							"    const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"    const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"    console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"    console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"    console.log(\"Difference: \", difference);\r",
							"\r",
							"    if (difference > 1) {\r",
							"        throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"    } else {\r",
							"        console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"    }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact Net Pre Cat Loss\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact Net Pre Cat Loss\", () => {\r",
							"    const expectedNetPreCatLoss = 453922.88817694027;\r",
							"    const actualNetPreCatLoss = responseJson.Value.Analysis0[\"Net Pre Cat Loss\"];\r",
							"  \r",
							"    const difference = Math.abs(expectedNetPreCatLoss - actualNetPreCatLoss);\r",
							"    console.log(\"Expected Net Pre Cat Loss: \", expectedNetPreCatLoss);\r",
							"    console.log(\"Actual Net Pre Cat Loss: \", actualNetPreCatLoss);\r",
							"    console.log(\"Difference: \", difference);\r",
							"\r",
							"    if (difference > 1) {\r",
							"        throw new Error(`Net Pre Cat Loss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"    } else {\r",
							"        console.log(\"Net Pre Cat Loss is within the acceptable range. No errors.\");\r",
							"    }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact Net of Fac Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact Net of Fac Exposed Limit\", () => {\r",
							"    const expectedNetOfFacExposedLimit = 1418567.1429582462;\r",
							"    const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"    const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"    console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"    console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"    console.log(\"Difference: \", difference);\r",
							"\r",
							"    if (difference > 1) {\r",
							"        throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"    } else {\r",
							"        console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"    }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact Net of Fac Loss\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact Net of Fac Loss\", () => {\r",
							"    const expectedNetOfFacLoss = 453922.88817694027;\r",
							"    const actualNetOfFacLoss = responseJson.Value.Analysis0[\"Net of Fac Loss\"];\r",
							"  \r",
							"    const difference = Math.abs(expectedNetOfFacLoss - actualNetOfFacLoss);\r",
							"    console.log(\"Expected Net of Fac Loss: \", expectedNetOfFacLoss);\r",
							"    console.log(\"Actual Net of Fac Loss: \", actualNetOfFacLoss);\r",
							"    console.log(\"Difference: \", difference);\r",
							"\r",
							"    if (difference > 1) {\r",
							"        throw new Error(`Net of Fac Loss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"    } else {\r",
							"        console.log(\"Net of Fac Loss is within the acceptable range. No errors.\");\r",
							"    }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact Fac Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact Fac Exposed Limit\", () => {\r",
							"    const expectedFacExposedLimit = 0;\r",
							"    const actualFacExposedLimit = responseJson.Value.Analysis0[\"Fac Exposed Limit\"];\r",
							"  \r",
							"    const difference = Math.abs(expectedFacExposedLimit - actualFacExposedLimit);\r",
							"    console.log(\"Expected Fac Exposed Limit: \", expectedFacExposedLimit);\r",
							"    console.log(\"Actual Fac Exposed Limit: \", actualFacExposedLimit);\r",
							"    console.log(\"Difference: \", difference);\r",
							"\r",
							"    if (difference > 1) {\r",
							"        throw new Error(`Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"    } else {\r",
							"        console.log(\"Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"    }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact Fac loss\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact Fac loss\", () => {\r",
							"    const expectedFacLoss = 0;\r",
							"    const actualFacLoss = responseJson.Value.Analysis0[\"Fac loss\"];\r",
							"  \r",
							"    const difference = Math.abs(expectedFacLoss - actualFacLoss);\r",
							"    console.log(\"Expected Fac loss: \", expectedFacLoss);\r",
							"    console.log(\"Actual Fac loss: \", actualFacLoss);\r",
							"    console.log(\"Difference: \", difference);\r",
							"\r",
							"    if (difference > 1) {\r",
							"        throw new Error(`Fac loss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"    } else {\r",
							"        console.log(\"Fac loss is within the acceptable range. No errors.\");\r",
							"    }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact Treaty Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact Treaty Exposed Limit\", () => {\r",
							"    const expectedTreatyExposedLimit = 0;\r",
							"    const actualTreatyExposedLimit = responseJson.Value.Analysis0[\"Treaty Exposed Limit\"];\r",
							"  \r",
							"    const difference = Math.abs(expectedTreatyExposedLimit - actualTreatyExposedLimit);\r",
							"    console.log(\"Expected Treaty Exposed Limit: \", expectedTreatyExposedLimit);\r",
							"    console.log(\"Actual Treaty Exposed Limit: \", actualTreatyExposedLimit);\r",
							"    console.log(\"Difference: \", difference);\r",
							"\r",
							"    if (difference > 1) {\r",
							"        throw new Error(`Treaty Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"    } else {\r",
							"        console.log(\"Treaty Exposed Limit is within the acceptable range. No errors.\");\r",
							"    }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Event impact Treaty Loss\r",
							"pm.test(\"Validating ABC Insurance Co with Event impact Treaty Loss\", () => {\r",
							"    const expectedTreatyLoss = 0;\r",
							"    const actualTreatyLoss = responseJson.Value.Analysis0[\"Treaty Loss\"];\r",
							"  \r",
							"    const difference = Math.abs(expectedTreatyLoss - actualTreatyLoss);\r",
							"    console.log(\"Expected Treaty Loss: \", expectedTreatyLoss);\r",
							"    console.log(\"Actual Treaty Loss: \", actualTreatyLoss);\r",
							"    console.log(\"Difference: \", difference);\r",
							"\r",
							"    if (difference > 1) {\r",
							"        throw new Error(`Treaty Loss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"    } else {\r",
							"        console.log(\"Treaty Loss is within the acceptable range. No errors.\");\r",
							"    }\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"measures\": [\r\n        \"Asset Count\",\r\n        \"#Contracts\",\r\n        \"TIV\",\r\n        \"Gross Exposed Limit\",\r\n        \"GroundUpLoss\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/summary",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"summary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Top 20 Assets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log(\"-------- TOP N First Row Value --------\")\r",
							"\r",
							"// Validating Asset Name Of 1st Row, ATLANTIC CITY NJ - 2238452\r",
							"pm.test(\"Validating Asset Name Of 1st Row, ATLANTIC CITY NJ - 2238452\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Name\"]).to.eql(\"ATLANTIC CITY NJ - 2238452\");\r",
							"  console.log(\"Asset Name Miss Matching In 1st Row Expected: ATLANTIC CITY NJ - 2238452 Current:\", responseJson.Value.Analysis0[0][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 1st Row, ATLANTIC CITY NJ - 2238452\r",
							"pm.test(\"Validating Asset Number Of 1st Row, ATLANTIC CITY NJ - 2238452\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Number\"]).to.eql(2238452);\r",
							"  console.log(\"Asset Number Miss Matching In 1st Row Expected: 2238452 Current:\", responseJson.Value.Analysis0[0][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 1st Row, ATLANTIC CITY NJ - 2238452\r",
							"pm.test(\"Validating Contract Number Of 1st Row, ATLANTIC CITY NJ - 2238452\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Contract Number\"]).to.eql(\"6937\");\r",
							"  console.log(\"Contract Number Miss Matching In 1st Row Expected: 6937 Current:\", responseJson.Value.Analysis0[0][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 1st Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 1st Row\", () => {\r",
							"  const expectedContractLoss_EL = 241763.91290500923;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 1st Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 1st Row\", () => {\r",
							"  const expectedContractLoss_GL = 241881.40740486968;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_GL\"];\r",
							"  const difference = Math.abs(expectedContractLoss_GL - actualContractLoss_GL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_GL: \", expectedContractLoss_GL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_GL: \", actualContractLoss_GL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_GL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_GL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 1st Row\r",
							"pm.test(\"Validating GroundUpLoss Of 1st Row\", () => {\r",
							"  const expectedGroundUpLoss = 532184152.1450043;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[0][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 1st Row\r",
							"pm.test(\"Validating Intensity Of 1st Row\", () => {\r",
							"  const expectedIntensity = 7.480679512023926;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[0][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 1st Row\r",
							"pm.test(\"Validating TIV Of 1st Row\", () => {\r",
							"  const expectedTIV = 978220260;\r",
							"  const actualTIV = responseJson.Value.Analysis0[0][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 1st Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 1st Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 241763.91290500923;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[0][\"Net Pre Cat Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 1st Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 1st Row\", () => {\r",
							"  const expectedNetPreCatLoss = 241881.40740486968;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[0][\"Net Pre Cat Loss\"];\r",
							"  const difference = Math.abs(expectedNetPreCatLoss - actualNetPreCatLoss);\r",
							"  console.log(\"Expected Net Pre Cat Loss: \", expectedNetPreCatLoss);\r",
							"  console.log(\"Actual Net Pre Cat Loss: \", actualNetPreCatLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Loss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Loss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 1st Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 1st Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 241763.91290500923;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[0][\"Net of Fac Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 1st Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 1st Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 1st Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 1st Row\r",
							"pm.test(\"Validating Treaty Loss Of 1st Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 1st Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of 2nd Row, NEW YORK NY - 2242728\r",
							"pm.test(\"Validating Asset Name Of 2nd Row, NEW YORK NY - 2242728\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Name\"]).to.eql(\"NEW YORK NY - 2242728\");\r",
							"  console.log(\"Asset Name Miss Matching In 2nd Row Expected: NEW YORK NY - 2242728 Current:\", responseJson.Value.Analysis0[1][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 2nd Row, NEW YORK NY - 2242728\r",
							"pm.test(\"Validating Asset Number Of 2nd Row, NEW YORK NY - 2242728\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Number\"]).to.eql(2242728);\r",
							"  console.log(\"Asset Number Miss Matching In 2nd Row Expected: 2242728 Current:\", responseJson.Value.Analysis0[1][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 2nd Row, NEW YORK NY - 2242728\r",
							"pm.test(\"Validating Contract Number Of 2nd Row, NEW YORK NY - 2242728\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Contract Number\"]).to.eql(\"6960\");\r",
							"  console.log(\"Contract Number Miss Matching In 2nd Row Expected: 6960 Current:\", responseJson.Value.Analysis0[1][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 2nd Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 2nd Row\", () => {\r",
							"  const expectedContractLoss_EL = 108119.26012151688;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 2nd Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 2nd Row\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_GL\"];\r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 2nd Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 2nd Row\r",
							"pm.test(\"Validating GroundUpLoss Of 2nd Row\", () => {\r",
							"  const expectedGroundUpLoss = 35979016.19024393;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[1][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 2nd Row\r",
							"pm.test(\"Validating Intensity Of 2nd Row\", () => {\r",
							"  const expectedIntensity = 8.530599594116211;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[1][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 2nd Row\r",
							"pm.test(\"Validating TIV Of 2nd Row\", () => {\r",
							"  const expectedTIV = 63402117.98;\r",
							"  const actualTIV = responseJson.Value.Analysis0[1][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 2nd Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 2nd Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 108119.26012151688;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[1][\"Net Pre Cat Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 2nd Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 2nd Row\", () => {\r",
							"  const expectedNetPreCatLoss = 0;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[1][\"Net Pre Cat Loss\"];\r",
							"  pm.expect(actualNetPreCatLoss).to.eql(expectedNetPreCatLoss);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 2nd Row Expected: 0 Current:\", actualNetPreCatLoss);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 2nd Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 2nd Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 108119.26012151688;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[1][\"Net of Fac Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 2nd Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 2nd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 2nd Row Expected: 0 Current:\", responseJson.Value.Analysis0[1][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 2nd Row\r",
							"pm.test(\"Validating Treaty Loss Of 2nd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 2nd Row Expected: 0 Current:\", responseJson.Value.Analysis0[1][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of 3rd Row, NEW YORK NY - 2242726\r",
							"pm.test(\"Validating Asset Name Of 3rd Row, NEW YORK NY - 2242726\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Asset Name\"]).to.eql(\"NEW YORK NY - 2242726\");\r",
							"  console.log(\"Asset Name Miss Matching In 3rd Row Expected: NEW YORK NY - 2242726 Current:\", responseJson.Value.Analysis0[2][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 3rd Row, NEW YORK NY - 2242726\r",
							"pm.test(\"Validating Asset Number Of 3rd Row, NEW YORK NY - 2242726\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Asset Number\"]).to.eql(2242726);\r",
							"  console.log(\"Asset Number Miss Matching In 3rd Row Expected: 2242726 Current:\", responseJson.Value.Analysis0[2][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 3rd Row, NEW YORK NY - 2242726\r",
							"pm.test(\"Validating Contract Number Of 3rd Row, NEW YORK NY - 2242726\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Contract Number\"]).to.eql(\"6960\");\r",
							"  console.log(\"Contract Number Miss Matching In 3rd Row Expected: 6960 Current:\", responseJson.Value.Analysis0[2][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 3rd Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 3rd Row\", () => {\r",
							"  const expectedContractLoss_EL = 67514.6007715525;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[2][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 3rd Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 3rd Row\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[2][\"ContractLoss_Value All Types_GL\"];\r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 3rd Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 3rd Row\r",
							"pm.test(\"Validating GroundUpLoss Of 3rd Row\", () => {\r",
							"  const expectedGroundUpLoss = 23528442.62477517;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[2][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 3rd Row\r",
							"pm.test(\"Validating Intensity Of 3rd Row\", () => {\r",
							"  const expectedIntensity = 10.072669982910156;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[2][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 3rd Row\r",
							"pm.test(\"Validating TIV Of 3rd Row\", () => {\r",
							"  const expectedTIV = 39591176.25;\r",
							"  const actualTIV = responseJson.Value.Analysis0[2][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 3rd Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 3rd Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 67514.6007715525;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[2][\"Net Pre Cat Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 3rd Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 3rd Row\", () => {\r",
							"  const expectedNetPreCatLoss = 0;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[2][\"Net Pre Cat Loss\"];\r",
							"  pm.expect(actualNetPreCatLoss).to.eql(expectedNetPreCatLoss);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 3rd Row Expected: 0 Current:\", actualNetPreCatLoss);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 3rd Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 3rd Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 67514.6007715525;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[2][\"Net of Fac Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 3rd Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 3rd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 3rd Row Expected: 0 Current:\", responseJson.Value.Analysis0[2][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 3rd Row\r",
							"pm.test(\"Validating Treaty Loss Of 3rd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 3rd Row Expected: 0 Current:\", responseJson.Value.Analysis0[2][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of 4th Row, HOBOKEN NJ - 2250476\r",
							"pm.test(\"Validating Asset Name Of 4th Row, HOBOKEN NJ - 2250476\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Asset Name\"]).to.eql(\"HOBOKEN NJ - 2250476\");\r",
							"  console.log(\"Asset Name Miss Matching In 4th Row Expected: HOBOKEN NJ - 2250476 Current:\", responseJson.Value.Analysis0[3][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 4th Row, HOBOKEN NJ - 2250476\r",
							"pm.test(\"Validating Asset Number Of 4th Row, HOBOKEN NJ - 2250476\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Asset Number\"]).to.eql(2250476);\r",
							"  console.log(\"Asset Number Miss Matching In 4th Row Expected: 2250476 Current:\", responseJson.Value.Analysis0[3][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 4th Row, HOBOKEN NJ - 2250476\r",
							"pm.test(\"Validating Contract Number Of 4th Row, HOBOKEN NJ - 2250476\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Contract Number\"]).to.eql(\"6996\");\r",
							"  console.log(\"Contract Number Miss Matching In 4th Row Expected: 6996 Current:\", responseJson.Value.Analysis0[3][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 4th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 4th Row\", () => {\r",
							"  const expectedContractLoss_EL = 0;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[3][\"ContractLoss_Value All Types_EL\"];\r",
							"  pm.expect(actualContractLoss_EL).to.eql(expectedContractLoss_EL);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching In 4th Row Expected: 0 Current:\", actualContractLoss_EL);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 4th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 4th Row\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[3][\"ContractLoss_Value All Types_GL\"];\r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 4th Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 4th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 4th Row\", () => {\r",
							"  const expectedGroundUpLoss = 7947976.319215681;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[3][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 4th Row\r",
							"pm.test(\"Validating Intensity Of 4th Row\", () => {\r",
							"  const expectedIntensity = 6.529189586639404;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[3][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 4th Row\r",
							"pm.test(\"Validating TIV Of 4th Row\", () => {\r",
							"  const expectedTIV = 15307837.07;\r",
							"  const actualTIV = responseJson.Value.Analysis0[3][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 4th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 4th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 0;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[3][\"Net Pre Cat Exposed Limit\"];\r",
							"  pm.expect(actualNetPreCatExposedLimit).to.eql(expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Miss Matching In 4th Row Expected: 0 Current:\", actualNetPreCatExposedLimit);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 4th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 4th Row\", () => {\r",
							"  const expectedNetPreCatLoss = 0;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[3][\"Net Pre Cat Loss\"];\r",
							"  pm.expect(actualNetPreCatLoss).to.eql(expectedNetPreCatLoss);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 4th Row Expected: 0 Current:\", actualNetPreCatLoss);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 4th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 4th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 0;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[3][\"Net of Fac Exposed Limit\"];\r",
							"  pm.expect(actualNetOfFacExposedLimit).to.eql(expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Net of Fac Exposed Limit Miss Matching In 4th Row Expected: 0 Current:\", actualNetOfFacExposedLimit);\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 4th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 4th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 4th Row Expected: 0 Current:\", responseJson.Value.Analysis0[3][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 4th Row\r",
							"pm.test(\"Validating Treaty Loss Of 4th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 4th Row Expected: 0 Current:\", responseJson.Value.Analysis0[3][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of 5th Row, LOGAN TOWNSHIP NJ - 2244153\r",
							"pm.test(\"Validating Asset Name Of 5th Row, LOGAN TOWNSHIP NJ - 2244153\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Asset Name\"]).to.eql(\"LOGAN TOWNSHIP NJ - 2244153\");\r",
							"  console.log(\"Asset Name Miss Matching In 5th Row Expected: LOGAN TOWNSHIP NJ - 2244153 Current:\", responseJson.Value.Analysis0[4][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 5th Row, LOGAN TOWNSHIP NJ - 2244153\r",
							"pm.test(\"Validating Asset Number Of 5th Row, LOGAN TOWNSHIP NJ - 2244153\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Asset Number\"]).to.eql(2244153);\r",
							"  console.log(\"Asset Number Miss Matching In 5th Row Expected: 2244153 Current:\", responseJson.Value.Analysis0[4][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 5th Row, LOGAN TOWNSHIP NJ - 2244153\r",
							"pm.test(\"Validating Contract Number Of 5th Row, LOGAN TOWNSHIP NJ - 2244153\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Contract Number\"]).to.eql(\"6968\");\r",
							"  console.log(\"Contract Number Miss Matching In 5th Row Expected: 6968 Current:\", responseJson.Value.Analysis0[4][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 5th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 5th Row\", () => {\r",
							"  const expectedContractLoss_EL = 312526.32731981634;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[4][\"ContractLoss_Value All Types_EL\"];\r",
							"  pm.expect(actualContractLoss_EL).to.eql(expectedContractLoss_EL);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching In 5th Row Expected: 312526.32731981634 Current:\", actualContractLoss_EL);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 5th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 5th Row\", () => {\r",
							"  const expectedContractLoss_GL = 113780.21562595293;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[4][\"ContractLoss_Value All Types_GL\"];\r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 5th Row Expected: 113780.21562595293 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 5th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 5th Row\", () => {\r",
							"  const expectedGroundUpLoss = 6215653.753269911;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[4][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 5th Row\r",
							"pm.test(\"Validating Intensity Of 5th Row\", () => {\r",
							"  const expectedIntensity = 3.084139823913574;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[4][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 5th Row\r",
							"pm.test(\"Validating TIV Of 5th Row\", () => {\r",
							"  const expectedTIV = 16550588;\r",
							"  const actualTIV = responseJson.Value.Analysis0[4][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 5th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 5th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 312526.32731981634;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[4][\"Net Pre Cat Exposed Limit\"];\r",
							"  pm.expect(actualNetPreCatExposedLimit).to.eql(expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Miss Matching In 5th Row Expected: 312526.32731981634 Current:\", actualNetPreCatExposedLimit);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 5th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 5th Row\", () => {\r",
							"  const expectedNetPreCatLoss = 113780.21562595293;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[4][\"Net Pre Cat Loss\"];\r",
							"  pm.expect(actualNetPreCatLoss).to.eql(expectedNetPreCatLoss);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 5th Row Expected: 113780.21562595293 Current:\", actualNetPreCatLoss);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 5th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 5th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 312526.32731981634;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[4][\"Net of Fac Exposed Limit\"];\r",
							"  pm.expect(actualNetOfFacExposedLimit).to.eql(expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Net of Fac Exposed Limit Miss Matching In 5th Row Expected: 312526.32731981634 Current:\", actualNetOfFacExposedLimit);\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 5th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 5th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 5th Row Expected: 0 Current:\", responseJson.Value.Analysis0[4][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 5th Row\r",
							"pm.test(\"Validating Treaty Loss Of 5th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 5th Row Expected: 0 Current:\", responseJson.Value.Analysis0[4][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of 10th Row, E.RUTHERFORD NJ - 2239108\r",
							"pm.test(\"Validating Asset Name Of 10th Row, E.RUTHERFORD NJ - 2239108\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Asset Name\"]).to.eql(\"E.RUTHERFORD NJ - 2239108\");\r",
							"  console.log(\"Asset Name Miss Matching In 10th Row Expected: E.RUTHERFORD NJ - 2239108 Current:\", responseJson.Value.Analysis0[9][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 10th Row, E.RUTHERFORD NJ - 2239108\r",
							"pm.test(\"Validating Asset Number Of 10th Row, E.RUTHERFORD NJ - 2239108\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Asset Number\"]).to.eql(2239108);\r",
							"  console.log(\"Asset Number Miss Matching In 10th Row Expected: 2239108 Current:\", responseJson.Value.Analysis0[9][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 10th Row, E.RUTHERFORD NJ - 2239108\r",
							"pm.test(\"Validating Contract Number Of 10th Row, E.RUTHERFORD NJ - 2239108\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Contract Number\"]).to.eql(\"6949\");\r",
							"  console.log(\"Contract Number Miss Matching In 10th Row Expected: 6949 Current:\", responseJson.Value.Analysis0[9][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 10th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 10th Row\", () => {\r",
							"  const expectedContractLoss_EL = 98972.08727577486;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[9][\"ContractLoss_Value All Types_EL\"];\r",
							"  pm.expect(actualContractLoss_EL).to.eql(expectedContractLoss_EL);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching In 10th Row Expected: 98972.08727577486 Current:\", actualContractLoss_EL);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 10th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 10th Row\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[9][\"ContractLoss_Value All Types_GL\"];\r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 10th Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 10th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 10th Row\", () => {\r",
							"  const expectedGroundUpLoss = 2569682.577934774;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[9][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 10th Row\r",
							"pm.test(\"Validating Intensity Of 10th Row\", () => {\r",
							"  const expectedIntensity = 2.4279398918151855;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[9][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 10th Row\r",
							"pm.test(\"Validating TIV Of 10th Row\", () => {\r",
							"  const expectedTIV = 7456336.426200001;\r",
							"  const actualTIV = responseJson.Value.Analysis0[9][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 10th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 10th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 98972.08727577486;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[9][\"Net Pre Cat Exposed Limit\"];\r",
							"  pm.expect(actualNetPreCatExposedLimit).to.eql(expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Miss Matching In 10th Row Expected: 98972.08727577486 Current:\", actualNetPreCatExposedLimit);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 10th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 10th Row\", () => {\r",
							"  const expectedNetPreCatLoss = 0;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[9][\"Net Pre Cat Loss\"];\r",
							"  pm.expect(actualNetPreCatLoss).to.eql(expectedNetPreCatLoss);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 10th Row Expected: 0 Current:\", actualNetPreCatLoss);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 10th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 10th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 98972.08727577486;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[9][\"Net of Fac Exposed Limit\"];\r",
							"  pm.expect(actualNetOfFacExposedLimit).to.eql(expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Net of Fac Exposed Limit Miss Matching In 10th Row Expected: 98972.08727577486 Current:\", actualNetOfFacExposedLimit);\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 10th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 10th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 10th Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 10th Row\r",
							"pm.test(\"Validating Treaty Loss Of 10th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 10th Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of 15th Row, SECAUCUS NJ - 2239109\r",
							"pm.test(\"Validating Asset Name Of 15th Row, SECAUCUS NJ - 2239109\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Asset Name\"]).to.eql(\"SECAUCUS NJ - 2239109\");\r",
							"  console.log(\"Asset Name Miss Matching In 15th Row Expected: SECAUCUS NJ - 2239109 Current:\", responseJson.Value.Analysis0[14][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 15th Row, SECAUCUS NJ - 2239109\r",
							"pm.test(\"Validating Asset Number Of 15th Row, SECAUCUS NJ - 2239109\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Asset Number\"]).to.eql(2239109);\r",
							"  console.log(\"Asset Number Miss Matching In 15th Row Expected: 2239109 Current:\", responseJson.Value.Analysis0[14][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 15th Row, SECAUCUS NJ - 2239109\r",
							"pm.test(\"Validating Contract Number Of 15th Row, SECAUCUS NJ - 2239109\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Contract Number\"]).to.eql(\"6949\");\r",
							"  console.log(\"Contract Number Miss Matching In 15th Row Expected: 6949 Current:\", responseJson.Value.Analysis0[14][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 15th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 15th Row\", () => {\r",
							"  const expectedContractLoss_EL = 35261.80569184846;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[14][\"ContractLoss_Value All Types_EL\"];\r",
							"  pm.expect(actualContractLoss_EL).to.eql(expectedContractLoss_EL);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching In 15th Row Expected: 35261.80569184846 Current:\", actualContractLoss_EL);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 15th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 15th Row\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[14][\"ContractLoss_Value All Types_GL\"];\r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 15th Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 15th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 15th Row\", () => {\r",
							"  const expectedGroundUpLoss = 936065.1884797115;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[14][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 15th Row\r",
							"pm.test(\"Validating Intensity Of 15th Row\", () => {\r",
							"  const expectedIntensity = 2.5919899940490723;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[14][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 15th Row\r",
							"pm.test(\"Validating TIV Of 15th Row\", () => {\r",
							"  const expectedTIV = 2656545.835;\r",
							"  const actualTIV = responseJson.Value.Analysis0[14][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 15th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 15th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 35261.80569184846;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[14][\"Net Pre Cat Exposed Limit\"];\r",
							"  pm.expect(actualNetPreCatExposedLimit).to.eql(expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Miss Matching In 15th Row Expected: 35261.80569184846 Current:\", actualNetPreCatExposedLimit);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 15th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 15th Row\", () => {\r",
							"  const expectedNetPreCatLoss = 0;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[14][\"Net Pre Cat Loss\"];\r",
							"  pm.expect(actualNetPreCatLoss).to.eql(expectedNetPreCatLoss);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 15th Row Expected: 0 Current:\", actualNetPreCatLoss);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 15th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 15th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 35261.80569184846;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[14][\"Net of Fac Exposed Limit\"];\r",
							"  pm.expect(actualNetOfFacExposedLimit).to.eql(expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Net of Fac Exposed Limit Miss Matching In 15th Row Expected: 35261.80569184846 Current:\", actualNetOfFacExposedLimit);\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 15th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 15th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 15th Row Expected: 0 Current:\", responseJson.Value.Analysis0[14][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 15th Row\r",
							"pm.test(\"Validating Treaty Loss Of 15th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 15th Row Expected: 0 Current:\", responseJson.Value.Analysis0[14][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of 20th Row, LONG ISLAND NY - 2238054\r",
							"pm.test(\"Validating Asset Name Of 20th Row, LONG ISLAND NY - 2238054\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Name\"]).to.eql(\"LONG ISLAND NY - 2238054\");\r",
							"  console.log(\"Asset Name Miss Matching In 20th Row Expected: LONG ISLAND NY - 2238054 Current:\", responseJson.Value.Analysis0[19][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 20th Row, LONG ISLAND NY - 2238054\r",
							"pm.test(\"Validating Asset Number Of 20th Row, LONG ISLAND NY - 2238054\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Number\"]).to.eql(2238054);\r",
							"  console.log(\"Asset Number Miss Matching In 20th Row Expected: 2238054 Current:\", responseJson.Value.Analysis0[19][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 20th Row, LONG ISLAND NY - 2238054\r",
							"pm.test(\"Validating Contract Number Of 20th Row, LONG ISLAND NY - 2238054\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Contract Number\"]).to.eql(\"6927\");\r",
							"  console.log(\"Contract Number Miss Matching In 20th Row Expected: 6927 Current:\", responseJson.Value.Analysis0[19][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 20th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 20th Row\", () => {\r",
							"  const expectedContractLoss_EL = 0;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_EL\"];\r",
							"  pm.expect(actualContractLoss_EL).to.eql(expectedContractLoss_EL);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching In 20th Row Expected: 0 Current:\", actualContractLoss_EL);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 20th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 20th Row\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_GL\"];\r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 20th Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 20th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 20th Row\", () => {\r",
							"  const expectedGroundUpLoss = 264206.8879424797;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[19][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 20th Row\r",
							"pm.test(\"Validating Intensity Of 20th Row\", () => {\r",
							"  const expectedIntensity = 1.6076899766921997;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[19][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 20th Row\r",
							"pm.test(\"Validating TIV Of 20th Row\", () => {\r",
							"  const expectedTIV = 967986.1776;\r",
							"  const actualTIV = responseJson.Value.Analysis0[19][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 20th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 20th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 0;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[19][\"Net Pre Cat Exposed Limit\"];\r",
							"  pm.expect(actualNetPreCatExposedLimit).to.eql(expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Miss Matching In 20th Row Expected: 0 Current:\", actualNetPreCatExposedLimit);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 20th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 20th Row\", () => {\r",
							"  const expectedNetPreCatLoss = 0;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[19][\"Net Pre Cat Loss\"];\r",
							"  pm.expect(actualNetPreCatLoss).to.eql(expectedNetPreCatLoss);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 20th Row Expected: 0 Current:\", actualNetPreCatLoss);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 20th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 20th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 0;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[19][\"Net of Fac Exposed Limit\"];\r",
							"  pm.expect(actualNetOfFacExposedLimit).to.eql(expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Net of Fac Exposed Limit Miss Matching In 20th Row Expected: 0 Current:\", actualNetOfFacExposedLimit);\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 20th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 20th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 20th Row Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 20th Row\r",
							"pm.test(\"Validating Treaty Loss Of 20th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 20th Row Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Treaty Loss\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"AdditionalSortMeasure\": \"TIV\",\r\n    \"AttributeList\": [\r\n        \"#\",\r\n        \"Asset Number\",\r\n        \"Asset Name\",\r\n        \"Contract Number\",\r\n        \"ContractLoss_Value All Types_EL\",\r\n        \"TIV\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Intensity\",\r\n        \"GroundUpLoss\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ],\r\n    \"SortDirection\": -1,\r\n    \"Count\": 20,\r\n    \"TopNBy\": \"GroundUpLoss\",\r\n    \"ContractMode\": false,\r\n    \"PercentageAttributes\": false,\r\n    \"TopNAssetsBy\": \"GroundUpLoss\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/topn",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"topn"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tiv/TIV Range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"//const data1 = JSON(responseJson);\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === <1M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === <1M\", () => {\r",
							"    const TIVRange1M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"<1M\");\r",
							"    pm.expect(TIVRange1M[\"TIV\"]).to.eql(4857943.126499999);  // Validating TIV\r",
							"    pm.expect(TIVRange1M[\"TIV Range\"]).to.eql(\"<1M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1M[\"Percentage\"].toFixed(0)).to.eql(0.41.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 1M - 5M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 1M -5M\", () => {\r",
							"    const TIVRange1M_5M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"1M -5M\");\r",
							"    pm.expect(TIVRange1M_5M[\"TIV\"]).to.eql(17925783.455);  // Validating TIV\r",
							"    pm.expect(TIVRange1M_5M[\"TIV Range\"]).to.eql(\"1M -5M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1M_5M[\"Percentage\"].toFixed(0)).to.eql(1.51.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\", () => {\r",
							"    const TIVRange5M_10M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"5M – 10M\");\r",
							"    pm.expect(TIVRange5M_10M[\"TIV\"]).to.eql(50058369.165800005);  // Validating TIV\r",
							"    pm.expect(TIVRange5M_10M[\"TIV Range\"]).to.eql(\"5M – 10M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange5M_10M[\"Percentage\"].toFixed(0)).to.eql(4.22.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 10M - 50M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 10M -50M\", () => {\r",
							"    const TIVRange10M_50M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"10M -50M\");\r",
							"    pm.expect(TIVRange10M_50M[\"TIV\"]).to.eql(71449601.32);  // Validating TIV\r",
							"    pm.expect(TIVRange10M_50M[\"TIV Range\"]).to.eql(\"10M -50M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange10M_50M[\"Percentage\"].toFixed(0)).to.eql(6.02.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 50M-100M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 50M-100M\", () => {\r",
							"    const TIVRange50M_100M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"50M-100M\");\r",
							"    pm.expect(TIVRange50M_100M[\"TIV\"]).to.eql(63402117.98);  // Validating TIV\r",
							"    pm.expect(TIVRange50M_100M[\"TIV Range\"]).to.eql(\"50M-100M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange50M_100M[\"Percentage\"].toFixed(0)).to.eql(5.35.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 100M-500M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 100M-500M\", () => {\r",
							"    const TIVRange100M_500M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"100M-500M\");\r",
							"    pm.expect(TIVRange100M_500M[\"TIV\"]).to.eql(0);  // Validating TIV\r",
							"    pm.expect(TIVRange100M_500M[\"TIV Range\"]).to.eql(\"100M-500M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange100M_500M[\"Percentage\"]).to.eql(0);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 500M-1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 500M-1B\", () => {\r",
							"    const TIVRange500M_1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"500M-1B\");\r",
							"    pm.expect(TIVRange500M_1B[\"TIV\"]).to.eql(978220260);  // Validating TIV\r",
							"    pm.expect(TIVRange500M_1B[\"TIV Range\"]).to.eql(\"500M-1B\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange500M_1B[\"Percentage\"].toFixed(0)).to.eql(82.49.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === >1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === >1B\", () => {\r",
							"    const TIVRange1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \">1B\");\r",
							"    pm.expect(TIVRange1B[\"TIV\"]).to.eql(0);  // Validating TIV\r",
							"    pm.expect(TIVRange1B[\"TIV Range\"]).to.eql(\">1B\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1B[\"Percentage\"]).to.eql(0);  // Validating Percentage\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"TIV\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"TIV\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}