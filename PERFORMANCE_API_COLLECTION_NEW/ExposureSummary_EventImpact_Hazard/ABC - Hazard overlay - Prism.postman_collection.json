{
	"info": {
		"_postman_id": "7cd6233c-b518-46f4-8cd5-5c861a23e27e",
		"name": "ABC - Hazard overlay : Prism",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14426843"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set analysis - Hazard - GSHAP Global Seismic Hazard Map (PGA 10% in 50 Years)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"setTimeout(function() {\r",
							"    console.log(\"Next API Call After 3 Minutes \")\r",
							"}, 180000);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 32531,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"analysisObject\": [\r\n        {\r\n            \"CurrencyCode\": \"USD\",\r\n            \"IncludeAllContracts\": true,\r\n            \"big_tiff_flag\": true,\r\n            \"damageAdjustment\": 1,\r\n            \"ValuationTypeCode\": 1,\r\n            \"ExposureFilterSets\": {\r\n                \"AssetModel\": \"ERBASICS\",\r\n                \"FilterList\": [\r\n                    {\r\n                        \"AndOr\": \"AND\",\r\n                        \"FilterList\": [\r\n                            {\r\n                                \"AssetType\": \"Site\",\r\n                                \"Attribute\": \"Cause Of Loss\",\r\n                                \"Operator\": \"EQ\",\r\n                                \"Value\": \"FLXX\",\r\n                                \"AndOr\": \"AND\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"quantile\": 50,\r\n            \"Events\": [\r\n                {\r\n                    \"EventID\": 1521538,\r\n                    \"SeverityModelID\": 422\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/analysis/load-exposure",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"load-exposure"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposure Summary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Asset Count\r",
							"pm.test(\"Validating Asset Count\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Asset Count\"]).to.eql(397852);\r",
							"  console.log(\"Asset Count Value is matching. Expected: 397852, Current: \", responseJson.Value.Analysis0[\"Asset Count\"]);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Contracts Count\r",
							"pm.test(\"Validating Contract Count\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"#Contracts\"]).to.eql(1345);\r",
							"  console.log(\"Contract Count Value is matching. Expected: 1345, Current: \", responseJson.Value.Analysis0[\"#Contracts\"]);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay ContractLoss_Value All Types_EL\", () => {\r",
							"  const expectedContractLoss_EL = 455441465963.3514;\r",
							"  const actualContractLoss_EL = responseJson[\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Gross Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Gross Exposed Limit\", () => {\r",
							"  const expectedGrossExposedLimit = 455441465963.3514;\r",
							"  const actualGrossExposedLimit = responseJson[\"Gross Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedGrossExposedLimit - actualGrossExposedLimit);\r",
							"  console.log(\"Expected Gross Exposed Limit: \", expectedGrossExposedLimit);\r",
							"  console.log(\"Actual Gross Exposed Limit: \", actualGrossExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Gross Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Gross Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay GroundUpLoss\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay GroundUpLoss\", () => {\r",
							"  const expectedGroundUpLoss = 0;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[\"GroundUpLoss\"];\r",
							"  \r",
							"  pm.expect(actualGroundUpLoss).to.eql(expectedGroundUpLoss);\r",
							"  console.log(\"GroundUpLoss Value is matching. Expected: 0, Current: \", actualGroundUpLoss);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Net Pre Cat Exposed Limit\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 5117464221.981455;\r",
							"  const actualNetPreCatExposedLimit = responseJson[\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Net Pre Cat Loss\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Net Pre Cat Loss\", () => {\r",
							"  const expectedNetPreCatLoss = 0;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[\"Net Pre Cat Loss\"];\r",
							"  \r",
							"  pm.expect(actualNetPreCatLoss).to.eql(expectedNetPreCatLoss);\r",
							"  console.log(\"Net Pre Cat Loss Value is matching. Expected: 0, Current: \", actualNetPreCatLoss);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Net of Fac Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Net of Fac Exposed Limit\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 455432465963.3514;\r",
							"  const actualNetOfFacExposedLimit = responseJson[\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Net of Fac Loss\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Net of Fac Loss\", () => {\r",
							"  const expectedNetOfFacLoss = 0;\r",
							"  const actualNetOfFacLoss = responseJson.Value.Analysis0[\"Net of Fac Loss\"];\r",
							"  \r",
							"  pm.expect(actualNetOfFacLoss).to.eql(expectedNetOfFacLoss);\r",
							"  console.log(\"Net of Fac Loss Value is matching. Expected: 0, Current: \", actualNetOfFacLoss);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Fac Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Fac Exposed Limit\", () => {\r",
							"  const expectedFacExposedLimit = 9000000;\r",
							"  const actualFacExposedLimit = responseJson[\"Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedFacExposedLimit - actualFacExposedLimit);\r",
							"  console.log(\"Expected Fac Exposed Limit: \", expectedFacExposedLimit);\r",
							"  console.log(\"Actual Fac Exposed Limit: \", actualFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Fac Loss\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Fac Loss\", () => {\r",
							"  const expectedFacLoss = 0;\r",
							"  const actualFacLoss = responseJson.Value.Analysis0[\"Fac loss\"];\r",
							"  \r",
							"  pm.expect(actualFacLoss).to.eql(expectedFacLoss);\r",
							"  console.log(\"Fac Loss Value is matching. Expected: 0, Current: \", actualFacLoss);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Treaty Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Treaty Exposed Limit\", () => {\r",
							"  const expectedTreatyExposedLimit = 450315001741.36536;\r",
							"  const actualTreatyExposedLimit = responseJson[\"Treaty Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTreatyExposedLimit - actualTreatyExposedLimit);\r",
							"  console.log(\"Expected Treaty Exposed Limit: \", expectedTreatyExposedLimit);\r",
							"  console.log(\"Actual Treaty Exposed Limit: \", actualTreatyExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Treaty Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Treaty Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Treaty Loss\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Treaty Loss\", () => {\r",
							"  const expectedTreatyLoss = 0;\r",
							"  const actualTreatyLoss = responseJson.Value.Analysis0[\"Treaty Loss\"];\r",
							"  \r",
							"  pm.expect(actualTreatyLoss).to.eql(expectedTreatyLoss);\r",
							"  console.log(\"Treaty Loss Value is matching. Expected: 0, Current: \", actualTreatyLoss);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"measures\": [\r\n        \"Asset Count\",\r\n        \"#Contracts\",\r\n        \"TIV\",\r\n        \"Gross Exposed Limit\",\r\n        \"GroundUpLoss\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/analysis/summary",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"summary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Top 20 Assets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log(\"-------- TOP N First Row Value --------\")\r",
							"\r",
							"// Validating Asset Name Of First Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Name Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Name\"]).to.eql(\"2429201 - LocName_840467\");\r",
							"  console.log(\"Asset Name Miss Matching In First Row Expected: 2429201 - LocName_840467 Current:\", responseJson.Value.Analysis0[0][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of First Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Number Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Number\"]).to.eql(2429201);\r",
							"  console.log(\"Asset Number Miss Matching In First Row Expected: 2429201 Current:\", responseJson.Value.Analysis0[0][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Schedule Name Of First Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Schedule Name Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Schedule Name\"]).to.eql(276321074);\r",
							"  console.log(\"Asset Schedule Name Miss Matching In First Row Expected: 276321074 Current:\", responseJson.Value.Analysis0[0][\"Asset Schedule Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of First Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Contract Number Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Contract Number\"]).to.eql(\"xxxxxxxx - 8163\");\r",
							"  console.log(\"Contract Number Miss Matching In First Row Expected: xxxxxxxx - 8163 Current:\", responseJson.Value.Analysis0[0][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of First Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_EL = 1271067188.850776;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of First Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_GL\"];\r",
							"  \r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In First Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating DamageFactor Of First Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating DamageFactor Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedDamageFactor = 0;\r",
							"  const actualDamageFactor = responseJson.Value.Analysis0[0][\"DamageFactor\"];\r",
							"  \r",
							"  pm.expect(actualDamageFactor).to.eql(expectedDamageFactor);\r",
							"  console.log(\"DamageFactor Miss Matching In First Row Expected: 0 Current:\", actualDamageFactor);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of First Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating GroundUpLoss Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedGroundUpLoss = 0;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[0][\"GroundUpLoss\"];\r",
							"  \r",
							"  pm.expect(actualGroundUpLoss).to.eql(expectedGroundUpLoss);\r",
							"  console.log(\"GroundUpLoss Miss Matching In First Row Expected: 0 Current:\", actualGroundUpLoss);\r",
							"});\r",
							"\r",
							"// Validating Intensity Of First Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensity = 0.6233519911766052;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[0][\"Intensity\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Given that the values are floating points, a smaller threshold\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Description Of First Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Description Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensityDescription = \"< 1 ft\";\r",
							"  const actualIntensityDescription = responseJson.Value.Analysis0[0][\"Intensity Description\"];\r",
							"  \r",
							"  pm.expect(actualIntensityDescription).to.eql(expectedIntensityDescription);\r",
							"  console.log(\"Intensity Description Miss Matching In First Row Expected: < 1 ft Current:\", actualIntensityDescription);\r",
							"});\r",
							"\r",
							"// Validating Latitude Of First Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Latitude Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLatitude = 36.11319351196289;\r",
							"  const actualLatitude = responseJson.Value.Analysis0[0][\"Latitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLatitude - actualLatitude);\r",
							"  console.log(\"Expected Latitude: \", expectedLatitude);\r",
							"  console.log(\"Actual Latitude: \", actualLatitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Similar to intensity, using a small threshold\r",
							"    throw new Error(`Latitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Latitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Longitude Of First Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Longitude Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLongitude = -115.17642974853516;\r",
							"  const actualLongitude = responseJson.Value.Analysis0[0][\"Longitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLongitude - actualLongitude);\r",
							"  console.log(\"Expected Longitude: \", expectedLongitude);\r",
							"  console.log(\"Actual Longitude: \", actualLongitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Using a small threshold for longitude\r",
							"    throw new Error(`Longitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Longitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Number of Stories Of First Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Number of Stories Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Number of Stories\"]).to.eql(36);\r",
							"  console.log(\"Number of Stories Miss Matching In First Row Expected: 36 Current:\", responseJson.Value.Analysis0[0][\"Number of Stories\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of First Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating TIV Of First Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedTIV = 2542150168.2;\r",
							"  const actualTIV = responseJson.Value.Analysis0[0][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {  // TIV seems like a large number, so 1 is an acceptable threshold\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"console.log(\"-------- TOP N Second Row Value --------\")\r",
							"\r",
							"// Validating Asset Name Of Second Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Name Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Name\"]).to.eql(\"2429209 - LocName_2243010\");\r",
							"  console.log(\"Asset Name Miss Matching In Second Row Expected: 2429209 - LocName_2243010 Current:\", responseJson.Value.Analysis0[1][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Second Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Number Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Number\"]).to.eql(2429209);\r",
							"  console.log(\"Asset Number Miss Matching In Second Row Expected: 2429209 Current:\", responseJson.Value.Analysis0[1][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Schedule Name Of Second Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Schedule Name Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Schedule Name\"]).to.eql(276321074);\r",
							"  console.log(\"Asset Schedule Name Miss Matching In Second Row Expected: 276321074 Current:\", responseJson.Value.Analysis0[1][\"Asset Schedule Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Second Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Contract Number Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Contract Number\"]).to.eql(\"xxxxxxxx - 8163\");\r",
							"  console.log(\"Contract Number Miss Matching In Second Row Expected: xxxxxxxx - 8163 Current:\", responseJson.Value.Analysis0[1][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Second Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_EL = 1054804525.5689259;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Second Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_GL\"];\r",
							"  \r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Second Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating DamageFactor Of Second Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating DamageFactor Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedDamageFactor = 0;\r",
							"  const actualDamageFactor = responseJson.Value.Analysis0[1][\"DamageFactor\"];\r",
							"  \r",
							"  pm.expect(actualDamageFactor).to.eql(expectedDamageFactor);\r",
							"  console.log(\"DamageFactor Miss Matching In Second Row Expected: 0 Current:\", actualDamageFactor);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Second Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating GroundUpLoss Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedGroundUpLoss = 0;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[1][\"GroundUpLoss\"];\r",
							"  \r",
							"  pm.expect(actualGroundUpLoss).to.eql(expectedGroundUpLoss);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Second Row Expected: 0 Current:\", actualGroundUpLoss);\r",
							"});\r",
							"\r",
							"// Validating Intensity Of Second Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensity = 0;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[1][\"Intensity\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for comparison\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Description Of Second Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Description Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensityDescription = \"Unknown\";\r",
							"  const actualIntensityDescription = responseJson.Value.Analysis0[1][\"Intensity Description\"];\r",
							"  \r",
							"  pm.expect(actualIntensityDescription).to.eql(expectedIntensityDescription);\r",
							"  console.log(\"Intensity Description Miss Matching In Second Row Expected: Unknown Current:\", actualIntensityDescription);\r",
							"});\r",
							"\r",
							"// Validating Latitude Of Second Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Latitude Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLatitude = 36.10246276855469;\r",
							"  const actualLatitude = responseJson.Value.Analysis0[1][\"Latitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLatitude - actualLatitude);\r",
							"  console.log(\"Expected Latitude: \", expectedLatitude);\r",
							"  console.log(\"Actual Latitude: \", actualLatitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for latitude\r",
							"    throw new Error(`Latitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Latitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Longitude Of Second Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Longitude Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLongitude = -115.16996002197266;\r",
							"  const actualLongitude = responseJson.Value.Analysis0[1][\"Longitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLongitude - actualLongitude);\r",
							"  console.log(\"Expected Longitude: \", expectedLongitude);\r",
							"  console.log(\"Actual Longitude: \", actualLongitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for longitude\r",
							"    throw new Error(`Longitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Longitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Number of Stories Of Second Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Number of Stories Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Number of Stories\"]).to.eql(30);\r",
							"  console.log(\"Number of Stories Miss Matching In Second Row Expected: 30 Current:\", responseJson.Value.Analysis0[1][\"Number of Stories\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Second Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating TIV Of Second Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedTIV = 2109622155;\r",
							"  const actualTIV = responseJson.Value.Analysis0[1][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {  // TIV is large, so allow a difference of 1\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"console.log(\"-------- TOP N Fourth Row Value --------\")\r",
							"\r",
							"// Validating Asset Name Of Fourth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Name Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Asset Name\"]).to.eql(\"2429205 - LocName_2146780\");\r",
							"  console.log(\"Asset Name Miss Matching In Fourth Row Expected: 2429205 - LocName_2146780 Current:\", responseJson.Value.Analysis0[3][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Fourth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Number Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Asset Number\"]).to.eql(2429205);\r",
							"  console.log(\"Asset Number Miss Matching In Fourth Row Expected: 2429205 Current:\", responseJson.Value.Analysis0[3][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Schedule Name Of Fourth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Schedule Name Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Asset Schedule Name\"]).to.eql(276321074);\r",
							"  console.log(\"Asset Schedule Name Miss Matching In Fourth Row Expected: 276321074 Current:\", responseJson.Value.Analysis0[3][\"Asset Schedule Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Fourth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Contract Number Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Contract Number\"]).to.eql(\"xxxxxxxx - 8163\");\r",
							"  console.log(\"Contract Number Miss Matching In Fourth Row Expected: xxxxxxxx - 8163 Current:\", responseJson.Value.Analysis0[3][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_EL = 798704659.6863418;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[3][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[3][\"ContractLoss_Value All Types_GL\"];\r",
							"  \r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Fourth Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating DamageFactor Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating DamageFactor Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedDamageFactor = 0;\r",
							"  const actualDamageFactor = responseJson.Value.Analysis0[3][\"DamageFactor\"];\r",
							"  \r",
							"  pm.expect(actualDamageFactor).to.eql(expectedDamageFactor);\r",
							"  console.log(\"DamageFactor Miss Matching In Fourth Row Expected: 0 Current:\", actualDamageFactor);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating GroundUpLoss Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedGroundUpLoss = 0;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[3][\"GroundUpLoss\"];\r",
							"  \r",
							"  pm.expect(actualGroundUpLoss).to.eql(expectedGroundUpLoss);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Fourth Row Expected: 0 Current:\", actualGroundUpLoss);\r",
							"});\r",
							"\r",
							"// Validating Intensity Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensity = 0;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[3][\"Intensity\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for comparison\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Description Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Description Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensityDescription = \"Unknown\";\r",
							"  const actualIntensityDescription = responseJson.Value.Analysis0[3][\"Intensity Description\"];\r",
							"  \r",
							"  pm.expect(actualIntensityDescription).to.eql(expectedIntensityDescription);\r",
							"  console.log(\"Intensity Description Miss Matching In Fourth Row Expected: Unknown Current:\", actualIntensityDescription);\r",
							"});\r",
							"\r",
							"// Validating Latitude Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Latitude Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLatitude = 36.096229553222656;\r",
							"  const actualLatitude = responseJson.Value.Analysis0[3][\"Latitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLatitude - actualLatitude);\r",
							"  console.log(\"Expected Latitude: \", expectedLatitude);\r",
							"  console.log(\"Actual Latitude: \", actualLatitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for latitude\r",
							"    throw new Error(`Latitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Latitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Longitude Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Longitude Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLongitude = -115.17333984375;\r",
							"  const actualLongitude = responseJson.Value.Analysis0[3][\"Longitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLongitude - actualLongitude);\r",
							"  console.log(\"Expected Longitude: \", expectedLongitude);\r",
							"  console.log(\"Actual Longitude: \", actualLongitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for longitude\r",
							"    throw new Error(`Longitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Longitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Number of Stories Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Number of Stories Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Number of Stories\"]).to.eql(30);\r",
							"  console.log(\"Number of Stories Miss Matching In Fourth Row Expected: 30 Current:\", responseJson.Value.Analysis0[3][\"Number of Stories\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating TIV Of Fourth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedTIV = 1597419241.7;\r",
							"  const actualTIV = responseJson.Value.Analysis0[3][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {  // TIV is large, so allow a difference of 1\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"console.log(\"-------- TOP N Sevent Row Value --------\")\r",
							"\r",
							"// Validating Asset Name Of Seventh Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Name Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Asset Name\"]).to.eql(\"2315015 - LocName_704500\");\r",
							"  console.log(\"Asset Name Miss Matching In Seventh Row Expected: 2315015 - LocName_704500 Current:\", responseJson.Value.Analysis0[6][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Seventh Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Number Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Asset Number\"]).to.eql(2315015);\r",
							"  console.log(\"Asset Number Miss Matching In Seventh Row Expected: 2315015 Current:\", responseJson.Value.Analysis0[6][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Schedule Name Of Seventh Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Schedule Name Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Asset Schedule Name\"]).to.eql(276320801);\r",
							"  console.log(\"Asset Schedule Name Miss Matching In Seventh Row Expected: 276320801 Current:\", responseJson.Value.Analysis0[6][\"Asset Schedule Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Seventh Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Contract Number Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Contract Number\"]).to.eql(\"xxxxxxxx - 7890\");\r",
							"  console.log(\"Contract Number Miss Matching In Seventh Row Expected: xxxxxxxx - 7890 Current:\", responseJson.Value.Analysis0[6][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_EL = 668141426.9838527;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[6][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[6][\"ContractLoss_Value All Types_GL\"];\r",
							"  \r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Seventh Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating DamageFactor Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating DamageFactor Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedDamageFactor = 0;\r",
							"  const actualDamageFactor = responseJson.Value.Analysis0[6][\"DamageFactor\"];\r",
							"  \r",
							"  pm.expect(actualDamageFactor).to.eql(expectedDamageFactor);\r",
							"  console.log(\"DamageFactor Miss Matching In Seventh Row Expected: 0 Current:\", actualDamageFactor);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating GroundUpLoss Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedGroundUpLoss = 0;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[6][\"GroundUpLoss\"];\r",
							"  \r",
							"  pm.expect(actualGroundUpLoss).to.eql(expectedGroundUpLoss);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Seventh Row Expected: 0 Current:\", actualGroundUpLoss);\r",
							"});\r",
							"\r",
							"// Validating Intensity Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensity = 0.03280799835920334;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[6][\"Intensity\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for comparison\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Description Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Description Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensityDescription = \"< 1 ft\";\r",
							"  const actualIntensityDescription = responseJson.Value.Analysis0[6][\"Intensity Description\"];\r",
							"  \r",
							"  pm.expect(actualIntensityDescription).to.eql(expectedIntensityDescription);\r",
							"  console.log(\"Intensity Description Miss Matching In Seventh Row Expected: < 1 ft Current:\", actualIntensityDescription);\r",
							"});\r",
							"\r",
							"// Validating Latitude Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Latitude Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLatitude = 28.576282501220703;\r",
							"  const actualLatitude = responseJson.Value.Analysis0[6][\"Latitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLatitude - actualLatitude);\r",
							"  console.log(\"Expected Latitude: \", expectedLatitude);\r",
							"  console.log(\"Actual Latitude: \", actualLatitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for latitude\r",
							"    throw new Error(`Latitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Latitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Longitude Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Longitude Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLongitude = -81.36895751953125;\r",
							"  const actualLongitude = responseJson.Value.Analysis0[6][\"Longitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLongitude - actualLongitude);\r",
							"  console.log(\"Expected Longitude: \", expectedLongitude);\r",
							"  console.log(\"Actual Longitude: \", actualLongitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for longitude\r",
							"    throw new Error(`Longitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Longitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Number of Stories Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Number of Stories Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Number of Stories\"]).to.eql(12);\r",
							"  console.log(\"Number of Stories Miss Matching In Seventh Row Expected: 12 Current:\", responseJson.Value.Analysis0[6][\"Number of Stories\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating TIV Of Seventh Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedTIV = 1336379294.1999998;\r",
							"  const actualTIV = responseJson.Value.Analysis0[6][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {  // Allowing a small difference for large TIV values\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"console.log(\"-------- TOP N Ninth Row Value --------\")\r",
							"\r",
							"// Validating Asset Name Of Ninth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Name Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[8][\"Asset Name\"]).to.eql(\"2322254 - LocName_2378655\");\r",
							"  console.log(\"Asset Name Miss Matching In Ninth Row Expected: 2322254 - LocName_2378655 Current:\", responseJson.Value.Analysis0[8][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Ninth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Number Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[8][\"Asset Number\"]).to.eql(2322254);\r",
							"  console.log(\"Asset Number Miss Matching In Ninth Row Expected: 2322254 Current:\", responseJson.Value.Analysis0[8][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Schedule Name Of Ninth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Schedule Name Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[8][\"Asset Schedule Name\"]).to.eql(276320822);\r",
							"  console.log(\"Asset Schedule Name Miss Matching In Ninth Row Expected: 276320822 Current:\", responseJson.Value.Analysis0[8][\"Asset Schedule Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Ninth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Contract Number Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[8][\"Contract Number\"]).to.eql(\"xxxxxxxx - 7911\");\r",
							"  console.log(\"Contract Number Miss Matching In Ninth Row Expected: xxxxxxxx - 7911 Current:\", responseJson.Value.Analysis0[8][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_EL = 440917309.60562813;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[8][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[8][\"ContractLoss_Value All Types_GL\"];\r",
							"  \r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Ninth Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating DamageFactor Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating DamageFactor Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedDamageFactor = 0;\r",
							"  const actualDamageFactor = responseJson.Value.Analysis0[8][\"DamageFactor\"];\r",
							"  \r",
							"  pm.expect(actualDamageFactor).to.eql(expectedDamageFactor);\r",
							"  console.log(\"DamageFactor Miss Matching In Ninth Row Expected: 0 Current:\", actualDamageFactor);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating GroundUpLoss Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedGroundUpLoss = 0;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[8][\"GroundUpLoss\"];\r",
							"  \r",
							"  pm.expect(actualGroundUpLoss).to.eql(expectedGroundUpLoss);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Ninth Row Expected: 0 Current:\", actualGroundUpLoss);\r",
							"});\r",
							"\r",
							"// Validating Intensity Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensity = 0.5249279737472534;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[8][\"Intensity\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for comparison\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Description Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Description Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensityDescription = \"< 1 ft\";\r",
							"  const actualIntensityDescription = responseJson.Value.Analysis0[8][\"Intensity Description\"];\r",
							"  \r",
							"  pm.expect(actualIntensityDescription).to.eql(expectedIntensityDescription);\r",
							"  console.log(\"Intensity Description Miss Matching In Ninth Row Expected: < 1 ft Current:\", actualIntensityDescription);\r",
							"});\r",
							"\r",
							"// Validating Latitude Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Latitude Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLatitude = 40.75862503051758;\r",
							"  const actualLatitude = responseJson.Value.Analysis0[8][\"Latitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLatitude - actualLatitude);\r",
							"  console.log(\"Expected Latitude: \", expectedLatitude);\r",
							"  console.log(\"Actual Latitude: \", actualLatitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for latitude\r",
							"    throw new Error(`Latitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Latitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Longitude Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Longitude Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLongitude = -73.98626708984375;\r",
							"  const actualLongitude = responseJson.Value.Analysis0[8][\"Longitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLongitude - actualLongitude);\r",
							"  console.log(\"Expected Longitude: \", expectedLongitude);\r",
							"  console.log(\"Actual Longitude: \", actualLongitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for longitude\r",
							"    throw new Error(`Longitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Longitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Number of Stories Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Number of Stories Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[8][\"Number of Stories\"]).to.eql(50);\r",
							"  console.log(\"Number of Stories Miss Matching In Ninth Row Expected: 50 Current:\", responseJson.Value.Analysis0[8][\"Number of Stories\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating TIV Of Ninth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedTIV = 881902011.76;\r",
							"  const actualTIV = responseJson.Value.Analysis0[8][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {  // Allowing a small difference for large TIV values\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"console.log(\"-------- TOP N Twelth Row Value --------\")\r",
							"\r",
							"// Validating Asset Name Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Name Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Asset Name\"]).to.eql(\"2612672 - LocName_2531285\");\r",
							"  console.log(\"Asset Name Miss Matching In Twelfth Row Expected: 2612672 - LocName_2531285 Current:\", responseJson.Value.Analysis0[11][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Number Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Asset Number\"]).to.eql(2612672);\r",
							"  console.log(\"Asset Number Miss Matching In Twelfth Row Expected: 2612672 Current:\", responseJson.Value.Analysis0[11][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Schedule Name Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Schedule Name Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Asset Schedule Name\"]).to.eql(276321323);\r",
							"  console.log(\"Asset Schedule Name Miss Matching In Twelfth Row Expected: 276321323 Current:\", responseJson.Value.Analysis0[11][\"Asset Schedule Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Contract Number Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Contract Number\"]).to.eql(\"xxxxxxxx - 8412\");\r",
							"  console.log(\"Contract Number Miss Matching In Twelfth Row Expected: xxxxxxxx - 8412 Current:\", responseJson.Value.Analysis0[11][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_EL = 391449002.59537333;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[11][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[11][\"ContractLoss_Value All Types_GL\"];\r",
							"  \r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Twelfth Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating DamageFactor Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating DamageFactor Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedDamageFactor = 0;\r",
							"  const actualDamageFactor = responseJson.Value.Analysis0[11][\"DamageFactor\"];\r",
							"  \r",
							"  pm.expect(actualDamageFactor).to.eql(expectedDamageFactor);\r",
							"  console.log(\"DamageFactor Miss Matching In Twelfth Row Expected: 0 Current:\", actualDamageFactor);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating GroundUpLoss Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedGroundUpLoss = 0;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[11][\"GroundUpLoss\"];\r",
							"  \r",
							"  pm.expect(actualGroundUpLoss).to.eql(expectedGroundUpLoss);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Twelfth Row Expected: 0 Current:\", actualGroundUpLoss);\r",
							"});\r",
							"\r",
							"// Validating Intensity Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensity = 1.1810879707336426;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[11][\"Intensity\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for comparison\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Description Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Description Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensityDescription = \"< 3 ft\";\r",
							"  const actualIntensityDescription = responseJson.Value.Analysis0[11][\"Intensity Description\"];\r",
							"  \r",
							"  pm.expect(actualIntensityDescription).to.eql(expectedIntensityDescription);\r",
							"  console.log(\"Intensity Description Miss Matching In Twelfth Row Expected: < 3 ft Current:\", actualIntensityDescription);\r",
							"});\r",
							"\r",
							"// Validating Latitude Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Latitude Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLatitude = 29.708209991455078;\r",
							"  const actualLatitude = responseJson.Value.Analysis0[11][\"Latitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLatitude - actualLatitude);\r",
							"  console.log(\"Expected Latitude: \", expectedLatitude);\r",
							"  console.log(\"Actual Latitude: \", actualLatitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for latitude\r",
							"    throw new Error(`Latitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Latitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Longitude Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Longitude Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLongitude = -95.40279388427734;\r",
							"  const actualLongitude = responseJson.Value.Analysis0[11][\"Longitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLongitude - actualLongitude);\r",
							"  console.log(\"Expected Longitude: \", expectedLongitude);\r",
							"  console.log(\"Actual Longitude: \", actualLongitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for longitude\r",
							"    throw new Error(`Longitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Longitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Number of Stories Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Number of Stories Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Number of Stories\"]).to.eql(15);\r",
							"  console.log(\"Number of Stories Miss Matching In Twelfth Row Expected: 15 Current:\", responseJson.Value.Analysis0[11][\"Number of Stories\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating TIV Of Twelfth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedTIV = 782914824.46;\r",
							"  const actualTIV = responseJson.Value.Analysis0[11][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {  // Allowing a small difference for large TIV values\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"console.log(\"-------- TOP N 15th Row Value --------\")\r",
							"\r",
							"// Validating Asset Name Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Name Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Asset Name\"]).to.eql(\"2415037 - LocName_2969110\");\r",
							"  console.log(\"Asset Name Miss Matching In Fifteenth Row Expected: 2415037 - LocName_2969110 Current:\", responseJson.Value.Analysis0[14][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Number Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Asset Number\"]).to.eql(2415037);\r",
							"  console.log(\"Asset Number Miss Matching In Fifteenth Row Expected: 2415037 Current:\", responseJson.Value.Analysis0[14][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Schedule Name Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Schedule Name Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Asset Schedule Name\"]).to.eql(276321028);\r",
							"  console.log(\"Asset Schedule Name Miss Matching In Fifteenth Row Expected: 276321028 Current:\", responseJson.Value.Analysis0[14][\"Asset Schedule Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Contract Number Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Contract Number\"]).to.eql(\"xxxxxxxx - 8117\");\r",
							"  console.log(\"Contract Number Miss Matching In Fifteenth Row Expected: xxxxxxxx - 8117 Current:\", responseJson.Value.Analysis0[14][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_EL = 355162197.6603974;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[14][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[14][\"ContractLoss_Value All Types_GL\"];\r",
							"  \r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Fifteenth Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating DamageFactor Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating DamageFactor Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedDamageFactor = 0;\r",
							"  const actualDamageFactor = responseJson.Value.Analysis0[14][\"DamageFactor\"];\r",
							"  \r",
							"  pm.expect(actualDamageFactor).to.eql(expectedDamageFactor);\r",
							"  console.log(\"DamageFactor Miss Matching In Fifteenth Row Expected: 0 Current:\", actualDamageFactor);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating GroundUpLoss Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedGroundUpLoss = 0;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[14][\"GroundUpLoss\"];\r",
							"  \r",
							"  pm.expect(actualGroundUpLoss).to.eql(expectedGroundUpLoss);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Fifteenth Row Expected: 0 Current:\", actualGroundUpLoss);\r",
							"});\r",
							"\r",
							"// Validating Intensity Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensity = 0.06561599671840668;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[14][\"Intensity\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for comparison\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Description Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Description Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensityDescription = \"< 1 ft\";\r",
							"  const actualIntensityDescription = responseJson.Value.Analysis0[14][\"Intensity Description\"];\r",
							"  \r",
							"  pm.expect(actualIntensityDescription).to.eql(expectedIntensityDescription);\r",
							"  console.log(\"Intensity Description Miss Matching In Fifteenth Row Expected: < 1 ft Current:\", actualIntensityDescription);\r",
							"});\r",
							"\r",
							"// Validating Latitude Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Latitude Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLatitude = 30.32464027404785;\r",
							"  const actualLatitude = responseJson.Value.Analysis0[14][\"Latitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLatitude - actualLatitude);\r",
							"  console.log(\"Expected Latitude: \", expectedLatitude);\r",
							"  console.log(\"Actual Latitude: \", actualLatitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for latitude\r",
							"    throw new Error(`Latitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Latitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Longitude Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Longitude Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLongitude = -81.63863372802734;\r",
							"  const actualLongitude = responseJson.Value.Analysis0[14][\"Longitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLongitude - actualLongitude);\r",
							"  console.log(\"Expected Longitude: \", expectedLongitude);\r",
							"  console.log(\"Actual Longitude: \", actualLongitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for longitude\r",
							"    throw new Error(`Longitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Longitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Number of Stories Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Number of Stories Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Number of Stories\"]).to.eql(4);\r",
							"  console.log(\"Number of Stories Miss Matching In Fifteenth Row Expected: 4 Current:\", responseJson.Value.Analysis0[14][\"Number of Stories\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating TIV Of Fifteenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedTIV = 710350034.6919;\r",
							"  const actualTIV = responseJson.Value.Analysis0[14][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {  // Allowing a small difference for large TIV values\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"\r",
							"console.log(\"-------- TOP N 17th Row Value --------\")\r",
							"\r",
							"\r",
							"// Validating Asset Name Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Name Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Asset Name\"]).to.eql(\"2429200 - LocName_834100\");\r",
							"  console.log(\"Asset Name Miss Matching In Seventeenth Row Expected: 2429200 - LocName_834100 Current:\", responseJson.Value.Analysis0[16][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Number Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Asset Number\"]).to.eql(2429200);\r",
							"  console.log(\"Asset Number Miss Matching In Seventeenth Row Expected: 2429200 Current:\", responseJson.Value.Analysis0[16][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Schedule Name Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Schedule Name Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Asset Schedule Name\"]).to.eql(276321074);\r",
							"  console.log(\"Asset Schedule Name Miss Matching In Seventeenth Row Expected: 276321074 Current:\", responseJson.Value.Analysis0[16][\"Asset Schedule Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Contract Number Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Contract Number\"]).to.eql(\"xxxxxxxx - 8163\");\r",
							"  console.log(\"Contract Number Miss Matching In Seventeenth Row Expected: xxxxxxxx - 8163 Current:\", responseJson.Value.Analysis0[16][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_EL = 338650237.0699546;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[16][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[16][\"ContractLoss_Value All Types_GL\"];\r",
							"  \r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Seventeenth Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating DamageFactor Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating DamageFactor Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedDamageFactor = 0;\r",
							"  const actualDamageFactor = responseJson.Value.Analysis0[16][\"DamageFactor\"];\r",
							"  \r",
							"  pm.expect(actualDamageFactor).to.eql(expectedDamageFactor);\r",
							"  console.log(\"DamageFactor Miss Matching In Seventeenth Row Expected: 0 Current:\", actualDamageFactor);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating GroundUpLoss Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedGroundUpLoss = 0;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[16][\"GroundUpLoss\"];\r",
							"  \r",
							"  pm.expect(actualGroundUpLoss).to.eql(expectedGroundUpLoss);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Seventeenth Row Expected: 0 Current:\", actualGroundUpLoss);\r",
							"});\r",
							"\r",
							"// Validating Intensity Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensity = 0.03280799835920334;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[16][\"Intensity\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for comparison\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Description Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Description Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensityDescription = \"< 1 ft\";\r",
							"  const actualIntensityDescription = responseJson.Value.Analysis0[16][\"Intensity Description\"];\r",
							"  \r",
							"  pm.expect(actualIntensityDescription).to.eql(expectedIntensityDescription);\r",
							"  console.log(\"Intensity Description Miss Matching In Seventeenth Row Expected: < 1 ft Current:\", actualIntensityDescription);\r",
							"});\r",
							"\r",
							"// Validating Latitude Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Latitude Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLatitude = 30.393028259277344;\r",
							"  const actualLatitude = responseJson.Value.Analysis0[16][\"Latitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLatitude - actualLatitude);\r",
							"  console.log(\"Expected Latitude: \", expectedLatitude);\r",
							"  console.log(\"Actual Latitude: \", actualLatitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for latitude\r",
							"    throw new Error(`Latitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Latitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Longitude Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Longitude Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLongitude = -88.89229583740234;\r",
							"  const actualLongitude = responseJson.Value.Analysis0[16][\"Longitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLongitude - actualLongitude);\r",
							"  console.log(\"Expected Longitude: \", expectedLongitude);\r",
							"  console.log(\"Actual Longitude: \", actualLongitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for longitude\r",
							"    throw new Error(`Longitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Longitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Number of Stories Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Number of Stories Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Number of Stories\"]).to.eql(31);\r",
							"  console.log(\"Number of Stories Miss Matching In Seventeenth Row Expected: 31 Current:\", responseJson.Value.Analysis0[16][\"Number of Stories\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating TIV Of Seventeenth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedTIV = 677304681.1999999;\r",
							"  const actualTIV = responseJson.Value.Analysis0[16][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {  // Allowing a small difference for large TIV values\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"console.log(\"-------- TOP N 20th Row Value --------\")\r",
							"\r",
							"// Validating Asset Name Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Name Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Name\"]).to.eql(\"2416706 - LocName_2115276\");\r",
							"  console.log(\"Asset Name Miss Matching In Twentieth Row Expected: 2416706 - LocName_2115276 Current:\", responseJson.Value.Analysis0[19][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Number Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Number\"]).to.eql(2416706);\r",
							"  console.log(\"Asset Number Miss Matching In Twentieth Row Expected: 2416706 Current:\", responseJson.Value.Analysis0[19][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Schedule Name Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Asset Schedule Name Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Schedule Name\"]).to.eql(276321046);\r",
							"  console.log(\"Asset Schedule Name Miss Matching In Twentieth Row Expected: 276321046 Current:\", responseJson.Value.Analysis0[19][\"Asset Schedule Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis \r",
							"pm.test(\"Validating Contract Number Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Contract Number\"]).to.eql(\"xxxxxxxx - 8135\");\r",
							"  console.log(\"Contract Number Miss Matching In Twentieth Row Expected: xxxxxxxx - 8135 Current:\", responseJson.Value.Analysis0[19][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_EL = 323852002.3906736;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_GL\"];\r",
							"  \r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Twentieth Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating DamageFactor Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating DamageFactor Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedDamageFactor = 0;\r",
							"  const actualDamageFactor = responseJson.Value.Analysis0[19][\"DamageFactor\"];\r",
							"  \r",
							"  pm.expect(actualDamageFactor).to.eql(expectedDamageFactor);\r",
							"  console.log(\"DamageFactor Miss Matching In Twentieth Row Expected: 0 Current:\", actualDamageFactor);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating GroundUpLoss Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedGroundUpLoss = 0;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[19][\"GroundUpLoss\"];\r",
							"  \r",
							"  pm.expect(actualGroundUpLoss).to.eql(expectedGroundUpLoss);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Twentieth Row Expected: 0 Current:\", actualGroundUpLoss);\r",
							"});\r",
							"\r",
							"// Validating Intensity Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensity = 0;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[19][\"Intensity\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for comparison\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Description Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Intensity Description Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedIntensityDescription = \"Unknown\";\r",
							"  const actualIntensityDescription = responseJson.Value.Analysis0[19][\"Intensity Description\"];\r",
							"  \r",
							"  pm.expect(actualIntensityDescription).to.eql(expectedIntensityDescription);\r",
							"  console.log(\"Intensity Description Miss Matching In Twentieth Row Expected: Unknown Current:\", actualIntensityDescription);\r",
							"});\r",
							"\r",
							"// Validating Latitude Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Latitude Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLatitude = 40.81551742553711;\r",
							"  const actualLatitude = responseJson.Value.Analysis0[19][\"Latitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLatitude - actualLatitude);\r",
							"  console.log(\"Expected Latitude: \", expectedLatitude);\r",
							"  console.log(\"Actual Latitude: \", actualLatitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for latitude\r",
							"    throw new Error(`Latitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Latitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Longitude Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Longitude Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedLongitude = -73.95027160644531;\r",
							"  const actualLongitude = responseJson.Value.Analysis0[19][\"Longitude\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedLongitude - actualLongitude);\r",
							"  console.log(\"Expected Longitude: \", expectedLongitude);\r",
							"  console.log(\"Actual Longitude: \", actualLongitude);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 0.0001) {  // Small threshold for longitude\r",
							"    throw new Error(`Longitude mismatch: Difference of ${difference} is greater than the allowed threshold of 0.0001.`);\r",
							"  } else {\r",
							"    console.log(\"Longitude is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Number of Stories Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating Number of Stories Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Number of Stories\"]).to.eql(5);\r",
							"  console.log(\"Number of Stories Miss Matching In Twentieth Row Expected: 5 Current:\", responseJson.Value.Analysis0[19][\"Number of Stories\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\r",
							"pm.test(\"Validating TIV Of Twentieth Row, ABC Insurance Co with Hazard overlay analysis\", () => {\r",
							"  const expectedTIV = 647707790.22;\r",
							"  const actualTIV = responseJson.Value.Analysis0[19][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {  // Allowing a small difference for large TIV values\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"AdditionalSortMeasure\": \"TIV\",\r\n    \"AttributeList\": [\r\n        \"#\",\r\n        \"Asset Number\",\r\n        \"Asset Name\",\r\n        \"ContractLoss_Value All Types_EL\",\r\n        \"TIV\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Intensity\",\r\n        \"GroundUpLoss\",\r\n        \"DamageFactor\",\r\n        \"ROW\",\r\n        \"Valuation Currency\",\r\n        \"Latitude\",\r\n        \"Longitude\",\r\n        \"Asset Name\",\r\n        \"Asset Number\",\r\n        \"Asset Schedule Name\",\r\n        \"Contract Number\",\r\n        \"#Assets\",\r\n        \"GroundUpLoss\",\r\n        \"TIV\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"#Assets\",\r\n        \"Number of Stories\"\r\n    ],\r\n    \"SortDirection\": -1,\r\n    \"Count\": 20,\r\n    \"TopNBy\": \"ContractLoss_Value All Types_EL\",\r\n    \"ContractMode\": false,\r\n    \"PercentageAttributes\": false,\r\n    \"TopNAssetsBy\": \"ContractLoss_Value All Types_EL\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/analysis/topn",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"topn"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tiv/TIV Range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"//const data1 = JSON(responseJson);\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === <1M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === <1M\", () => {\r",
							"    const TIVRange1M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"<1M\");\r",
							"    pm.expect(TIVRange1M[\"TIV\"].toFixed(0)).to.eql(52763054052.17437.toFixed(0));\r",
							"    pm.expect(TIVRange1M[\"TIV Range\"]).to.eql(\"<1M\");\r",
							"    pm.expect(TIVRange1M[\"Percentage\"].toFixed(0)).to.eql(5.789388110480641.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 1M - 5M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 1M - 5M\", () => {\r",
							"    const TIVRange1M_5M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"1M -5M\");\r",
							"    pm.expect(TIVRange1M_5M[\"TIV\"]).to.eql(131587397163.61395);\r",
							"    pm.expect(TIVRange1M_5M[\"TIV Range\"]).to.eql(\"1M -5M\");\r",
							"    pm.expect(TIVRange1M_5M[\"Percentage\"].toFixed(0)).to.eql(14.438332395899787.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\", () => {\r",
							"    const TIVRange5M_10M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"5M – 10M\");\r",
							"    pm.expect(TIVRange5M_10M[\"TIV\"].toFixed(0)).to.eql(105088575632.7601.toFixed(0));\r",
							"    pm.expect(TIVRange5M_10M[\"TIV Range\"]).to.eql(\"5M – 10M\");\r",
							"    pm.expect(TIVRange5M_10M[\"Percentage\"].toFixed(0)).to.eql(11.530768285589314.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 10M - 50M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 10M - 50M\", () => {\r",
							"    const TIVRange10M_50M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"10M -50M\");\r",
							"    pm.expect(TIVRange10M_50M[\"TIV\"].toFixed(0)).to.eql(342174412929.0757.toFixed(0));\r",
							"    pm.expect(TIVRange10M_50M[\"TIV Range\"]).to.eql(\"10M -50M\");\r",
							"    pm.expect(TIVRange10M_50M[\"Percentage\"].toFixed(0)).to.eql(37.54484105418549.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 50M - 100M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 50M - 100M\", () => {\r",
							"    const TIVRange50M_100M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"50M-100M\");\r",
							"    pm.expect(TIVRange50M_100M[\"TIV\"].toFixed(0)).to.eql(107867841056.7924.toFixed(0));\r",
							"    pm.expect(TIVRange50M_100M[\"TIV Range\"]).to.eql(\"50M-100M\");\r",
							"    pm.expect(TIVRange50M_100M[\"Percentage\"].toFixed(0)).to.eql(11.835721182854355.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 100M - 500M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 100M - 500M\", () => {\r",
							"    const TIVRange100M_500M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"100M-500M\");\r",
							"    pm.expect(TIVRange100M_500M[\"TIV\"].toFixed(0)).to.eql(143548060482.13638.toFixed(0));\r",
							"    pm.expect(TIVRange100M_500M[\"TIV Range\"]).to.eql(\"100M-500M\");\r",
							"    pm.expect(TIVRange100M_500M[\"Percentage\"].toFixed(0)).to.eql(15.750707565488023.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 500M - 1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 500M - 1B\", () => {\r",
							"    const TIVRange500M_1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"500M-1B\");\r",
							"    pm.expect(TIVRange500M_1B[\"TIV\"].toFixed(0)).to.eql(15908916096.971903.toFixed(0));\r",
							"    pm.expect(TIVRange500M_1B[\"TIV Range\"]).to.eql(\"500M-1B\");\r",
							"    pm.expect(TIVRange500M_1B[\"Percentage\"].toFixed(0)).to.eql(1.74559436251298.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === >1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === >1B\", () => {\r",
							"    const TIVRange1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \">1B\");\r",
							"    pm.expect(TIVRange1B[\"TIV\"]).to.eql(12437056268.7);\r",
							"    pm.expect(TIVRange1B[\"TIV Range\"]).to.eql(\">1B\");\r",
							"    pm.expect(TIVRange1B[\"Percentage\"].toFixed(0)).to.eql(1.3646470429894169.toFixed(0));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"TIV\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"TIV\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}