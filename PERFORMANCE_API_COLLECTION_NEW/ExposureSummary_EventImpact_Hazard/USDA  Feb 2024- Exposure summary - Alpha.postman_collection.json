{
	"info": {
		"_postman_id": "ba8fb47f-4dcb-4bdb-bd7f-81051f63e396",
		"name": "USDA  Feb 2024- Exposure summary : Alpha",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14426843"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set analysis - Event Impact Analysis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"setTimeout(function() {\r",
							"    console.log(\"Next API Call After 3 Minutes \")\r",
							"}, 180000);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 24510,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"analysisObject\": [\r\n        {\r\n            \"CurrencyCode\": \"USD\",\r\n            \"IncludeAllContracts\": true,\r\n            \"big_tiff_flag\": true,\r\n            \"damageAdjustment\": 1,\r\n            \"ValuationTypeCode\": 1,\r\n            \"ExposureFilterSets\": {\r\n                \"AssetModel\": \"ERBASICS\",\r\n                \"FilterList\": [\r\n                    {\r\n                        \"AndOr\": \"AND\",\r\n                        \"FilterList\": [\r\n                            {\r\n                                \"AssetType\": \"Site\",\r\n                                \"Attribute\": \"Cause Of Loss\",\r\n                                \"Operator\": \"EQ\",\r\n                                \"Value\": \"FLXX\",\r\n                                \"AndOr\": \"AND\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"quantile\": 50\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/load-exposure",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"load-exposure"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposure Summary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"// Validating Asset Count\r",
							"pm.test(\"Validating Asset Count\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Asset Count\"]).to.eql(37663);\r",
							"  console.log(\"Asset Count Value is matching. Expected: 37663, Current: \", responseJson.Value.Analysis0[\"Asset Count\"]);\r",
							"});\r",
							"\r",
							"// Validating #Assets\r",
							"pm.test(\"Validating #Assets\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"#Assets\"]).to.eql(37663);\r",
							"  console.log(\"#Assets Value is matching. Expected: 37663, Current: \", responseJson.Value.Analysis0[\"#Assets\"]);\r",
							"});\r",
							"\r",
							"// Validating #Contracts\r",
							"pm.test(\"Validating #Contracts\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"#Contracts\"]).to.eql(37523);\r",
							"  console.log(\"#Contracts Value is matching. Expected: 37523, Current: \", responseJson.Value.Analysis0[\"#Contracts\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Count\r",
							"pm.test(\"Validating Contract Count\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Contract Count\"]).to.eql(37523);\r",
							"  console.log(\"Contract Count Value is matching. Expected: 37523, Current: \", responseJson.Value.Analysis0[\"Contract Count\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL\", () => {\r",
							"  const expectedContractLoss_EL = 5714910385.600813;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss\r",
							"pm.test(\"Validating Fac Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Gross Exposed Limit\r",
							"pm.test(\"Validating Gross Exposed Limit\", () => {\r",
							"  const expectedGrossExposedLimit = 5714910385.600813;\r",
							"  const actualGrossExposedLimit = responseJson.Value.Analysis0[\"Gross Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedGrossExposedLimit - actualGrossExposedLimit);\r",
							"  console.log(\"Expected Gross Exposed Limit: \", expectedGrossExposedLimit);\r",
							"  console.log(\"Actual Gross Exposed Limit: \", actualGrossExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Gross Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Gross Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Gross Loss\r",
							"pm.test(\"Validating Gross Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Gross Loss\"]).to.eql(0);\r",
							"  console.log(\"Gross Loss Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"Gross Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLoss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 5714910385.600813;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss\r",
							"pm.test(\"Validating Net Pre Cat Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed Limit\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 5714910385.600813;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss\r",
							"pm.test(\"Validating Net of Fac Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Retained Limit\r",
							"pm.test(\"Validating Retained Limit\", () => {\r",
							"  const expectedRetainedLimit = 4083549205.3992276;\r",
							"  const actualRetainedLimit = responseJson.Value.Analysis0[\"Retained Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedRetainedLimit - actualRetainedLimit);\r",
							"  console.log(\"Expected Retained Limit: \", expectedRetainedLimit);\r",
							"  console.log(\"Actual Retained Limit: \", actualRetainedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Retained Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Retained Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Retained Loss\r",
							"pm.test(\"Validating Retained Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Retained Loss\"]).to.eql(0);\r",
							"  console.log(\"Retained Loss Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"Retained Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV (Total Insured Value)\r",
							"pm.test(\"Validating TIV\", () => {\r",
							"  const expectedTIV = 9798459591;\r",
							"  const actualTIV = responseJson.Value.Analysis0[\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit\r",
							"pm.test(\"Validating Treaty Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss\r",
							"pm.test(\"Validating Treaty Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"Treaty Loss\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"measures\": [\r\n        \"Asset Count\",\r\n        \"#Contracts\",\r\n        \"TIV\",\r\n        \"Gross Exposed Limit\",\r\n        \"GroundUpLoss\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/summary",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"summary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Top 20 Assets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log(\"-------- TOP N First Row Value --------\")\r",
							"\r",
							"// Validating Asset Name Of 1st Row, 39457\r",
							"pm.test(\"Validating Asset Name Of 1st Row, 39457\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Name\"]).to.eql(\"39457\");\r",
							"  console.log(\"Asset Name Miss Matching In 1st Row Expected: 39457 Current:\", responseJson.Value.Analysis0[0][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 1st Row, 39457\r",
							"pm.test(\"Validating Asset Number Of 1st Row, 39457\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Number\"]).to.eql(39457);\r",
							"  console.log(\"Asset Number Miss Matching In 1st Row Expected: 39457 Current:\", responseJson.Value.Analysis0[0][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 1st Row, 39457\r",
							"pm.test(\"Validating Contract Number Of 1st Row, 39457\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Contract Number\"]).to.eql(\"unknown - 45139335\");\r",
							"  console.log(\"Contract Number Miss Matching In 1st Row Expected: unknown - 45139335 Current:\", responseJson.Value.Analysis0[0][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 1st Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 1st Row\", () => {\r",
							"  const expectedContractLoss_EL = 4700000;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_EL\"];\r",
							"\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 1st Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 1st Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 1st Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of 1st Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of 1st Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In 1st Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of 1st Row\r",
							"pm.test(\"Validating Fac Loss Of 1st Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In 1st Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 1st Row\r",
							"pm.test(\"Validating GroundUpLoss Of 1st Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In 1st Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 1st Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 1st Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 4700000;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[0][\"Net Pre Cat Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 1st Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 1st Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 1st Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 1st Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 1st Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 4700000;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[0][\"Net of Fac Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 1st Row\r",
							"pm.test(\"Validating TIV Of 1st Row\", () => {\r",
							"  const expectedTIV = 19400000;\r",
							"  const actualTIV = responseJson.Value.Analysis0[0][\"TIV\"];\r",
							"\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 1st Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 1st Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 1st Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 1st Row\r",
							"pm.test(\"Validating Treaty Loss Of 1st Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 1st Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of 2nd Row, 39363\r",
							"pm.test(\"Validating Asset Name Of 2nd Row, 39363\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Name\"]).to.eql(\"39363\");\r",
							"  console.log(\"Asset Name Miss Matching In 2nd Row Expected: 39363 Current:\", responseJson.Value.Analysis0[1][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 2nd Row, 39363\r",
							"pm.test(\"Validating Asset Number Of 2nd Row, 39363\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Number\"]).to.eql(39363);\r",
							"  console.log(\"Asset Number Miss Matching In 2nd Row Expected: 39363 Current:\", responseJson.Value.Analysis0[1][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 2nd Row, 39363\r",
							"pm.test(\"Validating Contract Number Of 2nd Row, 39363\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Contract Number\"]).to.eql(\"unknown - 45139303\");\r",
							"  console.log(\"Contract Number Miss Matching In 2nd Row Expected: unknown - 45139303 Current:\", responseJson.Value.Analysis0[1][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 2nd Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 2nd Row\", () => {\r",
							"  const expectedContractLoss_EL = 4000000;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_EL\"];\r",
							"\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 2nd Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 2nd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 2nd Row Expected: 0 Current:\", responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of 2nd Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of 2nd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In 2nd Row Expected: 0 Current:\", responseJson.Value.Analysis0[1][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of 2nd Row\r",
							"pm.test(\"Validating Fac Loss Of 2nd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In 2nd Row Expected: 0 Current:\", responseJson.Value.Analysis0[1][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 2nd Row\r",
							"pm.test(\"Validating GroundUpLoss Of 2nd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In 2nd Row Expected: 0 Current:\", responseJson.Value.Analysis0[1][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 2nd Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 2nd Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 4000000;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[1][\"Net Pre Cat Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 2nd Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 2nd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 2nd Row Expected: 0 Current:\", responseJson.Value.Analysis0[1][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 2nd Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 2nd Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 4000000;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[1][\"Net of Fac Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 2nd Row\r",
							"pm.test(\"Validating TIV Of 2nd Row\", () => {\r",
							"  const expectedTIV = 24806979;\r",
							"  const actualTIV = responseJson.Value.Analysis0[1][\"TIV\"];\r",
							"\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 2nd Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 2nd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 2nd Row Expected: 0 Current:\", responseJson.Value.Analysis0[1][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 2nd Row\r",
							"pm.test(\"Validating Treaty Loss Of 2nd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 2nd Row Expected: 0 Current:\", responseJson.Value.Analysis0[1][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of 3rd Row, 39290\r",
							"pm.test(\"Validating Asset Name Of 3rd Row, 39290\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Asset Name\"]).to.eql(\"39290\");\r",
							"  console.log(\"Asset Name Miss Matching In 3rd Row Expected: 39290 Current:\", responseJson.Value.Analysis0[2][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 3rd Row, 39290\r",
							"pm.test(\"Validating Asset Number Of 3rd Row, 39290\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Asset Number\"]).to.eql(39290);\r",
							"  console.log(\"Asset Number Miss Matching In 3rd Row Expected: 39290 Current:\", responseJson.Value.Analysis0[2][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 3rd Row, 39290\r",
							"pm.test(\"Validating Contract Number Of 3rd Row, 39290\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Contract Number\"]).to.eql(\"unknown - 45139276\");\r",
							"  console.log(\"Contract Number Miss Matching In 3rd Row Expected: unknown - 45139276 Current:\", responseJson.Value.Analysis0[2][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 3rd Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 3rd Row\", () => {\r",
							"  const expectedContractLoss_EL = 3767952.420612073;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[2][\"ContractLoss_Value All Types_EL\"];\r",
							"\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 3rd Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 3rd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 3rd Row Expected: 0 Current:\", responseJson.Value.Analysis0[2][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of 3rd Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of 3rd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In 3rd Row Expected: 0 Current:\", responseJson.Value.Analysis0[2][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of 3rd Row\r",
							"pm.test(\"Validating Fac Loss Of 3rd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In 3rd Row Expected: 0 Current:\", responseJson.Value.Analysis0[2][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 3rd Row\r",
							"pm.test(\"Validating GroundUpLoss Of 3rd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In 3rd Row Expected: 0 Current:\", responseJson.Value.Analysis0[2][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 3rd Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 3rd Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 3767952.420612073;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[2][\"Net Pre Cat Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 3rd Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 3rd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 3rd Row Expected: 0 Current:\", responseJson.Value.Analysis0[2][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 3rd Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 3rd Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 3767952.420612073;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[2][\"Net of Fac Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 3rd Row\r",
							"pm.test(\"Validating TIV Of 3rd Row\", () => {\r",
							"  const expectedTIV = 12117812;\r",
							"  const actualTIV = responseJson.Value.Analysis0[2][\"TIV\"];\r",
							"\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 3rd Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 3rd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 3rd Row Expected: 0 Current:\", responseJson.Value.Analysis0[2][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 3rd Row\r",
							"pm.test(\"Validating Treaty Loss Of 3rd Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 3rd Row Expected: 0 Current:\", responseJson.Value.Analysis0[2][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of 6th Row, 39459\r",
							"pm.test(\"Validating Asset Name Of 6th Row, 39459\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Asset Name\"]).to.eql(\"39459\");\r",
							"  console.log(\"Asset Name Miss Matching In 6th Row Expected: 39459 Current:\", responseJson.Value.Analysis0[5][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 6th Row, 39459\r",
							"pm.test(\"Validating Asset Number Of 6th Row, 39459\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Asset Number\"]).to.eql(39459);\r",
							"  console.log(\"Asset Number Miss Matching In 6th Row Expected: 39459 Current:\", responseJson.Value.Analysis0[5][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 6th Row, 39459\r",
							"pm.test(\"Validating Contract Number Of 6th Row, 39459\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Contract Number\"]).to.eql(\"unknown - 45139337\");\r",
							"  console.log(\"Contract Number Miss Matching In 6th Row Expected: unknown - 45139337 Current:\", responseJson.Value.Analysis0[5][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 6th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 6th Row\", () => {\r",
							"  const expectedContractLoss_EL = 3212250;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[5][\"ContractLoss_Value All Types_EL\"];\r",
							"\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 6th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 6th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 6th Row Expected: 0 Current:\", responseJson.Value.Analysis0[5][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of 6th Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of 6th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In 6th Row Expected: 0 Current:\", responseJson.Value.Analysis0[5][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of 6th Row\r",
							"pm.test(\"Validating Fac Loss Of 6th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In 6th Row Expected: 0 Current:\", responseJson.Value.Analysis0[5][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 6th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 6th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In 6th Row Expected: 0 Current:\", responseJson.Value.Analysis0[5][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 6th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 6th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 3212250;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[5][\"Net Pre Cat Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 6th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 6th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 6th Row Expected: 0 Current:\", responseJson.Value.Analysis0[5][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 6th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 6th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 3212250;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[5][\"Net of Fac Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 6th Row\r",
							"pm.test(\"Validating TIV Of 6th Row\", () => {\r",
							"  const expectedTIV = 6774500;\r",
							"  const actualTIV = responseJson.Value.Analysis0[5][\"TIV\"];\r",
							"\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 6th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 6th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 6th Row Expected: 0 Current:\", responseJson.Value.Analysis0[5][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 6th Row\r",
							"pm.test(\"Validating Treaty Loss Of 6th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 6th Row Expected: 0 Current:\", responseJson.Value.Analysis0[5][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of 8th Row, 39335\r",
							"pm.test(\"Validating Asset Name Of 8th Row, 39335\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Asset Name\"]).to.eql(\"39335\");\r",
							"  console.log(\"Asset Name Miss Matching In 8th Row Expected: 39335 Current:\", responseJson.Value.Analysis0[7][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 8th Row, 39335\r",
							"pm.test(\"Validating Asset Number Of 8th Row, 39335\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Asset Number\"]).to.eql(39335);\r",
							"  console.log(\"Asset Number Miss Matching In 8th Row Expected: 39335 Current:\", responseJson.Value.Analysis0[7][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 8th Row, 39335\r",
							"pm.test(\"Validating Contract Number Of 8th Row, 39335\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Contract Number\"]).to.eql(\"unknown - 45139289\");\r",
							"  console.log(\"Contract Number Miss Matching In 8th Row Expected: unknown - 45139289 Current:\", responseJson.Value.Analysis0[7][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 8th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 8th Row\", () => {\r",
							"  const expectedContractLoss_EL = 2500000;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[7][\"ContractLoss_Value All Types_EL\"];\r",
							"\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 8th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 8th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 8th Row Expected: 0 Current:\", responseJson.Value.Analysis0[7][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of 8th Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of 8th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In 8th Row Expected: 0 Current:\", responseJson.Value.Analysis0[7][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of 8th Row\r",
							"pm.test(\"Validating Fac Loss Of 8th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In 8th Row Expected: 0 Current:\", responseJson.Value.Analysis0[7][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 8th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 8th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In 8th Row Expected: 0 Current:\", responseJson.Value.Analysis0[7][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 8th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 8th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 2500000;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[7][\"Net Pre Cat Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 8th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 8th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 8th Row Expected: 0 Current:\", responseJson.Value.Analysis0[7][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 8th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 8th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 2500000;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[7][\"Net of Fac Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 8th Row\r",
							"pm.test(\"Validating TIV Of 8th Row\", () => {\r",
							"  const expectedTIV = 5650000;\r",
							"  const actualTIV = responseJson.Value.Analysis0[7][\"TIV\"];\r",
							"\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 8th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 8th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 8th Row Expected: 0 Current:\", responseJson.Value.Analysis0[7][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 8th Row\r",
							"pm.test(\"Validating Treaty Loss Of 8th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 8th Row Expected: 0 Current:\", responseJson.Value.Analysis0[7][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Asset Name Of 12th Row, 39422\r",
							"pm.test(\"Validating Asset Name Of 12th Row, 39422\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Asset Name\"]).to.eql(\"39422\");\r",
							"  console.log(\"Asset Name Miss Matching In 12th Row Expected: 39422 Current:\", responseJson.Value.Analysis0[11][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 12th Row, 39422\r",
							"pm.test(\"Validating Asset Number Of 12th Row, 39422\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Asset Number\"]).to.eql(39422);\r",
							"  console.log(\"Asset Number Miss Matching In 12th Row Expected: 39422 Current:\", responseJson.Value.Analysis0[11][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 12th Row, 39422\r",
							"pm.test(\"Validating Contract Number Of 12th Row, 39422\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Contract Number\"]).to.eql(\"unknown - 45139315\");\r",
							"  console.log(\"Contract Number Miss Matching In 12th Row Expected: unknown - 45139315 Current:\", responseJson.Value.Analysis0[11][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 12th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 12th Row\", () => {\r",
							"  const expectedContractLoss_EL = 1714466;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[11][\"ContractLoss_Value All Types_EL\"];\r",
							"\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 12th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 12th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 12th Row Expected: 0 Current:\", responseJson.Value.Analysis0[11][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of 12th Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of 12th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In 12th Row Expected: 0 Current:\", responseJson.Value.Analysis0[11][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of 12th Row\r",
							"pm.test(\"Validating Fac Loss Of 12th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In 12th Row Expected: 0 Current:\", responseJson.Value.Analysis0[11][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 12th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 12th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In 12th Row Expected: 0 Current:\", responseJson.Value.Analysis0[11][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 12th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 12th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 1714466;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[11][\"Net Pre Cat Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 12th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 12th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 12th Row Expected: 0 Current:\", responseJson.Value.Analysis0[11][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 12th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 12th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 1714466;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[11][\"Net of Fac Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 12th Row\r",
							"pm.test(\"Validating TIV Of 12th Row\", () => {\r",
							"  const expectedTIV = 3428932;\r",
							"  const actualTIV = responseJson.Value.Analysis0[11][\"TIV\"];\r",
							"\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 12th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 12th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 12th Row Expected: 0 Current:\", responseJson.Value.Analysis0[11][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 12th Row\r",
							"pm.test(\"Validating Treaty Loss Of 12th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 12th Row Expected: 0 Current:\", responseJson.Value.Analysis0[11][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of 16th Row, 14367\r",
							"pm.test(\"Validating Asset Name Of 16th Row, 14367\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Asset Name\"]).to.eql(\"14367\");\r",
							"  console.log(\"Asset Name Miss Matching In 16th Row Expected: 14367 Current:\", responseJson.Value.Analysis0[15][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 16th Row, 14367\r",
							"pm.test(\"Validating Asset Number Of 16th Row, 14367\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Asset Number\"]).to.eql(14367);\r",
							"  console.log(\"Asset Number Miss Matching In 16th Row Expected: 14367 Current:\", responseJson.Value.Analysis0[15][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 16th Row, 14367\r",
							"pm.test(\"Validating Contract Number Of 16th Row, 14367\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Contract Number\"]).to.eql(\"unknown - 45114366\");\r",
							"  console.log(\"Contract Number Miss Matching In 16th Row Expected: unknown - 45114366 Current:\", responseJson.Value.Analysis0[15][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 16th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 16th Row\", () => {\r",
							"  const expectedContractLoss_EL = 1488283.5071203113;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[15][\"ContractLoss_Value All Types_EL\"];\r",
							"\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 16th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 16th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 16th Row Expected: 0 Current:\", responseJson.Value.Analysis0[15][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of 16th Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of 16th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In 16th Row Expected: 0 Current:\", responseJson.Value.Analysis0[15][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of 16th Row\r",
							"pm.test(\"Validating Fac Loss Of 16th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In 16th Row Expected: 0 Current:\", responseJson.Value.Analysis0[15][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 16th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 16th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In 16th Row Expected: 0 Current:\", responseJson.Value.Analysis0[15][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 16th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 16th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 1488283.5071203113;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[15][\"Net Pre Cat Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 16th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 16th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 16th Row Expected: 0 Current:\", responseJson.Value.Analysis0[15][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 16th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 16th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 1488283.5071203113;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[15][\"Net of Fac Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 16th Row\r",
							"pm.test(\"Validating TIV Of 16th Row\", () => {\r",
							"  const expectedTIV = 15950600;\r",
							"  const actualTIV = responseJson.Value.Analysis0[15][\"TIV\"];\r",
							"\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 16th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 16th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 16th Row Expected: 0 Current:\", responseJson.Value.Analysis0[15][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 16th Row\r",
							"pm.test(\"Validating Treaty Loss Of 16th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 16th Row Expected: 0 Current:\", responseJson.Value.Analysis0[15][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of 20th Row, 39299\r",
							"pm.test(\"Validating Asset Name Of 20th Row, 39299\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Name\"]).to.eql(\"39299\");\r",
							"  console.log(\"Asset Name Miss Matching In 20th Row Expected: 39299 Current:\", responseJson.Value.Analysis0[19][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 20th Row, 39299\r",
							"pm.test(\"Validating Asset Number Of 20th Row, 39299\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Number\"]).to.eql(39299);\r",
							"  console.log(\"Asset Number Miss Matching In 20th Row Expected: 39299 Current:\", responseJson.Value.Analysis0[19][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 20th Row, 39299\r",
							"pm.test(\"Validating Contract Number Of 20th Row, 39299\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Contract Number\"]).to.eql(\"unknown - 45139278\");\r",
							"  console.log(\"Contract Number Miss Matching In 20th Row Expected: unknown - 45139278 Current:\", responseJson.Value.Analysis0[19][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 20th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 20th Row\", () => {\r",
							"  const expectedContractLoss_EL = 1405742.1859517933;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_EL\"];\r",
							"\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 20th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 20th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 20th Row Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of 20th Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of 20th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In 20th Row Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of 20th Row\r",
							"pm.test(\"Validating Fac Loss Of 20th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In 20th Row Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 20th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 20th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In 20th Row Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 20th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 20th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 1405742.1859517933;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[19][\"Net Pre Cat Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 20th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 20th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 20th Row Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 20th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 20th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 1405742.1859517933;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[19][\"Net of Fac Exposed Limit\"];\r",
							"\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 20th Row\r",
							"pm.test(\"Validating TIV Of 20th Row\", () => {\r",
							"  const expectedTIV = 4194025;\r",
							"  const actualTIV = responseJson.Value.Analysis0[19][\"TIV\"];\r",
							"\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 20th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 20th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 20th Row Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 20th Row\r",
							"pm.test(\"Validating Treaty Loss Of 20th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 20th Row Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Treaty Loss\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"AdditionalSortMeasure\": \"TIV\",\r\n    \"AttributeList\": [\r\n        \"#\",\r\n        \"Asset Number\",\r\n        \"Asset Name\",\r\n        \"Contract Number\",\r\n        \"ContractLoss_Value All Types_EL\",\r\n        \"TIV\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Intensity\",\r\n        \"GroundUpLoss\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ],\r\n    \"SortDirection\": -1,\r\n    \"Count\": 20,\r\n    \"TopNBy\": \"ContractLoss_Value All Types_EL\",\r\n    \"ContractMode\": false,\r\n    \"PercentageAttributes\": false,\r\n    \"TopNAssetsBy\": \"ContractLoss_Value All Types_EL\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/topn",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"topn"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tiv/TIV Range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"//const data1 = JSON(responseJson.Value.Analysis0);\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === <1M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === <1M\", () => {\r",
							"    const TIVRange1M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"<1M\");\r",
							"    pm.expect(TIVRange1M[\"TIV\"]).to.eql(8834465594);  // Validating TIV\r",
							"    pm.expect(TIVRange1M[\"TIV Range\"]).to.eql(\"<1M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1M[\"Percentage\"].toFixed(0)).to.eql(90.16178014465213.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 1M - 5M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 1M -5M\", () => {\r",
							"    const TIVRange1M_5M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"1M -5M\");\r",
							"    pm.expect(TIVRange1M_5M[\"TIV\"]).to.eql(602682570);  // Validating TIV\r",
							"    pm.expect(TIVRange1M_5M[\"TIV Range\"]).to.eql(\"1M -5M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1M_5M[\"Percentage\"].toFixed(0)).to.eql(6.150788952108053.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\", () => {\r",
							"    const TIVRange5M_10M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"5M – 10M\");\r",
							"    pm.expect(TIVRange5M_10M[\"TIV\"]).to.eql(104099094);  // Validating TIV\r",
							"    pm.expect(TIVRange5M_10M[\"TIV Range\"]).to.eql(\"5M – 10M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange5M_10M[\"Percentage\"].toFixed(0)).to.eql(1.0624026463875633.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 10M - 50M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 10M -50M\", () => {\r",
							"    const TIVRange10M_50M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"10M -50M\");\r",
							"    pm.expect(TIVRange10M_50M[\"TIV\"]).to.eql(257212333);  // Validating TIV\r",
							"    pm.expect(TIVRange10M_50M[\"TIV Range\"]).to.eql(\"10M -50M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange10M_50M[\"Percentage\"].toFixed(0)).to.eql(2.6250282568522563.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 50M-100M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 50M-100M\", () => {\r",
							"    const TIVRange50M_100M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"50M-100M\");\r",
							"    pm.expect(TIVRange50M_100M[\"TIV\"]).to.eql(0);  // Validating TIV\r",
							"    pm.expect(TIVRange50M_100M[\"TIV Range\"]).to.eql(\"50M-100M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange50M_100M[\"Percentage\"]).to.eql(0);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 100M-500M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 100M-500M\", () => {\r",
							"    const TIVRange100M_500M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"100M-500M\");\r",
							"    pm.expect(TIVRange100M_500M[\"TIV\"]).to.eql(0);  // Validating TIV\r",
							"    pm.expect(TIVRange100M_500M[\"TIV Range\"]).to.eql(\"100M-500M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange100M_500M[\"Percentage\"]).to.eql(0);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 500M-1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 500M-1B\", () => {\r",
							"    const TIVRange500M_1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"500M-1B\");\r",
							"    pm.expect(TIVRange500M_1B[\"TIV\"]).to.eql(0);  // Validating TIV\r",
							"    pm.expect(TIVRange500M_1B[\"TIV Range\"]).to.eql(\"500M-1B\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange500M_1B[\"Percentage\"]).to.eql(0);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === >1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === >1B\", () => {\r",
							"    const TIVRange1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \">1B\");\r",
							"    pm.expect(TIVRange1B[\"TIV\"]).to.eql(0);  // Validating TIV\r",
							"    pm.expect(TIVRange1B[\"TIV Range\"]).to.eql(\">1B\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1B[\"Percentage\"]).to.eql(0);  // Validating Percentage\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"TIV\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"TIV\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}