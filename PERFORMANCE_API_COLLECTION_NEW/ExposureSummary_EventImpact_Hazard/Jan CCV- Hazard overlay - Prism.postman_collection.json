{
	"info": {
		"_postman_id": "7cafd3a0-967a-4fbe-aa1a-ef63137075dd",
		"name": "Jan CCV- Hazard overlay : Prism",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14426843"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set analysis - Hazard - GSHAP Global Seismic Hazard Map (PGA 10% in 50 Years)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"setTimeout(function() {\r",
							"    console.log(\"Next API Call After 3 Minutes \")\r",
							"}, 180000);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 32499 ,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"analysisObject\": [\r\n        {\r\n            \"CurrencyCode\": \"USD\",\r\n            \"IncludeAllContracts\": true,\r\n            \"big_tiff_flag\": true,\r\n            \"damageAdjustment\": 1,\r\n            \"ValuationTypeCode\": 1,\r\n            \"ExposureFilterSets\": {\r\n                \"AssetModel\": \"ERBASICS\",\r\n                \"FilterList\": [\r\n                    {\r\n                        \"AndOr\": \"AND\",\r\n                        \"FilterList\": [\r\n                            {\r\n                                \"AssetType\": \"Site\",\r\n                                \"Attribute\": \"Cause Of Loss\",\r\n                                \"Operator\": \"EQ\",\r\n                                \"Value\": \"EQXX\",\r\n                                \"AndOr\": \"AND\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"quantile\": 50,\r\n            \"Events\": [\r\n                {\r\n                    \"EventID\": 247331,\r\n                    \"SeverityModelID\": 157\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/analysis/load-exposure",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"load-exposure"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposure Summary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Asset Count\r",
							"pm.test(\"Validating Asset Count\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Asset Count\"]).to.eql(166412);\r",
							"  console.log(\"Asset Count Value is matching. Expected: 397852, Current: \", responseJson.Value.Analysis0[\"Asset Count\"]);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Contracts Count\r",
							"pm.test(\"Validating Contract Count\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"#Contracts\"]).to.eql(832);\r",
							"  console.log(\"Contract Count Value is matching. Expected: 1345, Current: \", responseJson.Value.Analysis0[\"#Contracts\"]);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay ContractLoss_Value All Types_EL\", () => {\r",
							"  const expectedContractLoss_EL = 455441465963.3514;\r",
							"  const actualContractLoss_EL = responseJson[\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Gross Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Gross Exposed Limit\", () => {\r",
							"  const expectedGrossExposedLimit = 455441465963.3514;\r",
							"  const actualGrossExposedLimit = responseJson[\"Gross Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedGrossExposedLimit - actualGrossExposedLimit);\r",
							"  console.log(\"Expected Gross Exposed Limit: \", expectedGrossExposedLimit);\r",
							"  console.log(\"Actual Gross Exposed Limit: \", actualGrossExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Gross Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Gross Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay GroundUpLoss\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay GroundUpLoss\", () => {\r",
							"  const expectedGroundUpLoss = 0;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[\"GroundUpLoss\"];\r",
							"  \r",
							"  pm.expect(actualGroundUpLoss).to.eql(expectedGroundUpLoss);\r",
							"  console.log(\"GroundUpLoss Value is matching. Expected: 0, Current: \", actualGroundUpLoss);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Net Pre Cat Exposed Limit\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 5117464221.981455;\r",
							"  const actualNetPreCatExposedLimit = responseJson[\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Net Pre Cat Loss\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Net Pre Cat Loss\", () => {\r",
							"  const expectedNetPreCatLoss = 0;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[\"Net Pre Cat Loss\"];\r",
							"  \r",
							"  pm.expect(actualNetPreCatLoss).to.eql(expectedNetPreCatLoss);\r",
							"  console.log(\"Net Pre Cat Loss Value is matching. Expected: 0, Current: \", actualNetPreCatLoss);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Net of Fac Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Net of Fac Exposed Limit\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 455432465963.3514;\r",
							"  const actualNetOfFacExposedLimit = responseJson[\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Net of Fac Loss\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Net of Fac Loss\", () => {\r",
							"  const expectedNetOfFacLoss = 0;\r",
							"  const actualNetOfFacLoss = responseJson.Value.Analysis0[\"Net of Fac Loss\"];\r",
							"  \r",
							"  pm.expect(actualNetOfFacLoss).to.eql(expectedNetOfFacLoss);\r",
							"  console.log(\"Net of Fac Loss Value is matching. Expected: 0, Current: \", actualNetOfFacLoss);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Fac Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Fac Exposed Limit\", () => {\r",
							"  const expectedFacExposedLimit = 9000000;\r",
							"  const actualFacExposedLimit = responseJson[\"Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedFacExposedLimit - actualFacExposedLimit);\r",
							"  console.log(\"Expected Fac Exposed Limit: \", expectedFacExposedLimit);\r",
							"  console.log(\"Actual Fac Exposed Limit: \", actualFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Fac Loss\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Fac Loss\", () => {\r",
							"  const expectedFacLoss = 0;\r",
							"  const actualFacLoss = responseJson.Value.Analysis0[\"Fac loss\"];\r",
							"  \r",
							"  pm.expect(actualFacLoss).to.eql(expectedFacLoss);\r",
							"  console.log(\"Fac Loss Value is matching. Expected: 0, Current: \", actualFacLoss);\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Treaty Exposed Limit\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Treaty Exposed Limit\", () => {\r",
							"  const expectedTreatyExposedLimit = 450315001741.36536;\r",
							"  const actualTreatyExposedLimit = responseJson[\"Treaty Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTreatyExposedLimit - actualTreatyExposedLimit);\r",
							"  console.log(\"Expected Treaty Exposed Limit: \", expectedTreatyExposedLimit);\r",
							"  console.log(\"Actual Treaty Exposed Limit: \", actualTreatyExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Treaty Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Treaty Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ABC Insurance Co with Hazard overlay Treaty Loss\r",
							"pm.test(\"Validating ABC Insurance Co with Hazard overlay Treaty Loss\", () => {\r",
							"  const expectedTreatyLoss = 0;\r",
							"  const actualTreatyLoss = responseJson.Value.Analysis0[\"Treaty Loss\"];\r",
							"  \r",
							"  pm.expect(actualTreatyLoss).to.eql(expectedTreatyLoss);\r",
							"  console.log(\"Treaty Loss Value is matching. Expected: 0, Current: \", actualTreatyLoss);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"measures\": [\r\n        \"Asset Count\",\r\n        \"#Contracts\",\r\n        \"TIV\",\r\n        \"Gross Exposed Limit\",\r\n        \"GroundUpLoss\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/analysis/summary",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"summary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Top 20 Assets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log(\"-------- TOP N First Row Value --------\")\r",
							"\r",
							"// Validating Asset Name\r",
							"pm.test(\"Validating Asset Name of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Name\"]).to.eql(\"CSAC EXCESS INSURANCE-IMPERIAL COUNTY\");\r",
							"  console.log(\"Asset Name Validation Passed\");\r",
							"});\r",
							"\r",
							"// Validating Asset Number\r",
							"pm.test(\"Validating Asset Number of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Number\"]).to.eql(1019);\r",
							"  console.log(\"Asset Number Validation Passed\");\r",
							"});\r",
							"\r",
							"// Validating Contract Number\r",
							"pm.test(\"Validating Contract Number of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Contract Number\"]).to.eql(\"2018-9000815-01- 237\");\r",
							"  console.log(\"Contract Number Validation Passed\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL of First Row\", () => {\r",
							"  const expected = 2005.7515200441517;\r",
							"  const actual = responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating TIV\r",
							"pm.test(\"Validating TIV of First Row\", () => {\r",
							"  const expected = 6625742;\r",
							"  const actual = responseJson.Value.Analysis0[0][\"TIV\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"TIV mismatch exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Validation Passed\");\r",
							"});\r",
							"\r",
							"// Validating Intensity\r",
							"pm.test(\"Validating Intensity of First Row\", () => {\r",
							"  const expected = 116.83181762695312;\r",
							"  const actual = responseJson.Value.Analysis0[0][\"Intensity\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(0.0001, \"Intensity mismatch exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLoss of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Validation Passed\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Net Pre Cat Exposed Limit\"]).to.eql(2005.7515200441517);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Validation Passed\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss\r",
							"pm.test(\"Validating Net Pre Cat Loss of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Validation Passed\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed Limit of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Net of Fac Exposed Limit\"]).to.eql(2005.7515200441517);\r",
							"  console.log(\"Net of Fac Exposed Limit Validation Passed\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss\r",
							"pm.test(\"Validating Net of Fac Loss of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Validation Passed\");\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed Limit of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Validation Passed\");\r",
							"});\r",
							"\r",
							"// Validating Fac Loss\r",
							"pm.test(\"Validating Fac Loss of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Validation Passed\");\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name of Third Row\r",
							"pm.test(\"Validating Asset Name of Third Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Asset Name\"]).to.eql(\"CSAC EXCESS INSURANCE-IMPERIAL COUNTY\");\r",
							"  console.log(\"Asset Name Validation Passed for Third Row\");\r",
							"});\r",
							"\r",
							"// Validating Asset Number of Third Row\r",
							"pm.test(\"Validating Asset Number of Third Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Asset Number\"]).to.eql(1019);\r",
							"  console.log(\"Asset Number Validation Passed for Third Row\");\r",
							"});\r",
							"\r",
							"// Validating Contract Number of Third Row\r",
							"pm.test(\"Validating Contract Number of Third Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Contract Number\"]).to.eql(\"2018-9000817-01- 293\");\r",
							"  console.log(\"Contract Number Validation Passed for Third Row\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL of Third Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL of Third Row\", () => {\r",
							"  const expected = 1002.3011434638138;\r",
							"  const actual = responseJson.Value.Analysis0[2][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL of Third Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL of Third Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Validation Passed for Third Row\");\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss of Third Row\r",
							"pm.test(\"Validating GroundUpLoss of Third Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Validation Passed for Third Row\");\r",
							"});\r",
							"\r",
							"// Validating Intensity of Third Row\r",
							"pm.test(\"Validating Intensity of Third Row\", () => {\r",
							"  const expected = 116.83181762695312;\r",
							"  const actual = responseJson.Value.Analysis0[2][\"Intensity\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(0.0001, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating Intensity Description of Third Row\r",
							"pm.test(\"Validating Intensity Description of Third Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Intensity Description\"]).to.eql(\" > 48.96\");\r",
							"  console.log(\"Intensity Description Validation Passed for Third Row\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit of Third Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit of Third Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Net Pre Cat Exposed Limit\"]).to.eql(1002.3011434638138);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Validation Passed for Third Row\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss of Third Row\r",
							"pm.test(\"Validating Net Pre Cat Loss of Third Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Validation Passed for Third Row\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit of Third Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit of Third Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Net of Fac Exposed Limit\"]).to.eql(1002.3011434638138);\r",
							"  console.log(\"Net of Fac Exposed Limit Validation Passed for Third Row\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss of Third Row\r",
							"pm.test(\"Validating Net of Fac Loss of Third Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Validation Passed for Third Row\");\r",
							"});\r",
							"\r",
							"// Validating TIV of Third Row\r",
							"pm.test(\"Validating TIV of Third Row\", () => {\r",
							"  const expected = 6625742;\r",
							"  const actual = responseJson.Value.Analysis0[2][\"TIV\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit of Third Row\r",
							"pm.test(\"Validating Treaty Exposed Limit of Third Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Validation Passed for Third Row\");\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss of Third Row\r",
							"pm.test(\"Validating Treaty Loss of Third Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Validation Passed for Third Row\");\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name of Fifth Row\r",
							"pm.test(\"Validating Asset Name of Fifth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Asset Name\"]).to.eql(\"No Name\");\r",
							"  console.log(\"Asset Name Validation Passed for Fifth Row\");\r",
							"});\r",
							"\r",
							"// Validating Asset Number of Fifth Row\r",
							"pm.test(\"Validating Asset Number of Fifth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Asset Number\"]).to.eql(5662);\r",
							"  console.log(\"Asset Number Validation Passed for Fifth Row\");\r",
							"});\r",
							"\r",
							"// Validating Contract Number of Fifth Row\r",
							"pm.test(\"Validating Contract Number of Fifth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Contract Number\"]).to.eql(\"2017-9000404-02- 442\");\r",
							"  console.log(\"Contract Number Validation Passed for Fifth Row\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL of Fifth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL of Fifth Row\", () => {\r",
							"  const expected = 5076.593874214082;\r",
							"  const actual = responseJson.Value.Analysis0[4][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL of Fifth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL of Fifth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Validation Passed for Fifth Row\");\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss of Fifth Row\r",
							"pm.test(\"Validating GroundUpLoss of Fifth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Validation Passed for Fifth Row\");\r",
							"});\r",
							"\r",
							"// Validating Intensity of Fifth Row\r",
							"pm.test(\"Validating Intensity of Fifth Row\", () => {\r",
							"  const expected = 116.69412231445312;\r",
							"  const actual = responseJson.Value.Analysis0[4][\"Intensity\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(0.0001, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating Intensity Description of Fifth Row\r",
							"pm.test(\"Validating Intensity Description of Fifth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Intensity Description\"]).to.eql(\" > 48.96\");\r",
							"  console.log(\"Intensity Description Validation Passed for Fifth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit of Fifth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit of Fifth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Net Pre Cat Exposed Limit\"]).to.eql(5076.593874214082);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Validation Passed for Fifth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss of Fifth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss of Fifth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Validation Passed for Fifth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit of Fifth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit of Fifth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Net of Fac Exposed Limit\"]).to.eql(5076.593874214082);\r",
							"  console.log(\"Net of Fac Exposed Limit Validation Passed for Fifth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss of Fifth Row\r",
							"pm.test(\"Validating Net of Fac Loss of Fifth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Validation Passed for Fifth Row\");\r",
							"});\r",
							"\r",
							"// Validating TIV of Fifth Row\r",
							"pm.test(\"Validating TIV of Fifth Row\", () => {\r",
							"  const expected = 25200329.9;\r",
							"  const actual = responseJson.Value.Analysis0[4][\"TIV\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit of Fifth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit of Fifth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Validation Passed for Fifth Row\");\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss of Fifth Row\r",
							"pm.test(\"Validating Treaty Loss of Fifth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Validation Passed for Fifth Row\");\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name of Seventh Row\r",
							"pm.test(\"Validating Asset Name of Seventh Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Asset Name\"]).to.eql(\"No Name\");\r",
							"  console.log(\"Asset Name Validation Passed for Seventh Row\");\r",
							"});\r",
							"\r",
							"// Validating Asset Number of Seventh Row\r",
							"pm.test(\"Validating Asset Number of Seventh Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Asset Number\"]).to.eql(1519);\r",
							"  console.log(\"Asset Number Validation Passed for Seventh Row\");\r",
							"});\r",
							"\r",
							"// Validating Contract Number of Seventh Row\r",
							"pm.test(\"Validating Contract Number of Seventh Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Contract Number\"]).to.eql(\"2017-9000404-02- 442\");\r",
							"  console.log(\"Contract Number Validation Passed for Seventh Row\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL of Seventh Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL of Seventh Row\", () => {\r",
							"  const expected = 3165.698322692284;\r",
							"  const actual = responseJson.Value.Analysis0[6][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL of Seventh Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL of Seventh Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Validation Passed for Seventh Row\");\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss of Seventh Row\r",
							"pm.test(\"Validating GroundUpLoss of Seventh Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Validation Passed for Seventh Row\");\r",
							"});\r",
							"\r",
							"// Validating Intensity of Seventh Row\r",
							"pm.test(\"Validating Intensity of Seventh Row\", () => {\r",
							"  const expected = 116.69412231445312;\r",
							"  const actual = responseJson.Value.Analysis0[6][\"Intensity\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(0.0001, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating Intensity Description of Seventh Row\r",
							"pm.test(\"Validating Intensity Description of Seventh Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Intensity Description\"]).to.eql(\" > 48.96\");\r",
							"  console.log(\"Intensity Description Validation Passed for Seventh Row\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit of Seventh Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit of Seventh Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Net Pre Cat Exposed Limit\"]).to.eql(3165.698322692284);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Validation Passed for Seventh Row\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss of Seventh Row\r",
							"pm.test(\"Validating Net Pre Cat Loss of Seventh Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Validation Passed for Seventh Row\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit of Seventh Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit of Seventh Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Net of Fac Exposed Limit\"]).to.eql(3165.698322692284);\r",
							"  console.log(\"Net of Fac Exposed Limit Validation Passed for Seventh Row\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss of Seventh Row\r",
							"pm.test(\"Validating Net of Fac Loss of Seventh Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Validation Passed for Seventh Row\");\r",
							"});\r",
							"\r",
							"// Validating TIV of Seventh Row\r",
							"pm.test(\"Validating TIV of Seventh Row\", () => {\r",
							"  const expected = 15714600;\r",
							"  const actual = responseJson.Value.Analysis0[6][\"TIV\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit of Seventh Row\r",
							"pm.test(\"Validating Treaty Exposed Limit of Seventh Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Validation Passed for Seventh Row\");\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss of Seventh Row\r",
							"pm.test(\"Validating Treaty Loss of Seventh Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Validation Passed for Seventh Row\");\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name of Tenth Row\r",
							"pm.test(\"Validating Asset Name of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Asset Name\"]).to.eql(\"Owner Operators Coastal-Free Standing\");\r",
							"  console.log(\"Asset Name Validation Passed for Tenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Asset Number of Tenth Row\r",
							"pm.test(\"Validating Asset Number of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Asset Number\"]).to.eql(1957);\r",
							"  console.log(\"Asset Number Validation Passed for Tenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Contract Number of Tenth Row\r",
							"pm.test(\"Validating Contract Number of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Contract Number\"]).to.eql(\"2016-9000027-03- 920\");\r",
							"  console.log(\"Contract Number Validation Passed for Tenth Row\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL of Tenth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL of Tenth Row\", () => {\r",
							"  const expected = 7965.106506825375;\r",
							"  const actual = responseJson.Value.Analysis0[9][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL of Tenth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Validation Passed for Tenth Row\");\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss of Tenth Row\r",
							"pm.test(\"Validating GroundUpLoss of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Validation Passed for Tenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Intensity of Tenth Row\r",
							"pm.test(\"Validating Intensity of Tenth Row\", () => {\r",
							"  const expected = 116.69412231445312;\r",
							"  const actual = responseJson.Value.Analysis0[9][\"Intensity\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(0.0001, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating Intensity Description of Tenth Row\r",
							"pm.test(\"Validating Intensity Description of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Intensity Description\"]).to.eql(\" > 48.96\");\r",
							"  console.log(\"Intensity Description Validation Passed for Tenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit of Tenth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Net Pre Cat Exposed Limit\"]).to.eql(7965.106506825375);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Validation Passed for Tenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss of Tenth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Validation Passed for Tenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit of Tenth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Net of Fac Exposed Limit\"]).to.eql(7965.106506825375);\r",
							"  console.log(\"Net of Fac Exposed Limit Validation Passed for Tenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss of Tenth Row\r",
							"pm.test(\"Validating Net of Fac Loss of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Validation Passed for Tenth Row\");\r",
							"});\r",
							"\r",
							"// Validating TIV of Tenth Row\r",
							"pm.test(\"Validating TIV of Tenth Row\", () => {\r",
							"  const expected = 2899000;\r",
							"  const actual = responseJson.Value.Analysis0[9][\"TIV\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit of Tenth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Validation Passed for Tenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss of Tenth Row\r",
							"pm.test(\"Validating Treaty Loss of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Validation Passed for Tenth Row\");\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name of Fifteenth Row\r",
							"pm.test(\"Validating Asset Name of Fifteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Asset Name\"]).to.eql(\"Owner Operators Coastal-Free Standing\");\r",
							"  console.log(\"Asset Name Validation Passed for Fifteenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Asset Number of Fifteenth Row\r",
							"pm.test(\"Validating Asset Number of Fifteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Asset Number\"]).to.eql(1958);\r",
							"  console.log(\"Asset Number Validation Passed for Fifteenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Contract Number of Fifteenth Row\r",
							"pm.test(\"Validating Contract Number of Fifteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Contract Number\"]).to.eql(\"2017-9000264-03- 921\");\r",
							"  console.log(\"Contract Number Validation Passed for Fifteenth Row\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL of Fifteenth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL of Fifteenth Row\", () => {\r",
							"  const expected = 3098.1489300315147;\r",
							"  const actual = responseJson.Value.Analysis0[14][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL of Fifteenth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL of Fifteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Validation Passed for Fifteenth Row\");\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss of Fifteenth Row\r",
							"pm.test(\"Validating GroundUpLoss of Fifteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Validation Passed for Fifteenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Intensity of Fifteenth Row\r",
							"pm.test(\"Validating Intensity of Fifteenth Row\", () => {\r",
							"  const expected = 116.69412231445312;\r",
							"  const actual = responseJson.Value.Analysis0[14][\"Intensity\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(0.0001, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating Intensity Description of Fifteenth Row\r",
							"pm.test(\"Validating Intensity Description of Fifteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Intensity Description\"]).to.eql(\" > 48.96\");\r",
							"  console.log(\"Intensity Description Validation Passed for Fifteenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit of Fifteenth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit of Fifteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Net Pre Cat Exposed Limit\"]).to.eql(3098.1489300315147);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Validation Passed for Fifteenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss of Fifteenth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss of Fifteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Validation Passed for Fifteenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit of Fifteenth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit of Fifteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Net of Fac Exposed Limit\"]).to.eql(3098.1489300315147);\r",
							"  console.log(\"Net of Fac Exposed Limit Validation Passed for Fifteenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss of Fifteenth Row\r",
							"pm.test(\"Validating Net of Fac Loss of Fifteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Validation Passed for Fifteenth Row\");\r",
							"});\r",
							"\r",
							"// Validating TIV of Fifteenth Row\r",
							"pm.test(\"Validating TIV of Fifteenth Row\", () => {\r",
							"  const expected = 2505800;\r",
							"  const actual = responseJson.Value.Analysis0[14][\"TIV\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit of Fifteenth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit of Fifteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Validation Passed for Fifteenth Row\");\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss of Fifteenth Row\r",
							"pm.test(\"Validating Treaty Loss of Fifteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Validation Passed for Fifteenth Row\");\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name of Twentieth Row\r",
							"pm.test(\"Validating Asset Name of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Name\"]).to.eql(\"Del Taco Restaurants Inc-Restaurant\");\r",
							"  console.log(\"Asset Name Validation Passed for Twentieth Row\");\r",
							"});\r",
							"\r",
							"// Validating Asset Number of Twentieth Row\r",
							"pm.test(\"Validating Asset Number of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Number\"]).to.eql(194);\r",
							"  console.log(\"Asset Number Validation Passed for Twentieth Row\");\r",
							"});\r",
							"\r",
							"// Validating Contract Number of Twentieth Row\r",
							"pm.test(\"Validating Contract Number of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Contract Number\"]).to.eql(\"2017-9000503-02- 567\");\r",
							"  console.log(\"Contract Number Validation Passed for Twentieth Row\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL of Twentieth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL of Twentieth Row\", () => {\r",
							"  const expected = 27278.638518495703;\r",
							"  const actual = responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL of Twentieth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Validation Passed for Twentieth Row\");\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss of Twentieth Row\r",
							"pm.test(\"Validating GroundUpLoss of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Validation Passed for Twentieth Row\");\r",
							"});\r",
							"\r",
							"// Validating Intensity of Twentieth Row\r",
							"pm.test(\"Validating Intensity of Twentieth Row\", () => {\r",
							"  const expected = 116.69412231445312;\r",
							"  const actual = responseJson.Value.Analysis0[19][\"Intensity\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(0.0001, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating Intensity Description of Twentieth Row\r",
							"pm.test(\"Validating Intensity Description of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Intensity Description\"]).to.eql(\" > 48.96\");\r",
							"  console.log(\"Intensity Description Validation Passed for Twentieth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit of Twentieth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Net Pre Cat Exposed Limit\"]).to.eql(27278.638518495703);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Validation Passed for Twentieth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss of Twentieth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Validation Passed for Twentieth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit of Twentieth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Net of Fac Exposed Limit\"]).to.eql(27278.638518495703);\r",
							"  console.log(\"Net of Fac Exposed Limit Validation Passed for Twentieth Row\");\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss of Twentieth Row\r",
							"pm.test(\"Validating Net of Fac Loss of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Validation Passed for Twentieth Row\");\r",
							"});\r",
							"\r",
							"// Validating TIV of Twentieth Row\r",
							"pm.test(\"Validating TIV of Twentieth Row\", () => {\r",
							"  const expected = 1296459;\r",
							"  const actual = responseJson.Value.Analysis0[19][\"TIV\"];\r",
							"  const difference = Math.abs(expected - actual);\r",
							"  console.log(\"Expected:\", expected, \"Actual:\", actual, \"Difference:\", difference);\r",
							"\r",
							"  pm.expect(difference).to.be.below(1, \"Difference exceeds threshold\");\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit of Twentieth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Validation Passed for Twentieth Row\");\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss of Twentieth Row\r",
							"pm.test(\"Validating Treaty Loss of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Validation Passed for Twentieth Row\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"AdditionalSortMeasure\": \"TIV\",\r\n    \"AttributeList\": [\r\n        \"Asset Number\",\r\n        \"Asset Name\",\r\n        \"Contract Number\",\r\n        \"ContractLoss_Value All Types_EL\",\r\n        \"TIV\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Intensity\",\r\n        \"GroundUpLoss\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ],\r\n    \"SortDirection\": -1,\r\n    \"Count\": 20,\r\n    \"TopNBy\": \"Intensity\",\r\n    \"ContractMode\": false,\r\n    \"PercentageAttributes\": false,\r\n    \"TopNAssetsBy\": \"Intensity\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/analysis/topn",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"topn"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tiv/TIV Range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"//const data1 = JSON(responseJson);\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === <1M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === <1M\", () => {\r",
							"    const TIVRange1M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"<1M\");\r",
							"    pm.expect(TIVRange1M[\"TIV\"].toFixed(0)).to.eql(25226478841.285316.toFixed(0));\r",
							"    pm.expect(TIVRange1M[\"TIV Range\"]).to.eql(\"<1M\");\r",
							"    pm.expect(TIVRange1M[\"Percentage\"].toFixed(0)).to.eql(3.3620842991581483.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 1M - 5M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 1M - 5M\", () => {\r",
							"    const TIVRange1M_5M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"1M -5M\");\r",
							"    pm.expect(TIVRange1M_5M[\"TIV\"].toFixed(0)).to.eql(90732422654.80403.toFixed(0));\r",
							"    pm.expect(TIVRange1M_5M[\"TIV Range\"]).to.eql(\"1M -5M\");\r",
							"    pm.expect(TIVRange1M_5M[\"Percentage\"].toFixed(0)).to.eql(12.092454739781475.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\", () => {\r",
							"    const TIVRange5M_10M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"5M – 10M\");\r",
							"    pm.expect(TIVRange5M_10M[\"TIV\"].toFixed(0)).to.eql(65332337495.42733.toFixed(0));\r",
							"    pm.expect(TIVRange5M_10M[\"TIV Range\"]).to.eql(\"5M – 10M\");\r",
							"    pm.expect(TIVRange5M_10M[\"Percentage\"].toFixed(0)).to.eql(8.707232884250041.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 10M - 50M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 10M - 50M\", () => {\r",
							"    const TIVRange10M_50M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"10M -50M\");\r",
							"    pm.expect(TIVRange10M_50M[\"TIV\"].toFixed(0)).to.eql(239468794024.72424.toFixed(0));\r",
							"    pm.expect(TIVRange10M_50M[\"TIV Range\"]).to.eql(\"10M -50M\");\r",
							"    pm.expect(TIVRange10M_50M[\"Percentage\"].toFixed(0)).to.eql(31.91544399019425.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 50M - 100M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 50M - 100M\", () => {\r",
							"    const TIVRange50M_100M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"50M-100M\");\r",
							"    pm.expect(TIVRange50M_100M[\"TIV\"].toFixed(0)).to.eql(92317599887.03839.toFixed(0));\r",
							"    pm.expect(TIVRange50M_100M[\"TIV Range\"]).to.eql(\"50M-100M\");\r",
							"    pm.expect(TIVRange50M_100M[\"Percentage\"].toFixed(0)).to.eql(12.303720827189437.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 100M - 500M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 100M - 500M\", () => {\r",
							"    const TIVRange100M_500M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"100M-500M\");\r",
							"    pm.expect(TIVRange100M_500M[\"TIV\"].toFixed(0)).to.eql(160654133267.25943.toFixed(0));\r",
							"    pm.expect(TIVRange100M_500M[\"TIV Range\"]).to.eql(\"100M-500M\");\r",
							"    pm.expect(TIVRange100M_500M[\"Percentage\"].toFixed(0)).to.eql(21.411340934698334.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 500M - 1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 500M - 1B\", () => {\r",
							"    const TIVRange500M_1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"500M-1B\");\r",
							"    pm.expect(TIVRange500M_1B[\"TIV\"].toFixed(0)).to.eql(34092647959.049995.toFixed(0));\r",
							"    pm.expect(TIVRange500M_1B[\"TIV Range\"]).to.eql(\"500M-1B\");\r",
							"    pm.expect(TIVRange500M_1B[\"Percentage\"].toFixed(0)).to.eql(4.543731891438557.toFixed(0));\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === >1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === >1B\", () => {\r",
							"    const TIVRange1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \">1B\");\r",
							"    pm.expect(TIVRange1B[\"TIV\"].toFixed(0)).to.eql(42498201148.14.toFixed(0));\r",
							"    pm.expect(TIVRange1B[\"TIV Range\"]).to.eql(\">1B\");\r",
							"    pm.expect(TIVRange1B[\"Percentage\"].toFixed(0)).to.eql(5.663990433289748.toFixed(0));\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"TIV\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"TIV\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}