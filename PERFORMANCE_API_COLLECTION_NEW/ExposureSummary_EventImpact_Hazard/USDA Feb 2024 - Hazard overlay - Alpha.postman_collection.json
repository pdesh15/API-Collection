{
	"info": {
		"_postman_id": "228d467b-4de8-40ab-90e2-1a9b36676566",
		"name": "USDA Feb 2024 - Hazard overlay : Alpha",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14426843"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set analysis - Event Impact Analysis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"setTimeout(function() {\r",
							"    console.log(\"Next API Call After 3 Minutes \")\r",
							"}, 180000);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 24474,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"analysisObject\": [\r\n        {\r\n            \"CurrencyCode\": \"USD\",\r\n            \"IncludeAllContracts\": true,\r\n            \"big_tiff_flag\": true,\r\n            \"damageAdjustment\": 1,\r\n            \"ValuationTypeCode\": 1,\r\n            \"DamageFunctionID\": 100025,\r\n            \"ExposureFilterSets\": {\r\n                \"AssetModel\": \"ERBASICS\",\r\n                \"FilterList\": [\r\n                    {\r\n                        \"AndOr\": \"AND\",\r\n                        \"FilterList\": [\r\n                            {\r\n                                \"AssetType\": \"Site\",\r\n                                \"Attribute\": \"Cause Of Loss\",\r\n                                \"Operator\": \"EQ\",\r\n                                \"Value\": \"TCWI\",\r\n                                \"AndOr\": \"AND\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"quantile\": 50,\r\n            \"Events\": [\r\n                {\r\n                    \"EventID\": 4098,\r\n                    \"SeverityModelID\": 44\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/load-exposure",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"load-exposure"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposure Summary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"// Validating Asset Count\r",
							"pm.test(\"Validating Asset Count\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Asset Count\"]).to.eql(1067);\r",
							"  console.log(\"Asset Count Value is matching. Expected: 1067, Current: \", responseJson.Value.Analysis0[\"Asset Count\"]);\r",
							"});\r",
							"\r",
							"// Validating #Contracts\r",
							"pm.test(\"Validating #Contracts\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"#Contracts\"]).to.eql(740);\r",
							"  console.log(\"#Contracts Value is matching. Expected: 740, Current: \", responseJson.Value.Analysis0[\"#Contracts\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV (Total Insured Value)\r",
							"pm.test(\"Validating TIV\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"TIV\"]).to.eql(1907917759);\r",
							"  console.log(\"TIV Value is matching. Expected: 1907917759, Current: \", responseJson.Value.Analysis0[\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Validating Gross Exposed Limit\r",
							"pm.test(\"Validating Gross Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Gross Exposed Limit\"]).to.eql(1770366033.8600001);\r",
							"  console.log(\"Gross Exposed Limit Value is matching. Expected: 1770366033.8600001, Current: \", responseJson.Value.Analysis0[\"Gross Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLoss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"GroundUpLoss\"]).to.eql(75266050.48142184);\r",
							"  console.log(\"GroundUpLoss Value is matching. Expected: 75266050.48142184, Current: \", responseJson.Value.Analysis0[\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"ContractLoss_Value All Types_GL\"]).to.eql(13830452.927828146);\r",
							"  console.log(\"ContractLoss_Value All Types_GL is matching. Expected: 13830452.927828146, Current: \", responseJson.Value.Analysis0[\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net Pre Cat Exposed Limit\"]).to.eql(1770366033.8600001);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Value is matching. Expected: 1770366033.8600001, Current: \", responseJson.Value.Analysis0[\"Net Pre Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss\r",
							"pm.test(\"Validating Net Pre Cat Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net Pre Cat Loss\"]).to.eql(13830452.927828146);\r",
							"  console.log(\"Net Pre Cat Loss Value is matching. Expected: 13830452.927828146, Current: \", responseJson.Value.Analysis0[\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net of Fac Exposed Limit\"]).to.eql(1770366033.8600001);\r",
							"  console.log(\"Net of Fac Exposed Limit Value is matching. Expected: 1770366033.8600001, Current: \", responseJson.Value.Analysis0[\"Net of Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss\r",
							"pm.test(\"Validating Net of Fac Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net of Fac Loss\"]).to.eql(13830452.927828146);\r",
							"  console.log(\"Net of Fac Loss Value is matching. Expected: 13830452.927828146, Current: \", responseJson.Value.Analysis0[\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss\r",
							"pm.test(\"Validating Fac Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit\r",
							"pm.test(\"Validating Treaty Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss\r",
							"pm.test(\"Validating Treaty Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Value is matching. Expected: 0, Current: \", responseJson.Value.Analysis0[\"Treaty Loss\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"measures\": [\r\n        \"Asset Count\",\r\n        \"#Contracts\",\r\n        \"TIV\",\r\n        \"Gross Exposed Limit\",\r\n        \"GroundUpLoss\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/summary",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"summary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Top 20 Assets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log(\"-------- TOP N First Row Value --------\")\r",
							"\r",
							"// Validating Asset Name Of 1st Row, SHOPPES OF IL VILLAGGIO CONDOMINIUM ASSN-LOCATION 1\r",
							"pm.test(\"Validating Asset Name Of 1st Row, SHOPPES OF IL VILLAGGIO CONDOMINIUM ASSN-LOCATION 1\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Name\"]).to.eql(\"SHOPPES OF IL VILLAGGIO CONDOMINIUM ASSN-LOCATION 1\");\r",
							"  console.log(\"Asset Name Miss Matching In 1st Row Expected: SHOPPES OF IL VILLAGGIO CONDOMINIUM ASSN-LOCATION 1 Current:\", responseJson.Value.Analysis0[0][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 1st Row, SHOPPES OF IL VILLAGGIO CONDOMINIUM ASSN-LOCATION 1\r",
							"pm.test(\"Validating Asset Number Of 1st Row, SHOPPES OF IL VILLAGGIO CONDOMINIUM ASSN-LOCATION 1\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Number\"]).to.eql(5193);\r",
							"  console.log(\"Asset Number Miss Matching In 1st Row Expected: 5193 Current:\", responseJson.Value.Analysis0[0][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 1st Row, SHOPPES OF IL VILLAGGIO CONDOMINIUM ASSN-LOCATION 1\r",
							"pm.test(\"Validating Contract Number Of 1st Row, SHOPPES OF IL VILLAGGIO CONDOMINIUM ASSN-LOCATION 1\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Contract Number\"]).to.eql(\"2024-003468- 3329\");\r",
							"  console.log(\"Contract Number Miss Matching In 1st Row Expected: 2024-003468- 3329 Current:\", responseJson.Value.Analysis0[0][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 1st Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 1st Row\", () => {\r",
							"  const expectedContractLoss_EL = 5714460;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 1st Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 1st Row\", () => {\r",
							"  const expectedContractLoss_GL = 838030.2125579119;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_GL\"];\r",
							"  const difference = Math.abs(expectedContractLoss_GL - actualContractLoss_GL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_GL: \", expectedContractLoss_GL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_GL: \", actualContractLoss_GL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_GL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_GL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 1st Row\r",
							"pm.test(\"Validating GroundUpLoss Of 1st Row\", () => {\r",
							"  const expectedGroundUpLoss = 1472970.2125579119;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[0][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 1st Row\r",
							"pm.test(\"Validating Intensity Of 1st Row\", () => {\r",
							"  const expectedIntensity = 149.64500427246094;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[0][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 1st Row\r",
							"pm.test(\"Validating TIV Of 1st Row\", () => {\r",
							"  const expectedTIV = 6349400;\r",
							"  const actualTIV = responseJson.Value.Analysis0[0][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 1st Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 1st Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 5714460;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[0][\"Net Pre Cat Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 1st Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 1st Row\", () => {\r",
							"  const expectedNetPreCatLoss = 838030.2125579119;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[0][\"Net Pre Cat Loss\"];\r",
							"  const difference = Math.abs(expectedNetPreCatLoss - actualNetPreCatLoss);\r",
							"  console.log(\"Expected Net Pre Cat Loss: \", expectedNetPreCatLoss);\r",
							"  console.log(\"Actual Net Pre Cat Loss: \", actualNetPreCatLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Loss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Loss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 1st Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 1st Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 5714460;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[0][\"Net of Fac Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 1st Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 1st Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 1st Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 1st Row\r",
							"pm.test(\"Validating Treaty Loss Of 1st Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 1st Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of 5th Row, MARCUS SAMUELSSON DEVELOPMENT GROUP, LLC, RED ROOSTER OVERTO-LOCATION 1\r",
							"pm.test(\"Validating Asset Name Of 5th Row, MARCUS SAMUELSSON DEVELOPMENT GROUP, LLC, RED ROOSTER OVERTO-LOCATION 1\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Asset Name\"]).to.eql(\"MARCUS SAMUELSSON DEVELOPMENT GROUP, LLC, RED ROOSTER OVERTO-LOCATION 1\");\r",
							"  console.log(\"Asset Name Miss Matching In 5th Row Expected: MARCUS SAMUELSSON DEVELOPMENT GROUP, LLC, RED ROOSTER OVERTO-LOCATION 1 Current:\", responseJson.Value.Analysis0[4][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 5th Row, MARCUS SAMUELSSON DEVELOPMENT GROUP, LLC, RED ROOSTER OVERTO-LOCATION 1\r",
							"pm.test(\"Validating Asset Number Of 5th Row, MARCUS SAMUELSSON DEVELOPMENT GROUP, LLC, RED ROOSTER OVERTO-LOCATION 1\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Asset Number\"]).to.eql(1096);\r",
							"  console.log(\"Asset Number Miss Matching In 5th Row Expected: 1096 Current:\", responseJson.Value.Analysis0[4][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 5th Row, MARCUS SAMUELSSON DEVELOPMENT GROUP, LLC, RED ROOSTER OVERTO-LOCATION 1\r",
							"pm.test(\"Validating Contract Number Of 5th Row, MARCUS SAMUELSSON DEVELOPMENT GROUP, LLC, RED ROOSTER OVERTO-LOCATION 1\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Contract Number\"]).to.eql(\"2021-802086- 626\");\r",
							"  console.log(\"Contract Number Miss Matching In 5th Row Expected: 2021-802086- 626 Current:\", responseJson.Value.Analysis0[4][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 5th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 5th Row\", () => {\r",
							"  const expectedContractLoss_EL = 6435000;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[4][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 5th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 5th Row\", () => {\r",
							"  const expectedContractLoss_GL = 200352.82656550407;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[4][\"ContractLoss_Value All Types_GL\"];\r",
							"  const difference = Math.abs(expectedContractLoss_GL - actualContractLoss_GL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_GL: \", expectedContractLoss_GL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_GL: \", actualContractLoss_GL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_GL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_GL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 5th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 5th Row\", () => {\r",
							"  const expectedGroundUpLoss = 915352.8265655041;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[4][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 5th Row\r",
							"pm.test(\"Validating Intensity Of 5th Row\", () => {\r",
							"  const expectedIntensity = 136.5500030517578;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[4][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 5th Row\r",
							"pm.test(\"Validating TIV Of 5th Row\", () => {\r",
							"  const expectedTIV = 7150000;\r",
							"  const actualTIV = responseJson.Value.Analysis0[4][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 5th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 5th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 6435000;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[4][\"Net Pre Cat Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 5th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 5th Row\", () => {\r",
							"  const expectedNetPreCatLoss = 200352.82656550407;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[4][\"Net Pre Cat Loss\"];\r",
							"  const difference = Math.abs(expectedNetPreCatLoss - actualNetPreCatLoss);\r",
							"  console.log(\"Expected Net Pre Cat Loss: \", expectedNetPreCatLoss);\r",
							"  console.log(\"Actual Net Pre Cat Loss: \", actualNetPreCatLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Loss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Loss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 5th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 5th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 6435000;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[4][\"Net of Fac Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 5th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 5th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 5th Row Expected: 0 Current:\", responseJson.Value.Analysis0[4][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 5th Row\r",
							"pm.test(\"Validating Treaty Loss Of 5th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 5th Row Expected: 0 Current:\", responseJson.Value.Analysis0[4][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of 10th Row, PERPETUAL LOVE 4136, LLC-LOCATION 1\r",
							"pm.test(\"Validating Asset Name Of 10th Row, PERPETUAL LOVE 4136, LLC-LOCATION 1\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Asset Name\"]).to.eql(\"PERPETUAL LOVE 4136, LLC-LOCATION 1\");\r",
							"  console.log(\"Asset Name Miss Matching In 10th Row Expected: PERPETUAL LOVE 4136, LLC-LOCATION 1 Current:\", responseJson.Value.Analysis0[9][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 10th Row, PERPETUAL LOVE 4136, LLC-LOCATION 1\r",
							"pm.test(\"Validating Asset Number Of 10th Row, PERPETUAL LOVE 4136, LLC-LOCATION 1\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Asset Number\"]).to.eql(639);\r",
							"  console.log(\"Asset Number Miss Matching In 10th Row Expected: 639 Current:\", responseJson.Value.Analysis0[9][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 10th Row, PERPETUAL LOVE 4136, LLC-LOCATION 1\r",
							"pm.test(\"Validating Contract Number Of 10th Row, PERPETUAL LOVE 4136, LLC-LOCATION 1\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Contract Number\"]).to.eql(\"2020-809659- 368\");\r",
							"  console.log(\"Contract Number Miss Matching In 10th Row Expected: 2020-809659- 368 Current:\", responseJson.Value.Analysis0[9][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 10th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 10th Row\", () => {\r",
							"  const expectedContractLoss_EL = 7462350;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[9][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 10th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 10th Row\", () => {\r",
							"  const expectedContractLoss_GL = 0;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[9][\"ContractLoss_Value All Types_GL\"];\r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 10th Row Expected: 0 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 10th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 10th Row\", () => {\r",
							"  const expectedGroundUpLoss = 750352.1237634122;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[9][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 10th Row\r",
							"pm.test(\"Validating Intensity Of 10th Row\", () => {\r",
							"  const expectedIntensity = 128.39500427246094;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[9][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 10th Row\r",
							"pm.test(\"Validating TIV Of 10th Row\", () => {\r",
							"  const expectedTIV = 8291500;\r",
							"  const actualTIV = responseJson.Value.Analysis0[9][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 10th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 10th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 7462350;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[9][\"Net Pre Cat Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 10th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 10th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In 10th Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 10th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 10th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 7462350;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[9][\"Net of Fac Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 10th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 10th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 10th Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 10th Row\r",
							"pm.test(\"Validating Treaty Loss Of 10th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 10th Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of 15th Row, 528 RIVERSIDE, LLC-528 NW 7th Ave\r",
							"pm.test(\"Validating Asset Name Of 15th Row, 528 RIVERSIDE, LLC-528 NW 7th Ave\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Asset Name\"]).to.eql(\"528 RIVERSIDE, LLC-528 NW 7th Ave\");\r",
							"  console.log(\"Asset Name Miss Matching In 15th Row Expected: 528 RIVERSIDE, LLC-528 NW 7th Ave Current:\", responseJson.Value.Analysis0[14][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 15th Row, 528 RIVERSIDE, LLC-528 NW 7th Ave\r",
							"pm.test(\"Validating Asset Number Of 15th Row, 528 RIVERSIDE, LLC-528 NW 7th Ave\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Asset Number\"]).to.eql(2870);\r",
							"  console.log(\"Asset Number Miss Matching In 15th Row Expected: 2870 Current:\", responseJson.Value.Analysis0[14][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 15th Row, 528 RIVERSIDE, LLC-528 NW 7th Ave\r",
							"pm.test(\"Validating Contract Number Of 15th Row, 528 RIVERSIDE, LLC-528 NW 7th Ave\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Contract Number\"]).to.eql(\"2022-811056- 1726\");\r",
							"  console.log(\"Contract Number Miss Matching In 15th Row Expected: 2022-811056- 1726 Current:\", responseJson.Value.Analysis0[14][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 15th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 15th Row\", () => {\r",
							"  const expectedContractLoss_EL = 5562000;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[14][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 15th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 15th Row\", () => {\r",
							"  const expectedContractLoss_GL = 94234.08043384552;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[14][\"ContractLoss_Value All Types_GL\"];\r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 15th Row Expected: 94234.08043384552 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 15th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 15th Row\", () => {\r",
							"  const expectedGroundUpLoss = 712234.0804338455;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[14][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 15th Row\r",
							"pm.test(\"Validating Intensity Of 15th Row\", () => {\r",
							"  const expectedIntensity = 134.00250244140625;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[14][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 15th Row\r",
							"pm.test(\"Validating TIV Of 15th Row\", () => {\r",
							"  const expectedTIV = 6180000;\r",
							"  const actualTIV = responseJson.Value.Analysis0[14][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 15th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 15th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 5562000;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[14][\"Net Pre Cat Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 15th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 15th Row\", () => {\r",
							"  const expectedNetPreCatLoss = 94234.08043384552;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[14][\"Net Pre Cat Loss\"];\r",
							"  const difference = Math.abs(expectedNetPreCatLoss - actualNetPreCatLoss);\r",
							"  console.log(\"Expected Net Pre Cat Loss: \", expectedNetPreCatLoss);\r",
							"  console.log(\"Actual Net Pre Cat Loss: \", actualNetPreCatLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Loss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Loss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 15th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 15th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 5562000;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[14][\"Net of Fac Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 15th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 15th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 15th Row Expected: 0 Current:\", responseJson.Value.Analysis0[14][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 15th Row\r",
							"pm.test(\"Validating Treaty Loss Of 15th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[14][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 15th Row Expected: 0 Current:\", responseJson.Value.Analysis0[14][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of 20th Row, ANTHONYS 32, LLC-Location 1\r",
							"pm.test(\"Validating Asset Name Of 20th Row, ANTHONYS 32, LLC-Location 1\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Name\"]).to.eql(\"ANTHONYS 32, LLC-Location 1\");\r",
							"  console.log(\"Asset Name Miss Matching In 20th Row Expected: ANTHONYS 32, LLC-Location 1 Current:\", responseJson.Value.Analysis0[19][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 20th Row, ANTHONYS 32, LLC-Location 1\r",
							"pm.test(\"Validating Asset Number Of 20th Row, ANTHONYS 32, LLC-Location 1\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Number\"]).to.eql(6028);\r",
							"  console.log(\"Asset Number Miss Matching In 20th Row Expected: 6028 Current:\", responseJson.Value.Analysis0[19][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 20th Row, ANTHONYS 32, LLC-Location 1\r",
							"pm.test(\"Validating Contract Number Of 20th Row, ANTHONYS 32, LLC-Location 1\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Contract Number\"]).to.eql(\"2024-004268- 3916\");\r",
							"  console.log(\"Contract Number Miss Matching In 20th Row Expected: 2024-004268- 3916 Current:\", responseJson.Value.Analysis0[19][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 20th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 20th Row\", () => {\r",
							"  const expectedContractLoss_EL = 4417500;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_EL\"];\r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 20th Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 20th Row\", () => {\r",
							"  const expectedContractLoss_GL = 371425.90686678886;\r",
							"  const actualContractLoss_GL = responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_GL\"];\r",
							"  pm.expect(actualContractLoss_GL).to.eql(expectedContractLoss_GL);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In 20th Row Expected: 371425.90686678886 Current:\", actualContractLoss_GL);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 20th Row\r",
							"pm.test(\"Validating GroundUpLoss Of 20th Row\", () => {\r",
							"  const expectedGroundUpLoss = 603925.9068667889;\r",
							"  const actualGroundUpLoss = responseJson.Value.Analysis0[19][\"GroundUpLoss\"];\r",
							"  const difference = Math.abs(expectedGroundUpLoss - actualGroundUpLoss);\r",
							"  console.log(\"Expected GroundUpLoss: \", expectedGroundUpLoss);\r",
							"  console.log(\"Actual GroundUpLoss: \", actualGroundUpLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`GroundUpLoss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"GroundUpLoss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Intensity Of 20th Row\r",
							"pm.test(\"Validating Intensity Of 20th Row\", () => {\r",
							"  const expectedIntensity = 136.9199981689453;\r",
							"  const actualIntensity = responseJson.Value.Analysis0[19][\"Intensity\"];\r",
							"  const difference = Math.abs(expectedIntensity - actualIntensity);\r",
							"  console.log(\"Expected Intensity: \", expectedIntensity);\r",
							"  console.log(\"Actual Intensity: \", actualIntensity);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Intensity mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Intensity is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating TIV Of 20th Row\r",
							"pm.test(\"Validating TIV Of 20th Row\", () => {\r",
							"  const expectedTIV = 4650000;\r",
							"  const actualTIV = responseJson.Value.Analysis0[19][\"TIV\"];\r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 20th Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 20th Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 4417500;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[19][\"Net Pre Cat Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 20th Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 20th Row\", () => {\r",
							"  const expectedNetPreCatLoss = 371425.90686678886;\r",
							"  const actualNetPreCatLoss = responseJson.Value.Analysis0[19][\"Net Pre Cat Loss\"];\r",
							"  const difference = Math.abs(expectedNetPreCatLoss - actualNetPreCatLoss);\r",
							"  console.log(\"Expected Net Pre Cat Loss: \", expectedNetPreCatLoss);\r",
							"  console.log(\"Actual Net Pre Cat Loss: \", actualNetPreCatLoss);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Loss mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Loss is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 20th Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 20th Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 4417500;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[19][\"Net of Fac Exposed Limit\"];\r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 20th Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 20th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In 20th Row Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 20th Row\r",
							"pm.test(\"Validating Treaty Loss Of 20th Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In 20th Row Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Treaty Loss\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"AdditionalSortMeasure\": \"TIV\",\r\n    \"AttributeList\": [\r\n        \"#\",\r\n        \"Asset Number\",\r\n        \"Asset Name\",\r\n        \"Contract Number\",\r\n        \"ContractLoss_Value All Types_EL\",\r\n        \"TIV\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Intensity\",\r\n        \"GroundUpLoss\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ],\r\n    \"SortDirection\": -1,\r\n    \"Count\": 20,\r\n    \"TopNBy\": \"GroundUpLoss\",\r\n    \"ContractMode\": false,\r\n    \"PercentageAttributes\": false,\r\n    \"TopNAssetsBy\": \"GroundUpLoss\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/topn",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"topn"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tiv/TIV Range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"//const data1 = JSON(responseJson);\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === <1M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === <1M\", () => {\r",
							"    const TIVRange1M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"<1M\");\r",
							"    pm.expect(TIVRange1M[\"TIV\"]).to.eql(247305312);  // Validating TIV\r",
							"    pm.expect(TIVRange1M[\"TIV Range\"]).to.eql(\"<1M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1M[\"Percentage\"].toFixed(0)).to.eql(12.962053046228814.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 1M - 5M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 1M -5M\", () => {\r",
							"    const TIVRange1M_5M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"1M -5M\");\r",
							"    pm.expect(TIVRange1M_5M[\"TIV\"]).to.eql(1155281384);  // Validating TIV\r",
							"    pm.expect(TIVRange1M_5M[\"TIV Range\"]).to.eql(\"1M -5M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1M_5M[\"Percentage\"].toFixed(0)).to.eql(60.55194876982116.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\", () => {\r",
							"    const TIVRange5M_10M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"5M – 10M\");\r",
							"    pm.expect(TIVRange5M_10M[\"TIV\"]).to.eql(505331063);  // Validating TIV\r",
							"    pm.expect(TIVRange5M_10M[\"TIV Range\"]).to.eql(\"5M – 10M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange5M_10M[\"Percentage\"].toFixed(0)).to.eql(26.485998183950027.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 10M - 50M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 10M -50M\", () => {\r",
							"    const TIVRange10M_50M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"10M -50M\");\r",
							"    pm.expect(TIVRange10M_50M[\"TIV\"]).to.eql(0);  // Validating TIV\r",
							"    pm.expect(TIVRange10M_50M[\"TIV Range\"]).to.eql(\"10M -50M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange10M_50M[\"Percentage\"]).to.eql(0);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 50M-100M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 50M-100M\", () => {\r",
							"    const TIVRange50M_100M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"50M-100M\");\r",
							"    pm.expect(TIVRange50M_100M[\"TIV\"]).to.eql(0);  // Validating TIV\r",
							"    pm.expect(TIVRange50M_100M[\"TIV Range\"]).to.eql(\"50M-100M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange50M_100M[\"Percentage\"]).to.eql(0);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 100M-500M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 100M-500M\", () => {\r",
							"    const TIVRange100M_500M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"100M-500M\");\r",
							"    pm.expect(TIVRange100M_500M[\"TIV\"]).to.eql(0);  // Validating TIV\r",
							"    pm.expect(TIVRange100M_500M[\"TIV Range\"]).to.eql(\"100M-500M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange100M_500M[\"Percentage\"]).to.eql(0);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 500M-1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 500M-1B\", () => {\r",
							"    const TIVRange500M_1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"500M-1B\");\r",
							"    pm.expect(TIVRange500M_1B[\"TIV\"]).to.eql(0);  // Validating TIV\r",
							"    pm.expect(TIVRange500M_1B[\"TIV Range\"]).to.eql(\"500M-1B\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange500M_1B[\"Percentage\"]).to.eql(0);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === >1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === >1B\", () => {\r",
							"    const TIVRange1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \">1B\");\r",
							"    pm.expect(TIVRange1B[\"TIV\"]).to.eql(0);  // Validating TIV\r",
							"    pm.expect(TIVRange1B[\"TIV Range\"]).to.eql(\">1B\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1B[\"Percentage\"]).to.eql(0);  // Validating Percentage\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"TIV\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"TIV\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}