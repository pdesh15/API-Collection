{
	"info": {
		"_postman_id": "3bc521c5-6abb-4303-a4e0-53a27ed883fa",
		"name": "VRU 5M Coverage - Hazard Overlay : Alpha",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14426843"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set analysis - Event Impact Analysis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"setTimeout(function() {\r",
							"    console.log(\"Next API Call After 3 Minutes \")\r",
							"}, 180000);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 24562,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"analysisObject\": [\r\n        {\r\n            \"CurrencyCode\": \"USD\",\r\n            \"IncludeAllContracts\": true,\r\n            \"big_tiff_flag\": true,\r\n            \"damageAdjustment\": 1,\r\n            \"ValuationTypeCode\": 1,\r\n            \"ExposureFilterSets\": {\r\n                \"AssetModel\": \"ERBASICS\",\r\n                \"FilterList\": [\r\n                    {\r\n                        \"AndOr\": \"AND\",\r\n                        \"FilterList\": [\r\n                            {\r\n                                \"AssetType\": \"Site\",\r\n                                \"Attribute\": \"Cause Of Loss\",\r\n                                \"Operator\": \"EQ\",\r\n                                \"Value\": \"EQSH\",\r\n                                \"AndOr\": \"AND\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"quantile\": 50,\r\n            \"Events\": [\r\n                {\r\n                    \"EventID\": 247331,\r\n                    \"SeverityModelID\": 157\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/load-exposure",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"load-exposure"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposure Summary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responseJson = pm.response.json().Value.Analysis0;\r",
							"\r",
							"// Validating Asset Count\r",
							"pm.test(\"Validating Asset Count\", () => {\r",
							"  pm.expect(responseJson[\"Asset Count\"]).to.eql(227656);\r",
							"  console.log(\"Asset Count Value is matching. Expected: 227656, Current: \", responseJson[\"Asset Count\"]);\r",
							"});\r",
							"\r",
							"// Validating #Assets\r",
							"pm.test(\"Validating #Assets\", () => {\r",
							"  pm.expect(responseJson[\"#Assets\"]).to.eql(227656);\r",
							"  console.log(\"#Assets Value is matching. Expected: 227656, Current: \", responseJson[\"#Assets\"]);\r",
							"});\r",
							"\r",
							"// Validating #Contracts\r",
							"pm.test(\"Validating #Contracts\", () => {\r",
							"  pm.expect(responseJson[\"#Contracts\"]).to.eql(1043);\r",
							"  console.log(\"#Contracts Value is matching. Expected: 1043, Current: \", responseJson[\"#Contracts\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL\", () => {\r",
							"  const expectedContractLoss_EL = 768337722404.9413;\r",
							"  const actualContractLoss_EL = responseJson[\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL\", () => {\r",
							"  pm.expect(responseJson[\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL is matching. Expected: 0, Current: \", responseJson[\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed Limit\", () => {\r",
							"  pm.expect(responseJson[\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Value is matching. Expected: 0, Current: \", responseJson[\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss\r",
							"pm.test(\"Validating Fac Loss\", () => {\r",
							"  pm.expect(responseJson[\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Value is matching. Expected: 0, Current: \", responseJson[\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Gross Exposed Limit\r",
							"pm.test(\"Validating Gross Exposed Limit\", () => {\r",
							"  const expectedGrossExposedLimit = 768337722404.9413;\r",
							"  const actualGrossExposedLimit = responseJson[\"Gross Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedGrossExposedLimit - actualGrossExposedLimit);\r",
							"  console.log(\"Expected Gross Exposed Limit: \", expectedGrossExposedLimit);\r",
							"  console.log(\"Actual Gross Exposed Limit: \", actualGrossExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Gross Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Gross Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Gross Loss\r",
							"pm.test(\"Validating Gross Loss\", () => {\r",
							"  pm.expect(responseJson[\"Gross Loss\"]).to.eql(0);\r",
							"  console.log(\"Gross Loss Value is matching. Expected: 0, Current: \", responseJson[\"Gross Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLoss\", () => {\r",
							"  pm.expect(responseJson[\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Value is matching. Expected: 0, Current: \", responseJson[\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 768337722404.9413;\r",
							"  const actualNetPreCatExposedLimit = responseJson[\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss\r",
							"pm.test(\"Validating Net Pre Cat Loss\", () => {\r",
							"  pm.expect(responseJson[\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Value is matching. Expected: 0, Current: \", responseJson[\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed Limit\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 768337722404.9413;\r",
							"  const actualNetOfFacExposedLimit = responseJson[\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss\r",
							"pm.test(\"Validating Net of Fac Loss\", () => {\r",
							"  pm.expect(responseJson[\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Value is matching. Expected: 0, Current: \", responseJson[\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Retained Limit\r",
							"pm.test(\"Validating Retained Limit\", () => {\r",
							"  const expectedRetainedLimit = 207427500224.4023;\r",
							"  const actualRetainedLimit = responseJson[\"Retained Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedRetainedLimit - actualRetainedLimit);\r",
							"  console.log(\"Expected Retained Limit: \", expectedRetainedLimit);\r",
							"  console.log(\"Actual Retained Limit: \", actualRetainedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Retained Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Retained Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Retained Loss\r",
							"pm.test(\"Validating Retained Loss\", () => {\r",
							"  pm.expect(responseJson[\"Retained Loss\"]).to.eql(0);\r",
							"  console.log(\"Retained Loss Value is matching. Expected: 0, Current: \", responseJson[\"Retained Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV (Total Insured Value)\r",
							"pm.test(\"Validating TIV\", () => {\r",
							"  const expectedTIV = 975765222629.3365;\r",
							"  const actualTIV = responseJson[\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit\r",
							"pm.test(\"Validating Treaty Exposed Limit\", () => {\r",
							"  pm.expect(responseJson[\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Value is matching. Expected: 0, Current: \", responseJson[\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss\r",
							"pm.test(\"Validating Treaty Loss\", () => {\r",
							"  pm.expect(responseJson[\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Value is matching. Expected: 0, Current: \", responseJson[\"Treaty Loss\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"measures\": [\r\n        \"Asset Count\",\r\n        \"#Contracts\",\r\n        \"TIV\",\r\n        \"Gross Exposed Limit\",\r\n        \"GroundUpLoss\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/summary",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"summary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Top 20 Assets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log(\"-------- TOP N First Row Value --------\")\r",
							"\r",
							"// Validating Asset Name Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating Asset Name Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Name\"]).to.eql(\"MGM Resorts International-Luxor\");\r",
							"  console.log(\"Asset Name Miss Matching In First Row Expected: MGM Resorts International-Luxor Current:\", responseJson.Value.Analysis0[0][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating Asset Number Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Number\"]).to.eql(78688);\r",
							"  console.log(\"Asset Number Miss Matching In First Row Expected: 78688 Current:\", responseJson.Value.Analysis0[0][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating Contract Number Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Contract Number\"]).to.eql(\"2018-9000742-06- 672\");\r",
							"  console.log(\"Contract Number Miss Matching In First Row Expected: 2018-9000742-06- 672 Current:\", responseJson.Value.Analysis0[0][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  const expectedContractLoss_EL = 2850948928.9333906;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In First Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating Fac Exposed Limit Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In First Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating Fac Loss Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In First Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating GroundUpLoss Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In First Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 2850948928.9333906;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[0][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating Net Pre Cat Loss Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In First Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 2850948928.9333906;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[0][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating Net of Fac Loss Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In First Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating TIV Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  const expectedTIV = 2917922923;\r",
							"  const actualTIV = responseJson.Value.Analysis0[0][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating Treaty Exposed Limit Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In First Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of First Row, MGM Resorts International-Luxor\r",
							"pm.test(\"Validating Treaty Loss Of First Row, MGM Resorts International-Luxor\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In First Row Expected: 0 Current:\", responseJson.Value.Analysis0[0][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating Asset Name Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Asset Name\"]).to.eql(\"Silverstein Properties Inc-4 World Trade Center\");\r",
							"  console.log(\"Asset Name Miss Matching In Fourth Row Expected: Silverstein Properties Inc-4 World Trade Center Current:\", responseJson.Value.Analysis0[3][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating Asset Number Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Asset Number\"]).to.eql(28078);\r",
							"  console.log(\"Asset Number Miss Matching In Fourth Row Expected: 28078 Current:\", responseJson.Value.Analysis0[3][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating Contract Number Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Contract Number\"]).to.eql(\"2018-9001171-05- 268\");\r",
							"  console.log(\"Contract Number Miss Matching In Fourth Row Expected: 2018-9001171-05- 268 Current:\", responseJson.Value.Analysis0[3][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  const expectedContractLoss_EL = 1902702981.9746203;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[3][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Fourth Row Expected: 0 Current:\", responseJson.Value.Analysis0[3][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating Fac Exposed Limit Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Fourth Row Expected: 0 Current:\", responseJson.Value.Analysis0[3][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating Fac Loss Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Fourth Row Expected: 0 Current:\", responseJson.Value.Analysis0[3][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating GroundUpLoss Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Fourth Row Expected: 0 Current:\", responseJson.Value.Analysis0[3][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 1902702981.9746203;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[3][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Fourth Row Expected: 0 Current:\", responseJson.Value.Analysis0[3][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 1902702981.9746203;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[3][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating Net of Fac Loss Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Fourth Row Expected: 0 Current:\", responseJson.Value.Analysis0[3][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating TIV Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  const expectedTIV = 1902733369;\r",
							"  const actualTIV = responseJson.Value.Analysis0[3][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Fourth Row Expected: 0 Current:\", responseJson.Value.Analysis0[3][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\r",
							"pm.test(\"Validating Treaty Loss Of Fourth Row, Silverstein Properties Inc-4 World Trade Center\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Fourth Row Expected: 0 Current:\", responseJson.Value.Analysis0[3][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating Asset Name Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Asset Name\"]).to.eql(\"MGM Resorts International-Park MGM and NoMad Las Vegas\");\r",
							"  console.log(\"Asset Name Miss Matching In Seventh Row Expected: MGM Resorts International-Park MGM and NoMad Las Vegas Current:\", responseJson.Value.Analysis0[6][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating Asset Number Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Asset Number\"]).to.eql(78698);\r",
							"  console.log(\"Asset Number Miss Matching In Seventh Row Expected: 78698 Current:\", responseJson.Value.Analysis0[6][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating Contract Number Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Contract Number\"]).to.eql(\"2018-9000742-06- 672\");\r",
							"  console.log(\"Contract Number Miss Matching In Seventh Row Expected: 2018-9000742-06- 672 Current:\", responseJson.Value.Analysis0[6][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  const expectedContractLoss_EL = 1775924812.6250927;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[6][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Seventh Row Expected: 0 Current:\", responseJson.Value.Analysis0[6][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating Fac Exposed Limit Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Seventh Row Expected: 0 Current:\", responseJson.Value.Analysis0[6][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating Fac Loss Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Seventh Row Expected: 0 Current:\", responseJson.Value.Analysis0[6][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating GroundUpLoss Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Seventh Row Expected: 0 Current:\", responseJson.Value.Analysis0[6][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 1775924812.6250927;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[6][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Seventh Row Expected: 0 Current:\", responseJson.Value.Analysis0[6][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 1775924812.6250927;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[6][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating Net of Fac Loss Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Seventh Row Expected: 0 Current:\", responseJson.Value.Analysis0[6][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating TIV Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  const expectedTIV = 1817644528;\r",
							"  const actualTIV = responseJson.Value.Analysis0[6][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Seventh Row Expected: 0 Current:\", responseJson.Value.Analysis0[6][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\r",
							"pm.test(\"Validating Treaty Loss Of Seventh Row, MGM Resorts International-Park MGM and NoMad Las Vegas\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Seventh Row Expected: 0 Current:\", responseJson.Value.Analysis0[6][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating Asset Name Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Asset Name\"]).to.eql(\"MGM Resorts International-Excalibur\");\r",
							"  console.log(\"Asset Name Miss Matching In Tenth Row Expected: MGM Resorts International-Excalibur Current:\", responseJson.Value.Analysis0[9][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating Asset Number Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Asset Number\"]).to.eql(78686);\r",
							"  console.log(\"Asset Number Miss Matching In Tenth Row Expected: 78686 Current:\", responseJson.Value.Analysis0[9][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating Contract Number Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Contract Number\"]).to.eql(\"2018-9000742-06- 672\");\r",
							"  console.log(\"Contract Number Miss Matching In Tenth Row Expected: 2018-9000742-06- 672 Current:\", responseJson.Value.Analysis0[9][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  const expectedContractLoss_EL = 1672100434.7675567;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[9][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Tenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating Fac Exposed Limit Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Tenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating Fac Loss Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Tenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating GroundUpLoss Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Tenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 1672100434.7675567;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[9][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Tenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 1672100434.7675567;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[9][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating Net of Fac Loss Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Tenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating TIV Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  const expectedTIV = 1711381126;\r",
							"  const actualTIV = responseJson.Value.Analysis0[9][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Tenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Tenth Row, MGM Resorts International-Excalibur\r",
							"pm.test(\"Validating Treaty Loss Of Tenth Row, MGM Resorts International-Excalibur\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Tenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[9][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating Asset Name Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Asset Name\"]).to.eql(\"Boardwalk 1000 LLC-Hard Rock Hotel and Casino\");\r",
							"  console.log(\"Asset Name Miss Matching In Fourteenth Row Expected: Boardwalk 1000 LLC-Hard Rock Hotel and Casino Current:\", responseJson.Value.Analysis0[13][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating Asset Number Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Asset Number\"]).to.eql(97116);\r",
							"  console.log(\"Asset Number Miss Matching In Fourteenth Row Expected: 97116 Current:\", responseJson.Value.Analysis0[13][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating Contract Number Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Contract Number\"]).to.eql(\"2023-9004949-01- 735\");\r",
							"  console.log(\"Contract Number Miss Matching In Fourteenth Row Expected: 2023-9004949-01- 735 Current:\", responseJson.Value.Analysis0[13][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  const expectedContractLoss_EL = 1151230089.5543253;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[13][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Fourteenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[13][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating Fac Exposed Limit Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Fourteenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[13][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating Fac Loss Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Fourteenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[13][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating GroundUpLoss Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Fourteenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[13][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 1151230089.5543253;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[13][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Fourteenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[13][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 1151230089.5543253;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[13][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating Net of Fac Loss Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Fourteenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[13][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating TIV Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  const expectedTIV = 1151425492.1;\r",
							"  const actualTIV = responseJson.Value.Analysis0[13][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Fourteenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[13][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\r",
							"pm.test(\"Validating Treaty Loss Of Fourteenth Row, Boardwalk 1000 LLC-Hard Rock Hotel and Casino\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Fourteenth Row Expected: 0 Current:\", responseJson.Value.Analysis0[13][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating Asset Name Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Asset Name\"]).to.eql(\"MGM Resorts International-MGM Springfield\");\r",
							"  console.log(\"Asset Name Miss Matching Expected: MGM Resorts International-MGM Springfield Current:\", responseJson.Value.Analysis0[16][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating Asset Number Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Asset Number\"]).to.eql(78693);\r",
							"  console.log(\"Asset Number Miss Matching Expected: 78693 Current:\", responseJson.Value.Analysis0[16][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating Contract Number Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Contract Number\"]).to.eql(\"2018-9000742-06- 672\");\r",
							"  console.log(\"Contract Number Miss Matching Expected: 2018-9000742-06- 672 Current:\", responseJson.Value.Analysis0[16][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  const expectedContractLoss_EL = 861070568.2885606;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[16][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[16][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating Fac Exposed Limit Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[16][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating Fac Loss Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[16][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating GroundUpLoss Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[16][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 861070568.2885606;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[16][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[16][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 861070568.2885606;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[16][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating Net of Fac Loss Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[16][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating TIV Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  const expectedTIV = 861296154;\r",
							"  const actualTIV = responseJson.Value.Analysis0[16][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[16][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Row, MGM Resorts International-MGM Springfield\r",
							"pm.test(\"Validating Treaty Loss Of Row, MGM Resorts International-MGM Springfield\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[16][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[16][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating Asset Name Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Name\"]).to.eql(\"Sunstone Hotel Investors, Inc.-Boston Park Plaza\");\r",
							"  console.log(\"Asset Name Miss Matching Expected: Sunstone Hotel Investors, Inc.-Boston Park Plaza Current:\", responseJson.Value.Analysis0[19][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating Asset Number Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Number\"]).to.eql(168896);\r",
							"  console.log(\"Asset Number Miss Matching Expected: 168896 Current:\", responseJson.Value.Analysis0[19][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating Contract Number Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Contract Number\"]).to.eql(\"2020-9002521-04- 1290\");\r",
							"  console.log(\"Contract Number Miss Matching Expected: 2020-9002521-04- 1290 Current:\", responseJson.Value.Analysis0[19][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  const expectedContractLoss_EL = 749152999.9999999;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating Fac Exposed Limit Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating Fac Loss Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating GroundUpLoss Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 749152999.9999999;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[19][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating Net Pre Cat Loss Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 749152999.9999999;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[19][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating Net of Fac Loss Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating TIV Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  const expectedTIV = 749153000;\r",
							"  const actualTIV = responseJson.Value.Analysis0[19][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating Treaty Exposed Limit Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\r",
							"pm.test(\"Validating Treaty Loss Of 20th Row, Sunstone Hotel Investors, Inc.-Boston Park Plaza\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching Expected: 0 Current:\", responseJson.Value.Analysis0[19][\"Treaty Loss\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"AdditionalSortMeasure\": \"TIV\",\r\n    \"AttributeList\": [\r\n        \"#\",\r\n        \"Asset Number\",\r\n        \"Asset Name\",\r\n        \"Contract Number\",\r\n        \"ContractLoss_Value All Types_EL\",\r\n        \"TIV\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Intensity\",\r\n        \"GroundUpLoss\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ],\r\n    \"SortDirection\": -1,\r\n    \"Count\": 20,\r\n    \"TopNBy\": \"ContractLoss_Value All Types_EL\",\r\n    \"ContractMode\": false,\r\n    \"PercentageAttributes\": false,\r\n    \"TopNAssetsBy\": \"ContractLoss_Value All Types_EL\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/topn",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"topn"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tiv/TIV Range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json().Value.Analysis0;\r",
							"//const data1 = JSON(responseJson);\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === <1M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === <1M\", () => {\r",
							"    const TIVRange1M = responseJson.find(item => item[\"TIV Range\"] === \"<1M\");\r",
							"    pm.expect(TIVRange1M[\"TIV\"].toFixed(0)).to.eql(38049245126.66701.toFixed(0));  // Validating TIV\r",
							"    pm.expect(TIVRange1M[\"TIV Range\"]).to.eql(\"<1M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1M[\"Percentage\"].toFixed(0)).to.eql(3.899426.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 1M - 5M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 1M - 5M\", () => {\r",
							"    const TIVRange1M_5M = responseJson.find(item => item[\"TIV Range\"] === \"1M -5M\");\r",
							"    pm.expect(TIVRange1M_5M[\"TIV\"].toFixed(0)).to.eql(84646222817.33197.toFixed(0));  // Validating TIV\r",
							"    pm.expect(TIVRange1M_5M[\"TIV Range\"]).to.eql(\"1M -5M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1M_5M[\"Percentage\"].toFixed(0)).to.eql(8.674855.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\", () => {\r",
							"    const TIVRange5M_10M = responseJson.find(item => item[\"TIV Range\"] === \"5M – 10M\");\r",
							"    pm.expect(TIVRange5M_10M[\"TIV\"].toFixed(0)).to.eql(82465083393.96696.toFixed(0));  // Validating TIV\r",
							"    pm.expect(TIVRange5M_10M[\"TIV Range\"]).to.eql(\"5M – 10M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange5M_10M[\"Percentage\"].toFixed(0)).to.eql(8.451324.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 10M - 50M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 10M -50M\", () => {\r",
							"    const TIVRange10M_50M = responseJson.find(item => item[\"TIV Range\"] === \"10M -50M\");\r",
							"    pm.expect(TIVRange10M_50M[\"TIV\"].toFixed(0)).to.eql(371156542852.3756.toFixed(0));  // Validating TIV\r",
							"    pm.expect(TIVRange10M_50M[\"TIV Range\"]).to.eql(\"10M -50M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange10M_50M[\"Percentage\"].toFixed(0)).to.eql(38.037484.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 50M-100M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 50M-100M\", () => {\r",
							"    const TIVRange50M_100M = responseJson.find(item => item[\"TIV Range\"] === \"50M-100M\");\r",
							"    pm.expect(TIVRange50M_100M[\"TIV\"].toFixed(0)).to.eql(148642025716.99344.toFixed(0));  // Validating TIV\r",
							"    pm.expect(TIVRange50M_100M[\"TIV Range\"]).to.eql(\"50M-100M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange50M_100M[\"Percentage\"].toFixed(0)).to.eql(15.233380.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 100M-500M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 100M-500M\", () => {\r",
							"    const TIVRange100M_500M = responseJson.find(item => item[\"TIV Range\"] === \"100M-500M\");\r",
							"    pm.expect(TIVRange100M_500M[\"TIV\"].toFixed(0)).to.eql(183360458771.03967.toFixed(0));  // Validating TIV\r",
							"    pm.expect(TIVRange100M_500M[\"TIV Range\"]).to.eql(\"100M-500M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange100M_500M[\"Percentage\"].toFixed(0)).to.eql(18.791452.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 500M-1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 500M-1B\", () => {\r",
							"    const TIVRange500M_1B = responseJson.find(item => item[\"TIV Range\"] === \"500M-1B\");\r",
							"    pm.expect(TIVRange500M_1B[\"TIV\"].toFixed(0)).to.eql(36419489964.5838.toFixed(0));  // Validating TIV\r",
							"    pm.expect(TIVRange500M_1B[\"TIV Range\"]).to.eql(\"500M-1B\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange500M_1B[\"Percentage\"].toFixed(0)).to.eql(3.732402.toFixed(0));  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === >1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === >1B\", () => {\r",
							"    const TIVRange1B = responseJson.find(item => item[\"TIV Range\"] === \">1B\");\r",
							"    pm.expect(TIVRange1B[\"TIV\"].toFixed(0)).to.eql(31026153986.399998.toFixed(0));  // Validating TIV\r",
							"    pm.expect(TIVRange1B[\"TIV Range\"]).to.eql(\">1B\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1B[\"Percentage\"].toFixed(0)).to.eql(3.179674.toFixed(0));  // Validating Percentage\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"TIV\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"TIV\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}