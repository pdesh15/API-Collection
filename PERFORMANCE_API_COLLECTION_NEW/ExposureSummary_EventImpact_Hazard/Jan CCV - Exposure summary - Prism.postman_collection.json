{
	"info": {
		"_postman_id": "264afbeb-7deb-4646-9761-1e861accfc9e",
		"name": "Jan CCV - Exposure summary : Prism",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14426843"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set analysis - Event Impact Analysis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"setTimeout(function() {\r",
							"    console.log(\"Next API Call After 3 Minutes \")\r",
							"}, 180000);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 32499,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"analysisObject\": [\r\n        {\r\n            \"CurrencyCode\": \"USD\",\r\n            \"IncludeAllContracts\": true,\r\n            \"big_tiff_flag\": true,\r\n            \"damageAdjustment\": 1,\r\n            \"ValuationTypeCode\": 1,\r\n            \"ExposureFilterSets\": {\r\n                \"AssetModel\": \"ERBASICS\",\r\n                \"FilterList\": [\r\n                    {\r\n                        \"AndOr\": \"AND\",\r\n                        \"FilterList\": [\r\n                            {\r\n                                \"AssetType\": \"Site\",\r\n                                \"Attribute\": \"Cause Of Loss\",\r\n                                \"Operator\": \"EQ\",\r\n                                \"Value\": \"EQXX\",\r\n                                \"AndOr\": \"AND\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"quantile\": 50\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/analysis/load-exposure",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"load-exposure"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposure Summary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"const responseJson = pm.response.json().Value.Analysis0;\r",
							"\r",
							"// Validating Asset Count\r",
							"pm.test(\"Validating Asset Count\", () => {\r",
							"  pm.expect(responseJson[\"Asset Count\"]).to.eql(166412);\r",
							"  console.log(\"Asset Count Value is matching. Expected: 166412, Current: \", responseJson[\"Asset Count\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Count\r",
							"pm.test(\"Validating Contract Count\", () => {\r",
							"  pm.expect(responseJson[\"#Contracts\"]).to.eql(832);\r",
							"  console.log(\"Contract Count Value is matching. Expected: 832, Current: \", responseJson[\"#Contracts\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL\", () => {\r",
							"  const expectedContractLoss_EL = 16478002600.030954;\r",
							"  const actualContractLoss_EL = responseJson[\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL\", () => {\r",
							"  pm.expect(responseJson[\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL is matching. Expected: 0, Current: \", responseJson[\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed Limit\", () => {\r",
							"  pm.expect(responseJson[\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Value is matching. Expected: 0, Current: \", responseJson[\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss\r",
							"pm.test(\"Validating Fac Loss\", () => {\r",
							"  pm.expect(responseJson[\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Value is matching. Expected: 0, Current: \", responseJson[\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Gross Exposed Limit\r",
							"pm.test(\"Validating Gross Exposed Limit\", () => {\r",
							"  const expectedGrossExposedLimit = 16478002600.030954;\r",
							"  const actualGrossExposedLimit = responseJson[\"Gross Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedGrossExposedLimit - actualGrossExposedLimit);\r",
							"  console.log(\"Expected Gross Exposed Limit: \", expectedGrossExposedLimit);\r",
							"  console.log(\"Actual Gross Exposed Limit: \", actualGrossExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Gross Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Gross Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Gross Loss\r",
							"pm.test(\"Validating Gross Loss\", () => {\r",
							"  pm.expect(responseJson[\"Gross Loss\"]).to.eql(0);\r",
							"  console.log(\"Gross Loss Value is matching. Expected: 0, Current: \", responseJson[\"Gross Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLoss\", () => {\r",
							"  pm.expect(responseJson[\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Value is matching. Expected: 0, Current: \", responseJson[\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 16478002600.030954;\r",
							"  const actualNetPreCatExposedLimit = responseJson[\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss\r",
							"pm.test(\"Validating Net Pre Cat Loss\", () => {\r",
							"  pm.expect(responseJson[\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Value is matching. Expected: 0, Current: \", responseJson[\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed Limit\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 16478002600.030954;\r",
							"  const actualNetOfFacExposedLimit = responseJson[\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss\r",
							"pm.test(\"Validating Net of Fac Loss\", () => {\r",
							"  pm.expect(responseJson[\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Value is matching. Expected: 0, Current: \", responseJson[\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Retained Limit\r",
							"pm.test(\"Validating Retained Limit\", () => {\r",
							"  pm.expect(responseJson[\"Retained Limit\"]).to.eql(733844612677.6868);\r",
							"  console.log(\"Retained Limit Value is matching. Expected: 733844612677.6868, Current: \", responseJson[\"Retained Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Retained Loss\r",
							"pm.test(\"Validating Retained Loss\", () => {\r",
							"  pm.expect(responseJson[\"Retained Loss\"]).to.eql(0);\r",
							"  console.log(\"Retained Loss Value is matching. Expected: 0, Current: \", responseJson[\"Retained Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV (Total Insured Value)\r",
							"pm.test(\"Validating TIV\", () => {\r",
							"  pm.expect(responseJson[\"TIV\"]).to.eql(750322615277.7198);\r",
							"  console.log(\"TIV Value is matching. Expected: 750322615277.7198, Current: \", responseJson[\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit\r",
							"pm.test(\"Validating Treaty Exposed Limit\", () => {\r",
							"  pm.expect(responseJson[\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Value is matching. Expected: 0, Current: \", responseJson[\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss\r",
							"pm.test(\"Validating Treaty Loss\", () => {\r",
							"  pm.expect(responseJson[\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Value is matching. Expected: 0, Current: \", responseJson[\"Treaty Loss\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"measures\": [\r\n        \"Asset Count\",\r\n        \"#Contracts\",\r\n        \"TIV\",\r\n        \"Gross Exposed Limit\",\r\n        \"GroundUpLoss\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/analysis/summary",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"summary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Top 20 Assets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"\r",
							"\r",
							"// Assertion and comment for the Second row\r",
							"\r",
							"// Validating Asset Name Of Second Row\r",
							"pm.test(\"Validating Asset Name Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Name\"]).to.eql(\"1010 Common LLC-210 Baronne LLC\");\r",
							"  console.log(\"Asset Name Miss Matching In Second Row Expected: 1010 Common LLC-210 Baronne LLC, Current:\", responseJson.Value.Analysis0[1][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Second Row\r",
							"pm.test(\"Validating Asset Number Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Number\"]).to.eql(4);\r",
							"  console.log(\"Asset Number Miss Matching In Second Row Expected: 4, Current:\", responseJson.Value.Analysis0[1][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Second Row\r",
							"pm.test(\"Validating Contract Number Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Contract Number\"]).to.eql(\"2018-9000797-01- 181\");\r",
							"  console.log(\"Contract Number Miss Matching In Second Row Expected: 2018-9000797-01- 181, Current:\", responseJson.Value.Analysis0[1][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Second Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Second Row\", () => {\r",
							"  const expectedContractLoss_EL = 70982936.79403989;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Second Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Second Row Expected: 0, Current:\", responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Second Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Second Row Expected: 0, Current:\", responseJson.Value.Analysis0[1][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Second Row\r",
							"pm.test(\"Validating Fac Loss Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Second Row Expected: 0, Current:\", responseJson.Value.Analysis0[1][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Second Row\r",
							"pm.test(\"Validating GroundUpLoss Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Second Row Expected: 0, Current:\", responseJson.Value.Analysis0[1][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Second Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Second Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 70982936.79403989;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[1][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Second Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Second Row Expected: 0, Current:\", responseJson.Value.Analysis0[1][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Second Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Second Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 70982936.79403989;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[1][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Second Row\r",
							"pm.test(\"Validating Net of Fac Loss Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Second Row Expected: 0, Current:\", responseJson.Value.Analysis0[1][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Second Row\r",
							"pm.test(\"Validating TIV Of Second Row\", () => {\r",
							"  const expectedTIV = 71000000;\r",
							"  const actualTIV = responseJson.Value.Analysis0[1][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Second Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Second Row Expected: 0, Current:\", responseJson.Value.Analysis0[1][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Second Row\r",
							"pm.test(\"Validating Treaty Loss Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Second Row Expected: 0, Current:\", responseJson.Value.Analysis0[1][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of Fourth Row\r",
							"pm.test(\"Validating Asset Name Of Fourth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Asset Name\"]).to.eql(\"Beach Club Suites Condo Assoc-Main Building\");\r",
							"  console.log(\"Asset Name Miss Matching In Fourth Row Expected: Beach Club Suites Condo Assoc-Main Building, Current:\", responseJson.Value.Analysis0[3][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Fourth Row\r",
							"pm.test(\"Validating Asset Number Of Fourth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Asset Number\"]).to.eql(1);\r",
							"  console.log(\"Asset Number Miss Matching In Fourth Row Expected: 1, Current:\", responseJson.Value.Analysis0[3][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Fourth Row\r",
							"pm.test(\"Validating Contract Number Of Fourth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Contract Number\"]).to.eql(\"2018-9000778-01- 162\");\r",
							"  console.log(\"Contract Number Miss Matching In Fourth Row Expected: 2018-9000778-01- 162, Current:\", responseJson.Value.Analysis0[3][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Fourth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Fourth Row\", () => {\r",
							"  const expectedContractLoss_EL = 63365101.63062443;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[3][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Fourth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Fourth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Fourth Row Expected: 0, Current:\", responseJson.Value.Analysis0[3][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Fourth Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of Fourth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Fourth Row Expected: 0, Current:\", responseJson.Value.Analysis0[3][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Fourth Row\r",
							"pm.test(\"Validating Fac Loss Of Fourth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Fourth Row Expected: 0, Current:\", responseJson.Value.Analysis0[3][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Fourth Row\r",
							"pm.test(\"Validating GroundUpLoss Of Fourth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Fourth Row Expected: 0, Current:\", responseJson.Value.Analysis0[3][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Fourth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Fourth Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 63365101.63062443;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[3][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Fourth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Fourth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Fourth Row Expected: 0, Current:\", responseJson.Value.Analysis0[3][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Fourth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Fourth Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 63365101.63062443;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[3][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Fourth Row\r",
							"pm.test(\"Validating Net of Fac Loss Of Fourth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Fourth Row Expected: 0, Current:\", responseJson.Value.Analysis0[3][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Fourth Row\r",
							"pm.test(\"Validating TIV Of Fourth Row\", () => {\r",
							"  const expectedTIV = 63430546;\r",
							"  const actualTIV = responseJson.Value.Analysis0[3][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Fourth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Fourth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Fourth Row Expected: 0, Current:\", responseJson.Value.Analysis0[3][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Fourth Row\r",
							"pm.test(\"Validating Treaty Loss Of Fourth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Fourth Row Expected: 0, Current:\", responseJson.Value.Analysis0[3][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of Sixth Row\r",
							"pm.test(\"Validating Asset Name Of Sixth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Asset Name\"]).to.eql(\"Bixby Bridge Capital LLC-Renaissance Indian Wells Resort\");\r",
							"  console.log(\"Asset Name Miss Matching In Sixth Row Expected: Bixby Bridge Capital LLC-Renaissance Indian Wells Resort, Current:\", responseJson.Value.Analysis0[5][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Sixth Row\r",
							"pm.test(\"Validating Asset Number Of Sixth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Asset Number\"]).to.eql(1);\r",
							"  console.log(\"Asset Number Miss Matching In Sixth Row Expected: 1, Current:\", responseJson.Value.Analysis0[5][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Sixth Row\r",
							"pm.test(\"Validating Contract Number Of Sixth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Contract Number\"]).to.eql(\"2016-9000135-03- 96\");\r",
							"  console.log(\"Contract Number Miss Matching In Sixth Row Expected: 2016-9000135-03- 96, Current:\", responseJson.Value.Analysis0[5][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Sixth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Sixth Row\", () => {\r",
							"  const expectedContractLoss_EL = 56870481.28513738;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[5][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Sixth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Sixth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Sixth Row Expected: 0, Current:\", responseJson.Value.Analysis0[5][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Sixth Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of Sixth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Sixth Row Expected: 0, Current:\", responseJson.Value.Analysis0[5][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Sixth Row\r",
							"pm.test(\"Validating Fac Loss Of Sixth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Sixth Row Expected: 0, Current:\", responseJson.Value.Analysis0[5][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Sixth Row\r",
							"pm.test(\"Validating GroundUpLoss Of Sixth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Sixth Row Expected: 0, Current:\", responseJson.Value.Analysis0[5][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Sixth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Sixth Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 56870481.28513738;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[5][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Sixth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Sixth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Sixth Row Expected: 0, Current:\", responseJson.Value.Analysis0[5][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Sixth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Sixth Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 56870481.28513738;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[5][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Sixth Row\r",
							"pm.test(\"Validating Net of Fac Loss Of Sixth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Sixth Row Expected: 0, Current:\", responseJson.Value.Analysis0[5][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Sixth Row\r",
							"pm.test(\"Validating TIV Of Sixth Row\", () => {\r",
							"  const expectedTIV = 185850717;\r",
							"  const actualTIV = responseJson.Value.Analysis0[5][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Sixth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Sixth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Sixth Row Expected: 0, Current:\", responseJson.Value.Analysis0[5][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Sixth Row\r",
							"pm.test(\"Validating Treaty Loss Of Sixth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Sixth Row Expected: 0, Current:\", responseJson.Value.Analysis0[5][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of Eighth Row\r",
							"pm.test(\"Validating Asset Name Of Eighth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Asset Name\"]).to.eql(\"The Sobrato Organization-McAfee\");\r",
							"  console.log(\"Asset Name Miss Matching In Eighth Row Expected: The Sobrato Organization-McAfee, Current:\", responseJson.Value.Analysis0[7][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Eighth Row\r",
							"pm.test(\"Validating Asset Number Of Eighth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Asset Number\"]).to.eql(1);\r",
							"  console.log(\"Asset Number Miss Matching In Eighth Row Expected: 1, Current:\", responseJson.Value.Analysis0[7][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Eighth Row\r",
							"pm.test(\"Validating Contract Number Of Eighth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Contract Number\"]).to.eql(\"2017-9000574-01- 699\");\r",
							"  console.log(\"Contract Number Miss Matching In Eighth Row Expected: 2017-9000574-01- 699, Current:\", responseJson.Value.Analysis0[7][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Eighth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Eighth Row\", () => {\r",
							"  const expectedContractLoss_EL = 54158249.86371217;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[7][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Eighth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Eighth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Eighth Row Expected: 0, Current:\", responseJson.Value.Analysis0[7][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Eighth Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of Eighth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Eighth Row Expected: 0, Current:\", responseJson.Value.Analysis0[7][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Eighth Row\r",
							"pm.test(\"Validating Fac Loss Of Eighth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Eighth Row Expected: 0, Current:\", responseJson.Value.Analysis0[7][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Eighth Row\r",
							"pm.test(\"Validating GroundUpLoss Of Eighth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Eighth Row Expected: 0, Current:\", responseJson.Value.Analysis0[7][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Eighth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Eighth Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 54158249.86371217;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[7][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Eighth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Eighth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Eighth Row Expected: 0, Current:\", responseJson.Value.Analysis0[7][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Eighth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Eighth Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 54158249.86371217;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[7][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Eighth Row\r",
							"pm.test(\"Validating Net of Fac Loss Of Eighth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Eighth Row Expected: 0, Current:\", responseJson.Value.Analysis0[7][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Eighth Row\r",
							"pm.test(\"Validating TIV Of Eighth Row\", () => {\r",
							"  const expectedTIV = 57008684;\r",
							"  const actualTIV = responseJson.Value.Analysis0[7][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Eighth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Eighth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Eighth Row Expected: 0, Current:\", responseJson.Value.Analysis0[7][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Eighth Row\r",
							"pm.test(\"Validating Treaty Loss Of Eighth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[7][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Eighth Row Expected: 0, Current:\", responseJson.Value.Analysis0[7][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Asset Name Of Tenth Row\r",
							"pm.test(\"Validating Asset Name Of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Asset Name\"]).to.eql(\"Executive and Professional-One Bayfront Plaza\");\r",
							"  console.log(\"Asset Name Miss Matching In Tenth Row Expected: Executive and Professional-One Bayfront Plaza, Current:\", responseJson.Value.Analysis0[9][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Tenth Row\r",
							"pm.test(\"Validating Asset Number Of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Asset Number\"]).to.eql(1);\r",
							"  console.log(\"Asset Number Miss Matching In Tenth Row Expected: 1, Current:\", responseJson.Value.Analysis0[9][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Tenth Row\r",
							"pm.test(\"Validating Contract Number Of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Contract Number\"]).to.eql(\"2017-9000462-02- 504\");\r",
							"  console.log(\"Contract Number Miss Matching In Tenth Row Expected: 2017-9000462-02- 504, Current:\", responseJson.Value.Analysis0[9][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Tenth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Tenth Row\", () => {\r",
							"  const expectedContractLoss_EL = 51042758.86524824;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[9][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Tenth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Tenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[9][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Tenth Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Tenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[9][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Tenth Row\r",
							"pm.test(\"Validating Fac Loss Of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Tenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[9][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Tenth Row\r",
							"pm.test(\"Validating GroundUpLoss Of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Tenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[9][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Tenth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Tenth Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 51042758.86524824;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[9][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Tenth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Tenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[9][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Tenth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Tenth Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 51042758.86524824;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[9][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Tenth Row\r",
							"pm.test(\"Validating Net of Fac Loss Of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Tenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[9][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Tenth Row\r",
							"pm.test(\"Validating TIV Of Tenth Row\", () => {\r",
							"  const expectedTIV = 51050000;\r",
							"  const actualTIV = responseJson.Value.Analysis0[9][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Tenth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Tenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[9][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Tenth Row\r",
							"pm.test(\"Validating Treaty Loss Of Tenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[9][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Tenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[9][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of Twelfth Row\r",
							"pm.test(\"Validating Asset Name Of Twelfth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Asset Name\"]).to.eql(\"1750 Saint Charles Condo-1750 Saint Charles\");\r",
							"  console.log(\"Asset Name Miss Matching In Twelfth Row Expected: 1750 Saint Charles Condo-1750 Saint Charles, Current:\", responseJson.Value.Analysis0[11][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Twelfth Row\r",
							"pm.test(\"Validating Asset Number Of Twelfth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Asset Number\"]).to.eql(1);\r",
							"  console.log(\"Asset Number Miss Matching In Twelfth Row Expected: 1, Current:\", responseJson.Value.Analysis0[11][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Twelfth Row\r",
							"pm.test(\"Validating Contract Number Of Twelfth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Contract Number\"]).to.eql(\"2018-9000749-01- 985\");\r",
							"  console.log(\"Contract Number Miss Matching In Twelfth Row Expected: 2018-9000749-01- 985, Current:\", responseJson.Value.Analysis0[11][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Twelfth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Twelfth Row\", () => {\r",
							"  const expectedContractLoss_EL = 50490000;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[11][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Twelfth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Twelfth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Twelfth Row Expected: 0, Current:\", responseJson.Value.Analysis0[11][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Twelfth Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of Twelfth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Twelfth Row Expected: 0, Current:\", responseJson.Value.Analysis0[11][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Twelfth Row\r",
							"pm.test(\"Validating Fac Loss Of Twelfth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Twelfth Row Expected: 0, Current:\", responseJson.Value.Analysis0[11][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Twelfth Row\r",
							"pm.test(\"Validating GroundUpLoss Of Twelfth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Twelfth Row Expected: 0, Current:\", responseJson.Value.Analysis0[11][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Twelfth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Twelfth Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 50490000;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[11][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Twelfth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Twelfth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Twelfth Row Expected: 0, Current:\", responseJson.Value.Analysis0[11][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Twelfth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Twelfth Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 50490000;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[11][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Twelfth Row\r",
							"pm.test(\"Validating Net of Fac Loss Of Twelfth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Twelfth Row Expected: 0, Current:\", responseJson.Value.Analysis0[11][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Twelfth Row\r",
							"pm.test(\"Validating TIV Of Twelfth Row\", () => {\r",
							"  const expectedTIV = 50500000;\r",
							"  const actualTIV = responseJson.Value.Analysis0[11][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Twelfth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Twelfth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Twelfth Row Expected: 0, Current:\", responseJson.Value.Analysis0[11][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Twelfth Row\r",
							"pm.test(\"Validating Treaty Loss Of Twelfth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[11][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Twelfth Row Expected: 0, Current:\", responseJson.Value.Analysis0[11][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of Fourteenth Row\r",
							"pm.test(\"Validating Asset Name Of Fourteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Asset Name\"]).to.eql(\"Mann Enterprises Inc-345 California Center\");\r",
							"  console.log(\"Asset Name Miss Matching In Fourteenth Row Expected: Mann Enterprises Inc-345 California Center, Current:\", responseJson.Value.Analysis0[13][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Fourteenth Row\r",
							"pm.test(\"Validating Asset Number Of Fourteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Asset Number\"]).to.eql(1);\r",
							"  console.log(\"Asset Number Miss Matching In Fourteenth Row Expected: 1, Current:\", responseJson.Value.Analysis0[13][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Fourteenth Row\r",
							"pm.test(\"Validating Contract Number Of Fourteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Contract Number\"]).to.eql(\"2017-9000408-02- 438\");\r",
							"  console.log(\"Contract Number Miss Matching In Fourteenth Row Expected: 2017-9000408-02- 438, Current:\", responseJson.Value.Analysis0[13][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Fourteenth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Fourteenth Row\", () => {\r",
							"  const expectedContractLoss_EL = 50000000;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[13][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Fourteenth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Fourteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Fourteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[13][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Fourteenth Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of Fourteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Fourteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[13][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Fourteenth Row\r",
							"pm.test(\"Validating Fac Loss Of Fourteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Fourteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[13][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Fourteenth Row\r",
							"pm.test(\"Validating GroundUpLoss Of Fourteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Fourteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[13][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Fourteenth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Fourteenth Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 50000000;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[13][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Fourteenth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Fourteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Fourteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[13][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Fourteenth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Fourteenth Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 50000000;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[13][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Fourteenth Row\r",
							"pm.test(\"Validating Net of Fac Loss Of Fourteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Fourteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[13][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Fourteenth Row\r",
							"pm.test(\"Validating TIV Of Fourteenth Row\", () => {\r",
							"  const expectedTIV = 469985208;\r",
							"  const actualTIV = responseJson.Value.Analysis0[13][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Fourteenth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Fourteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Fourteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[13][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Fourteenth Row\r",
							"pm.test(\"Validating Treaty Loss Of Fourteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[13][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Fourteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[13][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of Sixteenth Row\r",
							"pm.test(\"Validating Asset Name Of Sixteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Asset Name\"]).to.eql(\"2500 Biscayne Property-2500 Biscayne Property LLC\");\r",
							"  console.log(\"Asset Name Miss Matching In Sixteenth Row Expected: 2500 Biscayne Property-2500 Biscayne Property LLC, Current:\", responseJson.Value.Analysis0[15][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Sixteenth Row\r",
							"pm.test(\"Validating Asset Number Of Sixteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Asset Number\"]).to.eql(1);\r",
							"  console.log(\"Asset Number Miss Matching In Sixteenth Row Expected: 1, Current:\", responseJson.Value.Analysis0[15][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Sixteenth Row\r",
							"pm.test(\"Validating Contract Number Of Sixteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Contract Number\"]).to.eql(\"2017-9000619-01- 739\");\r",
							"  console.log(\"Contract Number Miss Matching In Sixteenth Row Expected: 2017-9000619-01- 739, Current:\", responseJson.Value.Analysis0[15][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Sixteenth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Sixteenth Row\", () => {\r",
							"  const expectedContractLoss_EL = 45035407.18900961;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[15][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Sixteenth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Sixteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Sixteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[15][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Sixteenth Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of Sixteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Sixteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[15][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Sixteenth Row\r",
							"pm.test(\"Validating Fac Loss Of Sixteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Sixteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[15][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Sixteenth Row\r",
							"pm.test(\"Validating GroundUpLoss Of Sixteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Sixteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[15][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Sixteenth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Sixteenth Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 45035407.18900961;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[15][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Sixteenth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Sixteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Sixteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[15][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Sixteenth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Sixteenth Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 45035407.18900961;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[15][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Sixteenth Row\r",
							"pm.test(\"Validating Net of Fac Loss Of Sixteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Sixteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[15][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Sixteenth Row\r",
							"pm.test(\"Validating TIV Of Sixteenth Row\", () => {\r",
							"  const expectedTIV = 45039689;\r",
							"  const actualTIV = responseJson.Value.Analysis0[15][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Sixteenth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Sixteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Sixteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[15][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Sixteenth Row\r",
							"pm.test(\"Validating Treaty Loss Of Sixteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[15][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Sixteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[15][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of Eighteenth Row\r",
							"pm.test(\"Validating Asset Name Of Eighteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[17][\"Asset Name\"]).to.eql(\"Aspire Health Partners-1800 Mercy Dr\");\r",
							"  console.log(\"Asset Name Miss Matching In Eighteenth Row Expected: Aspire Health Partners-1800 Mercy Dr, Current:\", responseJson.Value.Analysis0[17][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Eighteenth Row\r",
							"pm.test(\"Validating Asset Number Of Eighteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[17][\"Asset Number\"]).to.eql(119);\r",
							"  console.log(\"Asset Number Miss Matching In Eighteenth Row Expected: 119, Current:\", responseJson.Value.Analysis0[17][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Eighteenth Row\r",
							"pm.test(\"Validating Contract Number Of Eighteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[17][\"Contract Number\"]).to.eql(\"2017-9000463-02- 505\");\r",
							"  console.log(\"Contract Number Miss Matching In Eighteenth Row Expected: 2017-9000463-02- 505, Current:\", responseJson.Value.Analysis0[17][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Eighteenth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Eighteenth Row\", () => {\r",
							"  const expectedContractLoss_EL = 43603272.919254206;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[17][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Eighteenth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Eighteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[17][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Eighteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[17][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Eighteenth Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of Eighteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[17][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Eighteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[17][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Eighteenth Row\r",
							"pm.test(\"Validating Fac Loss Of Eighteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[17][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Eighteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[17][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Eighteenth Row\r",
							"pm.test(\"Validating GroundUpLoss Of Eighteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[17][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Eighteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[17][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Eighteenth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Eighteenth Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 43603272.919254206;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[17][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Eighteenth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Eighteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[17][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Eighteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[17][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Eighteenth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Eighteenth Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 43603272.919254206;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[17][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Eighteenth Row\r",
							"pm.test(\"Validating Net of Fac Loss Of Eighteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[17][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Eighteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[17][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Eighteenth Row\r",
							"pm.test(\"Validating TIV Of Eighteenth Row\", () => {\r",
							"  const expectedTIV = 43604911.143999994;\r",
							"  const actualTIV = responseJson.Value.Analysis0[17][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Eighteenth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Eighteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[17][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Eighteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[17][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Eighteenth Row\r",
							"pm.test(\"Validating Treaty Loss Of Eighteenth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[17][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Eighteenth Row Expected: 0, Current:\", responseJson.Value.Analysis0[17][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Name Of Twentieth Row\r",
							"pm.test(\"Validating Asset Name Of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Name\"]).to.eql(\"RD MCN LLC-RD MCM\");\r",
							"  console.log(\"Asset Name Miss Matching In Twentieth Row Expected: RD MCN LLC-RD MCM, Current:\", responseJson.Value.Analysis0[19][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Validating Asset Number Of Twentieth Row\r",
							"pm.test(\"Validating Asset Number Of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Asset Number\"]).to.eql(1);\r",
							"  console.log(\"Asset Number Miss Matching In Twentieth Row Expected: 1, Current:\", responseJson.Value.Analysis0[19][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Validating Contract Number Of Twentieth Row\r",
							"pm.test(\"Validating Contract Number Of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Contract Number\"]).to.eql(\"2017-9000570-01- 695\");\r",
							"  console.log(\"Contract Number Miss Matching In Twentieth Row Expected: 2017-9000570-01- 695, Current:\", responseJson.Value.Analysis0[19][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL Of Twentieth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Twentieth Row\", () => {\r",
							"  const expectedContractLoss_EL = 41630056;\r",
							"  const actualContractLoss_EL = responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_EL\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedContractLoss_EL - actualContractLoss_EL);\r",
							"  console.log(\"Expected ContractLoss_Value All Types_EL: \", expectedContractLoss_EL);\r",
							"  console.log(\"Actual ContractLoss_Value All Types_EL: \", actualContractLoss_EL);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`ContractLoss_Value All Types_EL mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"ContractLoss_Value All Types_EL is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL Of Twentieth Row\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Twentieth Row Expected: 0, Current:\", responseJson.Value.Analysis0[19][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit Of Twentieth Row\r",
							"pm.test(\"Validating Fac Exposed Limit Of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching In Twentieth Row Expected: 0, Current:\", responseJson.Value.Analysis0[19][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Loss Of Twentieth Row\r",
							"pm.test(\"Validating Fac Loss Of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac Loss Miss Matching In Twentieth Row Expected: 0, Current:\", responseJson.Value.Analysis0[19][\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss Of Twentieth Row\r",
							"pm.test(\"Validating GroundUpLoss Of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching In Twentieth Row Expected: 0, Current:\", responseJson.Value.Analysis0[19][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit Of Twentieth Row\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit Of Twentieth Row\", () => {\r",
							"  const expectedNetPreCatExposedLimit = 41630056;\r",
							"  const actualNetPreCatExposedLimit = responseJson.Value.Analysis0[19][\"Net Pre Cat Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetPreCatExposedLimit - actualNetPreCatExposedLimit);\r",
							"  console.log(\"Expected Net Pre Cat Exposed Limit: \", expectedNetPreCatExposedLimit);\r",
							"  console.log(\"Actual Net Pre Cat Exposed Limit: \", actualNetPreCatExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net Pre Cat Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net Pre Cat Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss Of Twentieth Row\r",
							"pm.test(\"Validating Net Pre Cat Loss Of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Miss Matching In Twentieth Row Expected: 0, Current:\", responseJson.Value.Analysis0[19][\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit Of Twentieth Row\r",
							"pm.test(\"Validating Net of Fac Exposed Limit Of Twentieth Row\", () => {\r",
							"  const expectedNetOfFacExposedLimit = 41630056;\r",
							"  const actualNetOfFacExposedLimit = responseJson.Value.Analysis0[19][\"Net of Fac Exposed Limit\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedNetOfFacExposedLimit - actualNetOfFacExposedLimit);\r",
							"  console.log(\"Expected Net of Fac Exposed Limit: \", expectedNetOfFacExposedLimit);\r",
							"  console.log(\"Actual Net of Fac Exposed Limit: \", actualNetOfFacExposedLimit);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`Net of Fac Exposed Limit mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"Net of Fac Exposed Limit is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss Of Twentieth Row\r",
							"pm.test(\"Validating Net of Fac Loss Of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Miss Matching In Twentieth Row Expected: 0, Current:\", responseJson.Value.Analysis0[19][\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV Of Twentieth Row\r",
							"pm.test(\"Validating TIV Of Twentieth Row\", () => {\r",
							"  const expectedTIV = 41655056;\r",
							"  const actualTIV = responseJson.Value.Analysis0[19][\"TIV\"];\r",
							"  \r",
							"  const difference = Math.abs(expectedTIV - actualTIV);\r",
							"  console.log(\"Expected TIV: \", expectedTIV);\r",
							"  console.log(\"Actual TIV: \", actualTIV);\r",
							"  console.log(\"Difference: \", difference);\r",
							"\r",
							"  if (difference > 1) {\r",
							"    throw new Error(`TIV mismatch: Difference of ${difference} is greater than the allowed threshold of 1.`);\r",
							"  } else {\r",
							"    console.log(\"TIV is within the acceptable range. No errors.\");\r",
							"  }\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit Of Twentieth Row\r",
							"pm.test(\"Validating Treaty Exposed Limit Of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching In Twentieth Row Expected: 0, Current:\", responseJson.Value.Analysis0[19][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss Of Twentieth Row\r",
							"pm.test(\"Validating Treaty Loss Of Twentieth Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[19][\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Miss Matching In Twentieth Row Expected: 0, Current:\", responseJson.Value.Analysis0[19][\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"AdditionalSortMeasure\": \"TIV\",\r\n    \"AttributeList\": [\r\n        \"#\",\r\n        \"Asset Number\",\r\n        \"Asset Name\",\r\n        \"Contract Number\",\r\n        \"ContractLoss_Value All Types_EL\",\r\n        \"TIV\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Intensity\",\r\n        \"GroundUpLoss\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ],\r\n    \"SortDirection\": -1,\r\n    \"Count\": 20,\r\n    \"TopNBy\": \"ContractLoss_Value All Types_EL\",\r\n    \"ContractMode\": false,\r\n    \"PercentageAttributes\": false,\r\n    \"TopNAssetsBy\": \"ContractLoss_Value All Types_EL\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/analysis/topn",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"topn"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tiv/TIV Range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"//const data1 = JSON(responseJson);\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === <1M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === <1M\", () => {\r",
							"    const TIVRange1M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"<1M\");\r",
							"    pm.expect(TIVRange1M[\"TIV\"]).to.eql(25226478841.285316);  // Validating TIV\r",
							"    pm.expect(TIVRange1M[\"TIV Range\"]).to.eql(\"<1M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1M[\"Percentage\"]).to.eql(3.3620842991581483);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 1M - 5M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 1M - 5M\", () => {\r",
							"    const TIVRange1M_5M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"1M -5M\");\r",
							"    pm.expect(TIVRange1M_5M[\"TIV\"]).to.eql(90732422654.80403);  // Validating TIV\r",
							"    pm.expect(TIVRange1M_5M[\"TIV Range\"]).to.eql(\"1M -5M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1M_5M[\"Percentage\"]).to.eql(12.092454739781475);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 5M – 10M\", () => {\r",
							"    const TIVRange5M_10M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"5M – 10M\");\r",
							"    pm.expect(TIVRange5M_10M[\"TIV\"]).to.eql(65332337495.42733);  // Validating TIV\r",
							"    pm.expect(TIVRange5M_10M[\"TIV Range\"]).to.eql(\"5M – 10M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange5M_10M[\"Percentage\"]).to.eql(8.707232884250041);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 10M - 50M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 10M -50M\", () => {\r",
							"    const TIVRange10M_50M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"10M -50M\");\r",
							"    pm.expect(TIVRange10M_50M[\"TIV\"]).to.eql(239468794024.72424);  // Validating TIV\r",
							"    pm.expect(TIVRange10M_50M[\"TIV Range\"]).to.eql(\"10M -50M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange10M_50M[\"Percentage\"]).to.eql(31.91544399019425);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 50M - 100M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 50M -100M\", () => {\r",
							"    const TIVRange50M_100M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"50M-100M\");\r",
							"    pm.expect(TIVRange50M_100M[\"TIV\"]).to.eql(92317599887.03839);  // Validating TIV\r",
							"    pm.expect(TIVRange50M_100M[\"TIV Range\"]).to.eql(\"50M-100M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange50M_100M[\"Percentage\"]).to.eql(12.303720827189437);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 100M - 500M\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 100M - 500M\", () => {\r",
							"    const TIVRange100M_500M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"100M-500M\");\r",
							"    pm.expect(TIVRange100M_500M[\"TIV\"]).to.eql(160654133267.25943);  // Validating TIV\r",
							"    pm.expect(TIVRange100M_500M[\"TIV Range\"]).to.eql(\"100M-500M\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange100M_500M[\"Percentage\"]).to.eql(21.411340934698334);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === 500M - 1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === 500M -1B\", () => {\r",
							"    const TIVRange500M_1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"500M-1B\");\r",
							"    pm.expect(TIVRange500M_1B[\"TIV\"]).to.eql(34092647959.049995);  // Validating TIV\r",
							"    pm.expect(TIVRange500M_1B[\"TIV Range\"]).to.eql(\"500M-1B\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange500M_1B[\"Percentage\"]).to.eql(4.543731891438557);  // Validating Percentage\r",
							"});\r",
							"\r",
							"// Validating TIV, TIV Range, and Percentage for TIV Range === >1B\r",
							"pm.test(\"Validating TIV, TIV Range, and Percentage for TIV Range === >1B\", () => {\r",
							"    const TIVRange1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \">1B\");\r",
							"    pm.expect(TIVRange1B[\"TIV\"]).to.eql(42498201148.14);  // Validating TIV\r",
							"    pm.expect(TIVRange1B[\"TIV Range\"]).to.eql(\">1B\");  // Validating TIV Range\r",
							"    pm.expect(TIVRange1B[\"Percentage\"]).to.eql(5.663990433289748);  // Validating Percentage\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"TIV\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"TIV\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Prism-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"Prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}