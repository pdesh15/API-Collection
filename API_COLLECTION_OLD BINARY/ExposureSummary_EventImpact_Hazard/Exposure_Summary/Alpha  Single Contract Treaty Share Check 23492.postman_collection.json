{
	"info": {
		"_postman_id": "6a074e60-2238-4fec-99de-ba8efe822f56",
		"name": "Alpha Event Impact Single Contract Treaty Share Check 23492",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33412147"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set analysis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"setTimeout(function() {\r",
							"    console.log(\"Next API Call After 2 Minutes \")\r",
							"}, 120000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 23492,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"analysisObject\": [\r\n        {\r\n            \"CurrencyCode\": \"USD\",\r\n            \"IncludeAllContracts\": true,\r\n            \"damageAdjustment\": 1,\r\n            \"ValuationTypeCode\": 1,\r\n            \"ExposureFilterSets\": {\r\n                \"AssetModel\": \"ERBASICS\",\r\n                \"FilterList\": [\r\n                    {\r\n                        \"AndOr\": \"AND\",\r\n                        \"FilterList\": [\r\n                            {\r\n                                \"AssetType\": \"Site\",\r\n                                \"Attribute\": \"Cause Of Loss\",\r\n                                \"Operator\": \"EQ\",\r\n                                \"Value\": \"TCXX\",\r\n                                \"AndOr\": \"AND\"\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            },\r\n            \"quantile\": 50\r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/load-exposure",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"load-exposure"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposure Summary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"// Validating Asset Count\r",
							"pm.test(\"Validating Asset Count For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Asset Count\"]).to.eql(7);\r",
							"  console.log(\"Asset Count is matching Expected: 7, Current: \", responseJson.Value.Analysis0[\"Asset Count\"]);\r",
							"});\r",
							"\r",
							"// Validating #Contracts\r",
							"pm.test(\"Validating #Contracts For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"#Contracts\"]).to.eql(1);\r",
							"  console.log(\"#Contracts is matching Expected: 1, Current: \", responseJson.Value.Analysis0[\"#Contracts\"]);\r",
							"});\r",
							"\r",
							"// Validating TIV\r",
							"pm.test(\"Validating TIV For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"TIV\"]).to.eql(1228232969.25);\r",
							"  console.log(\"TIV is matching Expected: 1228232969.25, Current: \", responseJson.Value.Analysis0[\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Validating Gross Exposed Limit\r",
							"pm.test(\"Validating Gross Exposed Limit For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Gross Exposed Limit\"]).to.eql(200000000);\r",
							"  console.log(\"Gross Exposed Limit is matching Expected: 200000000, Current: \", responseJson.Value.Analysis0[\"Gross Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLoss For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_GL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net Pre Cat Exposed Limit\"]).to.eql(100000000);\r",
							"  console.log(\"Net Pre Cat Exposed Limit is matching Expected: 100000000, Current: \", responseJson.Value.Analysis0[\"Net Pre Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Net Pre Cat Loss\r",
							"pm.test(\"Validating Net Pre Cat Loss For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed Limit For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net of Fac Exposed Limit\"]).to.eql(200000000);\r",
							"  console.log(\"Net of Fac Exposed Limit is matching Expected: 200000000, Current: \", responseJson.Value.Analysis0[\"Net of Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Net of Fac Loss\r",
							"pm.test(\"Validating Net of Fac Loss For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed Limit For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Fac loss\r",
							"pm.test(\"Validating Fac loss For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac loss is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Exposed Limit\r",
							"pm.test(\"Validating Treaty Exposed Limit For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Treaty Exposed Limit\"]).to.eql(100000000.00000001);\r",
							"  console.log(\"Treaty Exposed Limit is matching Expected: 100000000, Current: \", responseJson.Value.Analysis0[\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Validating Treaty Loss\r",
							"pm.test(\"Validating Treaty Loss For Single Contract Treaty Share Check Without Events  \", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Treaty Loss\"]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"measures\": [\r\n        \"Asset Count\",\r\n        \"#Contracts\",\r\n        \"TIV\",\r\n        \"Gross Exposed Limit\",\r\n        \"GroundUpLoss\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/summary",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"summary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Top 20 Assets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log(\"-------- TOP N First Row Value --------\")\r",
							"\r",
							"// Assertion for First Row Asset Name\r",
							"pm.test(\"Validating Asset NameFor First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Name\"]).to.eql(\"464815 - T0B\");\r",
							"  console.log(\"Asset Name Miss Matching Expected: 464815 - T0B, Current:\", responseJson.Value.Analysis0[0][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Assertion for First Row Asset Number\r",
							"pm.test(\"Validating Asset NumberFor First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Number\"]).to.eql(7);\r",
							"  console.log(\"Asset Number Miss Matching Expected: 7, Current:\", responseJson.Value.Analysis0[0][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for First Row TIV\r",
							"pm.test(\"Validating TIVFor First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"TIV\"]).to.eql(199928734.25);\r",
							"  console.log(\"TIV Miss Matching Expected: 199928734.25, Current:\", responseJson.Value.Analysis0[0][\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion for First Row ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_ELFor First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_EL\"]).to.eql(32555506.85503633);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching Expected: 32555506.85503633, Current:\", responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_EL\"]);\r",
							"});\r",
							"\r",
							"// Assertion for First Row Net Post Cat Exposed Limit\r",
							"pm.test(\"Validating Net Post Cat Exposed LimitFor First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Net Post Cat Exposed Limit\"]).to.eql(16277753.427518163);\r",
							"  console.log(\"Net Post Cat Exposed Limit Miss Matching Expected: 16277753.427518163, Current:\", responseJson.Value.Analysis0[0][\"Net Post Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for First Row Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed LimitFor First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Net Pre Cat Exposed Limit\"]).to.eql(16277753.427518163);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Miss Matching Expected: 16277753.427518163, Current:\", responseJson.Value.Analysis0[0][\"Net Pre Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for First Row Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed LimitFor First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Net of Fac Exposed Limit\"]).to.eql(32555506.85503633);\r",
							"  console.log(\"Net of Fac Exposed Limit Miss Matching Expected: 32555506.85503633, Current:\", responseJson.Value.Analysis0[0][\"Net of Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for First Row Reinsurance Gross Exposed Limit\r",
							"pm.test(\"Validating Reinsurance Gross Exposed LimitFor First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Reinsurance Gross Exposed Limit\"]).to.eql(16277753.427518167);\r",
							"  console.log(\"Reinsurance Gross Exposed Limit Miss Matching Expected: 16277753.427518167, Current:\", responseJson.Value.Analysis0[0][\"Reinsurance Gross Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for First Row Treaty Exposed Limit\r",
							"pm.test(\"Validating Treaty Exposed LimitFor First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Treaty Exposed Limit\"]).to.eql(16277753.427518167);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching Expected: 16277753.427518167, Current:\", responseJson.Value.Analysis0[0][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for First Row Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed LimitFor First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[0][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for First Row Contract Number\r",
							"pm.test(\"Validating Contract NumberFor First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Contract Number\"]).to.eql(\"C1\");\r",
							"  console.log(\"Contract Number Miss Matching Expected: C1, Current:\", responseJson.Value.Analysis0[0][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for First Row GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLossFor First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[0][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for First Row TIV (again, as it's requested twice in the list)\r",
							"pm.test(\"Validating TIV (second time)For First Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"TIV\"]).to.eql(199928734.25);\r",
							"  console.log(\"TIV Miss Matching Expected: 199928734.25, Current:\", responseJson.Value.Analysis0[0][\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Second Row Asset Name\r",
							"pm.test(\"Validating Asset Name for Second Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Name\"]).to.eql(\"465286 - T0B\");\r",
							"  console.log(\"Asset Name Miss Matching Expected: 465286 - T0B, Current:\", responseJson.Value.Analysis0[1][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Second Row Asset Number\r",
							"pm.test(\"Validating Asset Number for Second Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Number\"]).to.eql(2);\r",
							"  console.log(\"Asset Number Miss Matching Expected: 2, Current:\", responseJson.Value.Analysis0[1][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Second Row TIV\r",
							"pm.test(\"Validating TIV for Second Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"TIV\"]).to.eql(197314587.75);\r",
							"  console.log(\"TIV Miss Matching Expected: 197314587.75, Current:\", responseJson.Value.Analysis0[1][\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Second Row ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL for Second Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_EL\"]).to.eql(32129830.852934502);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching Expected: 32129830.852934502, Current:\", responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_EL\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Second Row Net Post Cat Exposed Limit\r",
							"pm.test(\"Validating Net Post Cat Exposed Limit for Second Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Net Post Cat Exposed Limit\"]).to.eql(16064915.42646725);\r",
							"  console.log(\"Net Post Cat Exposed Limit Miss Matching Expected: 16064915.42646725, Current:\", responseJson.Value.Analysis0[1][\"Net Post Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Second Row Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit for Second Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Net Pre Cat Exposed Limit\"]).to.eql(16064915.42646725);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Miss Matching Expected: 16064915.42646725, Current:\", responseJson.Value.Analysis0[1][\"Net Pre Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Second Row Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed Limit for Second Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Net of Fac Exposed Limit\"]).to.eql(32129830.852934502);\r",
							"  console.log(\"Net of Fac Exposed Limit Miss Matching Expected: 32129830.852934502, Current:\", responseJson.Value.Analysis0[1][\"Net of Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Second Row Reinsurance Gross Exposed Limit\r",
							"pm.test(\"Validating Reinsurance Gross Exposed Limit for Second Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Reinsurance Gross Exposed Limit\"]).to.eql(16064915.426467253);\r",
							"  console.log(\"Reinsurance Gross Exposed Limit Miss Matching Expected: 16064915.426467253, Current:\", responseJson.Value.Analysis0[1][\"Reinsurance Gross Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Second Row Treaty Exposed Limit\r",
							"pm.test(\"Validating Treaty Exposed Limit for Second Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Treaty Exposed Limit\"]).to.eql(16064915.426467253);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching Expected: 16064915.426467253, Current:\", responseJson.Value.Analysis0[1][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Second Row Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed Limit for Second Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[1][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Second Row Contract Number\r",
							"pm.test(\"Validating Contract Number for Second Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Contract Number\"]).to.eql(\"C1\");\r",
							"  console.log(\"Contract Number Miss Matching Expected: C1, Current:\", responseJson.Value.Analysis0[1][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Second Row GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLoss for Second Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[1][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Third Row Asset Name\r",
							"pm.test(\"Validating Asset Name for Third Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Asset Name\"]).to.eql(\"464817 - T0B\");\r",
							"  console.log(\"Asset Name Miss Matching Expected: 464817 - T0B, Current:\", responseJson.Value.Analysis0[2][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Third Row Asset Number\r",
							"pm.test(\"Validating Asset Number for Third Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Asset Number\"]).to.eql(5);\r",
							"  console.log(\"Asset Number Miss Matching Expected: 5, Current:\", responseJson.Value.Analysis0[2][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Third Row TIV\r",
							"pm.test(\"Validating TIV for Third Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"TIV\"]).to.eql(194356484);\r",
							"  console.log(\"TIV Miss Matching Expected: 194356484, Current:\", responseJson.Value.Analysis0[2][\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Third Row ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL for Third Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"ContractLoss_Value All Types_EL\"]).to.eql(31648146.380353324);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching Expected: 31648146.380353324, Current:\", responseJson.Value.Analysis0[2][\"ContractLoss_Value All Types_EL\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Third Row Net Post Cat Exposed Limit\r",
							"pm.test(\"Validating Net Post Cat Exposed Limit for Third Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Net Post Cat Exposed Limit\"]).to.eql(15824073.190176662);\r",
							"  console.log(\"Net Post Cat Exposed Limit Miss Matching Expected: 15824073.190176662, Current:\", responseJson.Value.Analysis0[2][\"Net Post Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Third Row Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit for Third Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Net Pre Cat Exposed Limit\"]).to.eql(15824073.190176662);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Miss Matching Expected: 15824073.190176662, Current:\", responseJson.Value.Analysis0[2][\"Net Pre Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Third Row Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed Limit for Third Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Net of Fac Exposed Limit\"]).to.eql(31648146.380353324);\r",
							"  console.log(\"Net of Fac Exposed Limit Miss Matching Expected: 31648146.380353324, Current:\", responseJson.Value.Analysis0[2][\"Net of Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Third Row Reinsurance Gross Exposed Limit\r",
							"pm.test(\"Validating Reinsurance Gross Exposed Limit for Third Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Reinsurance Gross Exposed Limit\"]).to.eql(15824073.190176662);\r",
							"  console.log(\"Reinsurance Gross Exposed Limit Miss Matching Expected: 15824073.190176662, Current:\", responseJson.Value.Analysis0[2][\"Reinsurance Gross Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Third Row Treaty Exposed Limit\r",
							"pm.test(\"Validating Treaty Exposed Limit for Third Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Treaty Exposed Limit\"]).to.eql(15824073.190176662);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching Expected: 15824073.190176662, Current:\", responseJson.Value.Analysis0[2][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Third Row Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed Limit for Third Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[2][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Third Row Contract Number\r",
							"pm.test(\"Validating Contract Number for Third Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"Contract Number\"]).to.eql(\"C1\");\r",
							"  console.log(\"Contract Number Miss Matching Expected: C1, Current:\", responseJson.Value.Analysis0[2][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Third Row GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLoss for Third Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[2][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[2][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fourth Row Asset Name\r",
							"pm.test(\"Validating Asset Name for Fourth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Asset Name\"]).to.eql(\"465287 - T0B\");\r",
							"  console.log(\"Asset Name Miss Matching Expected: 465287 - T0B, Current:\", responseJson.Value.Analysis0[3][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fourth Row Asset Number\r",
							"pm.test(\"Validating Asset Number for Fourth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Asset Number\"]).to.eql(1);\r",
							"  console.log(\"Asset Number Miss Matching Expected: 1, Current:\", responseJson.Value.Analysis0[3][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fourth Row TIV\r",
							"pm.test(\"Validating TIV for Fourth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"TIV\"]).to.eql(187970237);\r",
							"  console.log(\"TIV Miss Matching Expected: 187970237, Current:\", responseJson.Value.Analysis0[3][\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fourth Row ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL for Fourth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"ContractLoss_Value All Types_EL\"]).to.eql(30608238.29127155);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching Expected: 30608238.29127155, Current:\", responseJson.Value.Analysis0[3][\"ContractLoss_Value All Types_EL\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fourth Row Net Post Cat Exposed Limit\r",
							"pm.test(\"Validating Net Post Cat Exposed Limit for Fourth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Net Post Cat Exposed Limit\"]).to.eql(15304119.145635774);\r",
							"  console.log(\"Net Post Cat Exposed Limit Miss Matching Expected: 15304119.145635774, Current:\", responseJson.Value.Analysis0[3][\"Net Post Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fourth Row Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit for Fourth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Net Pre Cat Exposed Limit\"]).to.eql(15304119.145635774);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Miss Matching Expected: 15304119.145635774, Current:\", responseJson.Value.Analysis0[3][\"Net Pre Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fourth Row Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed Limit for Fourth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Net of Fac Exposed Limit\"]).to.eql(30608238.29127155);\r",
							"  console.log(\"Net of Fac Exposed Limit Miss Matching Expected: 30608238.29127155, Current:\", responseJson.Value.Analysis0[3][\"Net of Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fourth Row Reinsurance Gross Exposed Limit\r",
							"pm.test(\"Validating Reinsurance Gross Exposed Limit for Fourth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Reinsurance Gross Exposed Limit\"]).to.eql(15304119.145635774);\r",
							"  console.log(\"Reinsurance Gross Exposed Limit Miss Matching Expected: 15304119.145635774, Current:\", responseJson.Value.Analysis0[3][\"Reinsurance Gross Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fourth Row Treaty Exposed Limit\r",
							"pm.test(\"Validating Treaty Exposed Limit for Fourth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Treaty Exposed Limit\"]).to.eql(15304119.145635774);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching Expected: 15304119.145635774, Current:\", responseJson.Value.Analysis0[3][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fourth Row Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed Limit for Fourth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[3][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fourth Row Contract Number\r",
							"pm.test(\"Validating Contract Number for Fourth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"Contract Number\"]).to.eql(\"C1\");\r",
							"  console.log(\"Contract Number Miss Matching Expected: C1, Current:\", responseJson.Value.Analysis0[3][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fourth Row GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLoss for Fourth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[3][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[3][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fifth Row Asset Name\r",
							"pm.test(\"Validating Asset Name for Fifth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Asset Name\"]).to.eql(\"465285 - T0B\");\r",
							"  console.log(\"Asset Name Miss Matching Expected: 465285 - T0B, Current:\", responseJson.Value.Analysis0[4][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fifth Row Asset Number\r",
							"pm.test(\"Validating Asset Number for Fifth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Asset Number\"]).to.eql(3);\r",
							"  console.log(\"Asset Number Miss Matching Expected: 3, Current:\", responseJson.Value.Analysis0[4][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fifth Row TIV\r",
							"pm.test(\"Validating TIV for Fifth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"TIV\"]).to.eql(157390387);\r",
							"  console.log(\"TIV Miss Matching Expected: 157390387, Current:\", responseJson.Value.Analysis0[4][\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fifth Row ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL for Fifth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"ContractLoss_Value All Types_EL\"]).to.eql(25628751.37541827);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching Expected: 25628751.37541827, Current:\", responseJson.Value.Analysis0[4][\"ContractLoss_Value All Types_EL\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fifth Row Net Post Cat Exposed Limit\r",
							"pm.test(\"Validating Net Post Cat Exposed Limit for Fifth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Net Post Cat Exposed Limit\"]).to.eql(12814375.687709134);\r",
							"  console.log(\"Net Post Cat Exposed Limit Miss Matching Expected: 12814375.687709134, Current:\", responseJson.Value.Analysis0[4][\"Net Post Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fifth Row Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit for Fifth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Net Pre Cat Exposed Limit\"]).to.eql(12814375.687709134);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Miss Matching Expected: 12814375.687709134, Current:\", responseJson.Value.Analysis0[4][\"Net Pre Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fifth Row Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed Limit for Fifth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Net of Fac Exposed Limit\"]).to.eql(25628751.37541827);\r",
							"  console.log(\"Net of Fac Exposed Limit Miss Matching Expected: 25628751.37541827, Current:\", responseJson.Value.Analysis0[4][\"Net of Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fifth Row Reinsurance Gross Exposed Limit\r",
							"pm.test(\"Validating Reinsurance Gross Exposed Limit for Fifth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Reinsurance Gross Exposed Limit\"]).to.eql(12814375.687709134);\r",
							"  console.log(\"Reinsurance Gross Exposed Limit Miss Matching Expected: 12814375.687709134, Current:\", responseJson.Value.Analysis0[4][\"Reinsurance Gross Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fifth Row Treaty Exposed Limit\r",
							"pm.test(\"Validating Treaty Exposed Limit for Fifth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Treaty Exposed Limit\"]).to.eql(12814375.687709134);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching Expected: 12814375.687709134, Current:\", responseJson.Value.Analysis0[4][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fifth Row Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed Limit for Fifth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[4][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fifth Row Contract Number\r",
							"pm.test(\"Validating Contract Number for Fifth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"Contract Number\"]).to.eql(\"C1\");\r",
							"  console.log(\"Contract Number Miss Matching Expected: C1, Current:\", responseJson.Value.Analysis0[4][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Fifth Row GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLoss for Fifth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[4][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[4][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Sixth Row Asset Name\r",
							"pm.test(\"Validating Asset Name for Sixth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Asset Name\"]).to.eql(\"465284 - T0E\");\r",
							"  console.log(\"Asset Name Miss Matching Expected: 465284 - T0E, Current:\", responseJson.Value.Analysis0[5][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Sixth Row Asset Number\r",
							"pm.test(\"Validating Asset Number for Sixth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Asset Number\"]).to.eql(4);\r",
							"  console.log(\"Asset Number Miss Matching Expected: 4, Current:\", responseJson.Value.Analysis0[5][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Sixth Row TIV\r",
							"pm.test(\"Validating TIV for Sixth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"TIV\"]).to.eql(152234944.75);\r",
							"  console.log(\"TIV Miss Matching Expected: 152234944.75, Current:\", responseJson.Value.Analysis0[5][\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Sixth Row ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL for Sixth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"ContractLoss_Value All Types_EL\"]).to.eql(24789262.06368809);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching Expected: 24789262.06368809, Current:\", responseJson.Value.Analysis0[5][\"ContractLoss_Value All Types_EL\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Sixth Row Net Post Cat Exposed Limit\r",
							"pm.test(\"Validating Net Post Cat Exposed Limit for Sixth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Net Post Cat Exposed Limit\"]).to.eql(12394631.031844044);\r",
							"  console.log(\"Net Post Cat Exposed Limit Miss Matching Expected: 12394631.031844044, Current:\", responseJson.Value.Analysis0[5][\"Net Post Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Sixth Row Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit for Sixth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Net Pre Cat Exposed Limit\"]).to.eql(12394631.031844044);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Miss Matching Expected: 12394631.031844044, Current:\", responseJson.Value.Analysis0[5][\"Net Pre Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Sixth Row Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed Limit for Sixth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Net of Fac Exposed Limit\"]).to.eql(24789262.06368809);\r",
							"  console.log(\"Net of Fac Exposed Limit Miss Matching Expected: 24789262.06368809, Current:\", responseJson.Value.Analysis0[5][\"Net of Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Sixth Row Reinsurance Gross Exposed Limit\r",
							"pm.test(\"Validating Reinsurance Gross Exposed Limit for Sixth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Reinsurance Gross Exposed Limit\"]).to.eql(12394631.031844044);\r",
							"  console.log(\"Reinsurance Gross Exposed Limit Miss Matching Expected: 12394631.031844044, Current:\", responseJson.Value.Analysis0[5][\"Reinsurance Gross Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Sixth Row Treaty Exposed Limit\r",
							"pm.test(\"Validating Treaty Exposed Limit for Sixth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Treaty Exposed Limit\"]).to.eql(12394631.031844044);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching Expected: 12394631.031844044, Current:\", responseJson.Value.Analysis0[5][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Sixth Row Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed Limit for Sixth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[5][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Sixth Row Contract Number\r",
							"pm.test(\"Validating Contract Number for Sixth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"Contract Number\"]).to.eql(\"C1\");\r",
							"  console.log(\"Contract Number Miss Matching Expected: C1, Current:\", responseJson.Value.Analysis0[5][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Sixth Row GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLoss for Sixth Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[5][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[5][\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Seventh Row Asset Name\r",
							"pm.test(\"Validating Asset Name for Seventh Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Asset Name\"]).to.eql(\"464816 - T0E\");\r",
							"  console.log(\"Asset Name Miss Matching Expected: 464816 - T0E, Current:\", responseJson.Value.Analysis0[6][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Seventh Row Asset Number\r",
							"pm.test(\"Validating Asset Number for Seventh Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Asset Number\"]).to.eql(6);\r",
							"  console.log(\"Asset Number Miss Matching Expected: 6, Current:\", responseJson.Value.Analysis0[6][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Seventh Row TIV\r",
							"pm.test(\"Validating TIV for Seventh Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"TIV\"]).to.eql(139037594.5);\r",
							"  console.log(\"TIV Miss Matching Expected: 139037594.5, Current:\", responseJson.Value.Analysis0[6][\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Seventh Row ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL for Seventh Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"ContractLoss_Value All Types_EL\"]).to.eql(22640264.18129795);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching Expected: 22640264.18129795, Current:\", responseJson.Value.Analysis0[6][\"ContractLoss_Value All Types_EL\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Seventh Row Net Post Cat Exposed Limit\r",
							"pm.test(\"Validating Net Post Cat Exposed Limit for Seventh Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Net Post Cat Exposed Limit\"]).to.eql(11320132.090648975);\r",
							"  console.log(\"Net Post Cat Exposed Limit Miss Matching Expected: 11320132.090648975, Current:\", responseJson.Value.Analysis0[6][\"Net Post Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Seventh Row Net Pre Cat Exposed Limit\r",
							"pm.test(\"Validating Net Pre Cat Exposed Limit for Seventh Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Net Pre Cat Exposed Limit\"]).to.eql(11320132.090648975);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Miss Matching Expected: 11320132.090648975, Current:\", responseJson.Value.Analysis0[6][\"Net Pre Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Seventh Row Net of Fac Exposed Limit\r",
							"pm.test(\"Validating Net of Fac Exposed Limit for Seventh Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Net of Fac Exposed Limit\"]).to.eql(22640264.18129795);\r",
							"  console.log(\"Net of Fac Exposed Limit Miss Matching Expected: 22640264.18129795, Current:\", responseJson.Value.Analysis0[6][\"Net of Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Seventh Row Reinsurance Gross Exposed Limit\r",
							"pm.test(\"Validating Reinsurance Gross Exposed Limit for Seventh Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Reinsurance Gross Exposed Limit\"]).to.eql(11320132.090648975);\r",
							"  console.log(\"Reinsurance Gross Exposed Limit Miss Matching Expected: 11320132.090648975, Current:\", responseJson.Value.Analysis0[6][\"Reinsurance Gross Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Seventh Row Treaty Exposed Limit\r",
							"pm.test(\"Validating Treaty Exposed Limit for Seventh Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Treaty Exposed Limit\"]).to.eql(11320132.090648975);\r",
							"  console.log(\"Treaty Exposed Limit Miss Matching Expected: 11320132.090648975, Current:\", responseJson.Value.Analysis0[6][\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Seventh Row Fac Exposed Limit\r",
							"pm.test(\"Validating Fac Exposed Limit for Seventh Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[6][\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Seventh Row Contract Number\r",
							"pm.test(\"Validating Contract Number for Seventh Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"Contract Number\"]).to.eql(\"C1\");\r",
							"  console.log(\"Contract Number Miss Matching Expected: C1, Current:\", responseJson.Value.Analysis0[6][\"Contract Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for Seventh Row GroundUpLoss\r",
							"pm.test(\"Validating GroundUpLoss for Seventh Row with Single Contract Treaty Share Check without event\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[6][\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Miss Matching Expected: 0, Current:\", responseJson.Value.Analysis0[6][\"GroundUpLoss\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"AdditionalSortMeasure\": \"TIV\",\r\n    \"AttributeList\": [\r\n        \"Asset Name\",\r\n        \"Asset Number\",\r\n        \"TIV\",\r\n        \"ContractLoss_Value All Types_EL\",\r\n        \"Net Post Cat Exposed Limit\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Reinsurance Gross Exposed Limit\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Fac Exposed Limit\",\r\n        \"Contract Number\",\r\n        \"GroundUpLoss\"\r\n        \r\n    ],\r\n    \"SortDirection\": -1,\r\n    \"Count\": 20,\r\n    \"TopNBy\": \"ContractLoss_Value All Types_EL\",\r\n    \"ContractMode\": false,\r\n    \"PercentageAttributes\": false,\r\n    \"TopNAssetsBy\": \"ContractLoss_Value All Types_EL\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/topn",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"topn"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tiv/TIV Range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"//const data1 = JSON(responseJson);\r",
							"\r",
							"// Validating Single Contract Treaty Share Check  without Event  TIV for Geocoded Resolution == 1\r",
							"pm.test(\"Validating TIV For Single Contract Treaty Share Check  without Event  Geocoded Resolution == 1\", () => {\r",
							"    const  GR = responseJson.Value.Analysis0.find(item => item[\"Geocoded Resolution\"] === \"1\");\r",
							"    pm.expect(GR[\"TIV\"]).to.eql(1228232969.25); \r",
							"});\r",
							"\r",
							"// Validating Single Contract Treaty Share Check  without Event  Percentage TIV for Geocoded Resolution == 1\r",
							"pm.test(\"Validating Percentage TIV for Single Contract Treaty Share Check  without Event   for Geocoded Resolution == 1\", () => {\r",
							"    const  GR = responseJson.Value.Analysis0.find(item => item[\"Geocoded Resolution\"] === \"1\");\r",
							"    pm.expect(GR[\"Percentage TIV\"]).to.eql(100); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution For Single Contract Treaty Share Check  without Event  Geocoded Resolution for Geocoded Resolution == 1\r",
							"pm.test(\"Validating Geocoded Resolution for Single Contract Treaty Share Check  without Event   for Geocoded Resolution == 1\", () => {\r",
							"    const  GR = responseJson.Value.Analysis0.find(item => item[\"Geocoded Resolution\"] === \"1\");\r",
							"    pm.expect(GR[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value All Types_EL for Single Contract Treaty Share Check  without Event  Geocoded Resolution for Geocoded Resolution == 1\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL for Single Contract Treaty Share Check  without Event   for Geocoded Resolution == 1\", () => {\r",
							"    const  GR = responseJson.Value.Analysis0.find(item => item[\"Geocoded Resolution\"] === \"1\");\r",
							"    pm.expect(GR[\"ContractLoss_Value All Types_EL\"]).to.eql(200000000); \r",
							"});\r",
							"\r",
							"// Validating Percentage ContractLoss_Value All Types_EL for Single Contract Treaty Share Check  without Event  Geocoded Resolution for Geocoded Resolution == 1\r",
							"pm.test(\"Validating Percentage ContractLoss_Value All Types_EL for Single Contract Treaty Share Check  without Event   for Geocoded Resolution == 1\", () => {\r",
							"    const  GR = responseJson.Value.Analysis0.find(item => item[\"Geocoded Resolution\"] === \"1\");\r",
							"    pm.expect(GR[\"Percentage ContractLoss_Value All Types_EL\"]).to.eql(100); \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"ContractLoss_Value All Types_EL\",\r\n        \"TIV\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Geocoded Resolution\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}