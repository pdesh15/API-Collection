{
	"info": {
		"_postman_id": "fe54b250-20cf-4bf5-958a-c2cae78fd1f9",
		"name": "Alpha EQ exclusion number check",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14426843",
		"_collection_link": "https://solar-shadow-896910.postman.co/workspace/INT_collections~de35fb07-0e5b-497f-9227-f47ca652562e/collection/14426843-fe54b250-20cf-4bf5-958a-c2cae78fd1f9?action=share&source=collection_link&creator=14426843"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set analysis EQ Exclusion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"setTimeout(function() {\r",
							"    console.log(\"Next API Call After 3 Minutes \")\r",
							"}, 180000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 23761,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"analysisObject\": [\r\n        {\r\n            \"CurrencyCode\": \"USD\",\r\n            \"IncludeAllContracts\": true,\r\n            \"damageAdjustment\": 1,\r\n            \"ValuationTypeCode\": 1,\r\n            \"ExposureFilterSets\": {\r\n        \"AssetModel\": \"ERBASICS\",\r\n        \"FilterList\": [\r\n          {\r\n            \"AndOr\": \"AND\",\r\n            \"FilterList\": [\r\n              {\r\n                \"AssetType\": \"Site\",\r\n                \"Attribute\": \"Cause Of Loss\",\r\n                \"Operator\": \"EQ\",\r\n                \"Value\": \"EQXX\",\r\n                \"AndOr\": \"OR\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n            \"quantile\": 50\r\n            \r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/load-exposure",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"load-exposure"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposure Summary",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"// Assertion for \"Asset Count\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Asset Count\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Asset Count\"]).to.eql(2);\r",
							"  console.log(\"Asset Count Value is matching Expected: 2, Current: \", responseJson.Value.Analysis0[\"Asset Count\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"#Contracts\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event #Contracts\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"#Contracts\"]).to.eql(1);\r",
							"  console.log(\"#Contracts Value is matching Expected: 1, Current: \", responseJson.Value.Analysis0[\"#Contracts\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"TIV\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event TIV\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"TIV\"]).to.eql(740000000);\r",
							"  console.log(\"TIV Value is matching Expected: 740000000, Current: \", responseJson.Value.Analysis0[\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Gross Exposed Limit\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Gross Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Gross Exposed Limit\"]).to.eql(2050000.0305473804);\r",
							"  console.log(\"Gross Exposed Limit Value is matching Expected: 2050000.0305473804, Current: \", responseJson.Value.Analysis0[\"Gross Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"GroundUpLoss\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event GroundUpLoss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"ContractLoss_Value All Types_GL\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event ContractLoss_Value All Types_GL\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Net Pre Cat Exposed Limit\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Net Pre Cat Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net Pre Cat Exposed Limit\"]).to.eql(2050000.0305473804);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Value is matching Expected: 2050000.0305473804, Current: \", responseJson.Value.Analysis0[\"Net Pre Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Net Pre Cat Loss\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Net Pre Cat Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Net of Fac Exposed Limit\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Net of Fac Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net of Fac Exposed Limit\"]).to.eql(2050000.0305473804);\r",
							"  console.log(\"Net of Fac Exposed Limit Value is matching Expected: 2050000.0305473804, Current: \", responseJson.Value.Analysis0[\"Net of Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Net of Fac Loss\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Net of Fac Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Fac Exposed Limit\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Fac Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Fac loss\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Fac loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac loss Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Treaty Exposed Limit\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Treaty Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Treaty Loss\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Treaty Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Treaty Loss\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"measures\": [\r\n        \"Asset Count\",\r\n        \"#Contracts\",\r\n        \"TIV\",\r\n        \"Gross Exposed Limit\",\r\n        \"GroundUpLoss\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/summary",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"summary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Top 20 Assets",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log(\"-------- TOP N First Row Value --------\")\r",
							"\r",
							"// Assertion and comment for the first row - Asset Name\r",
							"pm.test(\"Validating Asset Name Of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Name\"]).to.eql(\"No Name\");\r",
							"  console.log(\"Asset Name Miss Matching In First Row. Expected: No Name. Current:\", responseJson.Value.Analysis0[0][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Assertion and comment for the first row - Asset Number\r",
							"pm.test(\"Validating Asset Number Of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Number\"]).to.eql(321228004);\r",
							"  console.log(\"Asset Number Miss Matching In First Row. Expected: 321228004. Current:\", responseJson.Value.Analysis0[0][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion and comment for the first row - ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_EL\"]).to.eql(2050000.0305473804);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching In First Row. Expected: 2050000.0305473804. Current:\", responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_EL\"]);\r",
							"});\r",
							"\r",
							"// Assertion and comment for the first row - TIV\r",
							"pm.test(\"Validating TIV Of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"TIV\"]).to.eql(40000000);\r",
							"  console.log(\"TIV Miss Matching In First Row. Expected: 40000000. Current:\", responseJson.Value.Analysis0[0][\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion and comment for the first row - ContractLoss_Value All Types_GL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In First Row. Expected: 0. Current:\", responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"AdditionalSortMeasure\": \"TIV\",\r\n    \"AttributeList\": [\r\n        \"#\",\r\n        \"Asset Number\",\r\n        \"Asset Name\",\r\n        \"ContractLoss_Value All Types_EL\",\r\n        \"TIV\",\r\n        \"ContractLoss_Value All Types_GL\"\r\n    ],\r\n    \"SortDirection\": -1,\r\n    \"Count\": 20,\r\n    \"TopNBy\": \"ContractLoss_Value All Types_EL\",\r\n    \"ContractMode\": false,\r\n    \"PercentageAttributes\": false,\r\n    \"TopNAssetsBy\": \"ContractLoss_Value All Types_EL\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/topn",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"topn"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set analysis EQ Exclusion FLXX",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"setTimeout(function() {\r",
							"    console.log(\"Next API Call After 3 Minutes \")\r",
							"}, 180000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 23761,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"analysisObject\": [\r\n        {\r\n            \"CurrencyCode\": \"USD\",\r\n            \"IncludeAllContracts\": true,\r\n            \"damageAdjustment\": 1,\r\n            \"ValuationTypeCode\": 1,\r\n            \"ExposureFilterSets\": {\r\n        \"AssetModel\": \"ERBASICS\",\r\n        \"FilterList\": [\r\n          {\r\n            \"AndOr\": \"AND\",\r\n            \"FilterList\": [\r\n              {\r\n                \"AssetType\": \"Site\",\r\n                \"Attribute\": \"Cause Of Loss\",\r\n                \"Operator\": \"EQ\",\r\n                \"Value\": \"FLXX\",\r\n                \"AndOr\": \"OR\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n            \"quantile\": 50\r\n            \r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/load-exposure",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"load-exposure"
					]
				}
			},
			"response": []
		},
		{
			"name": "Exposure Summary Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"// Assertion for \"Asset Count\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Asset Count\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Asset Count\"]).to.eql(2);\r",
							"  console.log(\"Asset Count Value is matching Expected: 2, Current: \", responseJson.Value.Analysis0[\"Asset Count\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"#Contracts\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event #Contracts\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"#Contracts\"]).to.eql(1);\r",
							"  console.log(\"#Contracts Value is matching Expected: 1, Current: \", responseJson.Value.Analysis0[\"#Contracts\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"TIV\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event TIV\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"TIV\"]).to.eql(740000000);\r",
							"  console.log(\"TIV Value is matching Expected: 740000000, Current: \", responseJson.Value.Analysis0[\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Gross Exposed Limit\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Gross Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Gross Exposed Limit\"]).to.eql(36100000.56028366);\r",
							"  console.log(\"Gross Exposed Limit Value is matching Expected: 36100000.56028366, Current: \", responseJson.Value.Analysis0[\"Gross Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"GroundUpLoss\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event GroundUpLoss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"GroundUpLoss\"]).to.eql(0);\r",
							"  console.log(\"GroundUpLoss Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"GroundUpLoss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"ContractLoss_Value All Types_GL\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event ContractLoss_Value All Types_GL\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Net Pre Cat Exposed Limit\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Net Pre Cat Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net Pre Cat Exposed Limit\"]).to.eql(36100000.56028366);\r",
							"  console.log(\"Net Pre Cat Exposed Limit Value is matching Expected: 36100000.56028366, Current: \", responseJson.Value.Analysis0[\"Net Pre Cat Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Net Pre Cat Loss\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Net Pre Cat Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net Pre Cat Loss\"]).to.eql(0);\r",
							"  console.log(\"Net Pre Cat Loss Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Net Pre Cat Loss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Net of Fac Exposed Limit\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Net of Fac Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net of Fac Exposed Limit\"]).to.eql(36100000.56028366);\r",
							"  console.log(\"Net of Fac Exposed Limit Value is matching Expected: 36100000.56028366, Current: \", responseJson.Value.Analysis0[\"Net of Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Net of Fac Loss\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Net of Fac Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Net of Fac Loss\"]).to.eql(0);\r",
							"  console.log(\"Net of Fac Loss Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Net of Fac Loss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Fac Exposed Limit\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Fac Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Fac Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Fac Exposed Limit Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Fac Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Fac loss\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Fac loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Fac loss\"]).to.eql(0);\r",
							"  console.log(\"Fac loss Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Fac loss\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Treaty Exposed Limit\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Treaty Exposed Limit\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Treaty Exposed Limit\"]).to.eql(0);\r",
							"  console.log(\"Treaty Exposed Limit Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Treaty Exposed Limit\"]);\r",
							"});\r",
							"\r",
							"// Assertion for \"Treaty Loss\"\r",
							"pm.test(\"Validating EQ Exclusion analysis without event Treaty Loss\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[\"Treaty Loss\"]).to.eql(0);\r",
							"  console.log(\"Treaty Loss Value is matching Expected: 0, Current: \", responseJson.Value.Analysis0[\"Treaty Loss\"]);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"measures\": [\r\n        \"Asset Count\",\r\n        \"#Contracts\",\r\n        \"TIV\",\r\n        \"Gross Exposed Limit\",\r\n        \"GroundUpLoss\",\r\n        \"ContractLoss_Value All Types_GL\",\r\n        \"Net Pre Cat Exposed Limit\",\r\n        \"Net Pre Cat Loss\",\r\n        \"Net of Fac Exposed Limit\",\r\n        \"Net of Fac Loss\",\r\n        \"Fac Exposed Limit\",\r\n        \"Fac loss\",\r\n        \"Treaty Exposed Limit\",\r\n        \"Treaty Loss\"\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/summary",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"summary"
					]
				}
			},
			"response": []
		},
		{
			"name": "Top 20 Assets Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log(\"-------- TOP N First Row Value --------\")\r",
							"\r",
							"// Assertion for the first row - Asset Name\r",
							"pm.test(\"Validating Asset Name Of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Name\"]).to.eql(\"No Name\");\r",
							"  console.log(\"Asset Name Miss Matching In First Row. Expected: No Name. Current:\", responseJson.Value.Analysis0[0][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Assertion for the first row - Asset Number\r",
							"pm.test(\"Validating Asset Number Of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"Asset Number\"]).to.eql(321228003);\r",
							"  console.log(\"Asset Number Miss Matching In First Row. Expected: 321228003. Current:\", responseJson.Value.Analysis0[0][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for the first row - ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_EL\"]).to.eql(34050000.52973628);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching In First Row. Expected: 34050000.52973628. Current:\", responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_EL\"]);\r",
							"});\r",
							"\r",
							"// Assertion for the first row - TIV\r",
							"pm.test(\"Validating TIV Of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"TIV\"]).to.eql(700000000);\r",
							"  console.log(\"TIV Miss Matching In First Row. Expected: 700000000. Current:\", responseJson.Value.Analysis0[0][\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion for the first row - ContractLoss_Value All Types_GL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of First Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In First Row. Expected: 0. Current:\", responseJson.Value.Analysis0[0][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							"// Assertion for the second row - Asset Name\r",
							"pm.test(\"Validating Asset Name Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Name\"]).to.eql(\"No Name\");\r",
							"  console.log(\"Asset Name Miss Matching In Second Row. Expected: No Name. Current:\", responseJson.Value.Analysis0[1][\"Asset Name\"]);\r",
							"});\r",
							"\r",
							"// Assertion for the second row - Asset Number\r",
							"pm.test(\"Validating Asset Number Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"Asset Number\"]).to.eql(321228004);\r",
							"  console.log(\"Asset Number Miss Matching In Second Row. Expected: 321228004. Current:\", responseJson.Value.Analysis0[1][\"Asset Number\"]);\r",
							"});\r",
							"\r",
							"// Assertion for the second row - ContractLoss_Value All Types_EL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_EL Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_EL\"]).to.eql(2050000.0305473804);\r",
							"  console.log(\"ContractLoss_Value All Types_EL Miss Matching In Second Row. Expected: 2050000.0305473804. Current:\", responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_EL\"]);\r",
							"});\r",
							"\r",
							"// Assertion for the second row - TIV\r",
							"pm.test(\"Validating TIV Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"TIV\"]).to.eql(40000000);\r",
							"  console.log(\"TIV Miss Matching In Second Row. Expected: 40000000. Current:\", responseJson.Value.Analysis0[1][\"TIV\"]);\r",
							"});\r",
							"\r",
							"// Assertion for the second row - ContractLoss_Value All Types_GL\r",
							"pm.test(\"Validating ContractLoss_Value All Types_GL Of Second Row\", () => {\r",
							"  pm.expect(responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_GL\"]).to.eql(0);\r",
							"  console.log(\"ContractLoss_Value All Types_GL Miss Matching In Second Row. Expected: 0. Current:\", responseJson.Value.Analysis0[1][\"ContractLoss_Value All Types_GL\"]);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"AdditionalSortMeasure\": \"TIV\",\r\n    \"AttributeList\": [\r\n        \"#\",\r\n        \"Asset Number\",\r\n        \"Asset Name\",\r\n        \"ContractLoss_Value All Types_EL\",\r\n        \"TIV\",\r\n        \"ContractLoss_Value All Types_GL\"\r\n    ],\r\n    \"SortDirection\": -1,\r\n    \"Count\": 20,\r\n    \"TopNBy\": \"ContractLoss_Value All Types_EL\",\r\n    \"ContractMode\": false,\r\n    \"PercentageAttributes\": false,\r\n    \"TopNAssetsBy\": \"ContractLoss_Value All Types_EL\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/analysis/topn",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"topn"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}