{
	"info": {
		"_postman_id": "9d112519-0945-4cb3-8f21-62095f81705a",
		"name": "alpha Portfolio Geo Spider Number check - 23512 Eigen_Sample_EQTO",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33412147"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"//postman.setEnvironmentVariable(\"token\", jsonData.token);\r",
							"pm.collectionVariables.set(\"v4tokenAlpha\", jsonData.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Portfolio geo-spider-analysis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"//postman.setEnvironmentVariable(\"token\", jsonData.token);\r",
							"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{v4tokenAlpha}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 23512,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"IncludeAllContracts\": true,\r\n    \"ApplyAllPerils\": false,\r\n    \"CurrencyCode\": \"USD\",\r\n    \"ExposureFilterSets\": {\r\n        \"FilterList\": [\r\n            {\r\n                \"AndOr\": \"AND\",\r\n                \"FilterList\": [\r\n                    {\r\n                        \"AssetType\": \"Site\",\r\n                        \"Attribute\": \"Cause Of Loss\",\r\n                        \"Operator\": \"EQ\",\r\n                        \"Value\": \"EQXX\",\r\n                        \"AndOr\": \"OR\"\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"AndOr\": \"AND\",\r\n                \"FilterList\": [\r\n                    {\r\n                        \"AssetType\": \"Site\",\r\n                        \"Attribute\": \"Country\",\r\n                        \"Operator\": \"EQ\",\r\n                        \"Value\": \"US\",\r\n                        \"AndOr\": \"OR\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"AccumulateByAttribute\": {\r\n        \"AdditionalMeasures\": [\r\n            \"#Assets\",\r\n            \"#Contracts\",\r\n            \"TIV\",\r\n            \"GroundUpLoss\",\r\n            \"ContractLoss_Value All Types_EL\",\r\n            \"ContractLoss_Value All Types_GL\",\r\n            \"Gross Exposed Limit\",\r\n            \"Net Pre Cat Exposed Limit\",\r\n            \"Net Pre Cat Loss\",\r\n            \"Net of Fac Exposed Limit\",\r\n            \"Net of Fac Loss\",\r\n            \"Fac Exposed Limit\",\r\n            \"Fac loss\",\r\n            \"Treaty Exposed Limit\",\r\n            \"Treaty Loss\"\r\n        ],\r\n        \"Attributes\": [\r\n            \"State\",\r\n            \"Country\"\r\n        ],\r\n        \"Count\": 20,\r\n        \"Measure\": \"ContractLoss_Value All Types_EL\",\r\n        \"Peril\": \"Earthquake\",\r\n        \"SubPeril\": \"Shake\",\r\n        \"Operator\": \"GT\",\r\n        \"Threshold\": 0,\r\n        \"ThresholdEnd\": 0,\r\n        \"Contribution\": [\r\n      {\r\n        \"GroupByMeasures\": [\r\n          \"TIV\"\r\n        ],\r\n        \"GroupByAttributes\": [\r\n          \"Geocoded Resolution\"\r\n        ]\r\n      }\r\n    ]\r\n\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/analysis/geo-spider-analysis",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"geo-spider-analysis"
					]
				}
			},
			"response": []
		},
		{
			"name": "Portfolio-geo-spider-progress",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"console.log(responseJson);\r",
							"\r",
							"if (responseJson.hasOwnProperty('error')) {\r",
							"    if (responseJson.error === \"Request unauthorized\") {\r",
							"        console.log(\"Authentication Failed. Re-running the Refresh token API\");\r",
							"        pm.collectionVariables.set(\"Flag\", \"true\");\r",
							"        postman.setNextRequest(\"Refresh token\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1.7 minutes before next request.\");\r",
							"        }, 100000);\r",
							"    } else if (responseJson.error === \"Please check the request id. No status available.\") {\r",
							"        console.log(\"Facing a crash. Starting the same iteration\");\r",
							"        postman.setNextRequest(\"Authentication and Authorization\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 15 minutes before next request.\");\r",
							"        }, 900000);\r",
							"    } else {\r",
							"        console.log(\"Authentication Failed. Re-running the Refresh token API\");\r",
							"        postman.setNextRequest(\"Refresh token\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1.7 minutes before next request.\");\r",
							"        }, 100000);\r",
							"    }\r",
							"} else if (responseJson.hasOwnProperty('Stage')) {\r",
							"    if (responseJson.Stage === \"In Queue\") {\r",
							"        console.log(\"Analysis is In Queue. Running the same API\");\r",
							"        postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 2 minute before next request.\");\r",
							"        }, 120000);\r",
							"    } else if (responseJson.Stage === \"Started\") {\r",
							"        console.log(\"Analysis is Started. Running the same API\");\r",
							"        postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1 minute before next request.\");\r",
							"        }, 60000);\r",
							"    } else if (responseJson.Percentage === 100) {\r",
							"        console.log(\"Success! Moving to next API\");\r",
							"        postman.setNextRequest(\"get-data-by-requestid\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1 minute before next request.\");\r",
							"        }, 60000);\r",
							"    } else if (responseJson.Stage === \"Computing accumulations\") {\r",
							"        console.log(\"Computation still not completed. Running the same API\");\r",
							"        postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1 minute before next request.\");\r",
							"        }, 60000);\r",
							"    } else if (responseJson.Message === \"Unable to connect to Geo server\") {\r",
							"        console.log(\"Facing a crash. Starting the same iteration\");\r",
							"        postman.setNextRequest(\"Authentication and Authorization\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 15 minutes before next request.\");\r",
							"        }, 900000);\r",
							"    } else if (responseJson.Message === \"No server available to run the analysis\") {\r",
							"        console.log(\"Facing a crash. Starting the same iteration\");\r",
							"        postman.setNextRequest(\"Authentication and Authorization\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 15 minutes before next request.\");\r",
							"        }, 900000);\r",
							"    } else if (responseJson.Stage === \"Failed!\") {\r",
							"        console.log(\"Facing a crash. Starting the same iteration\");\r",
							"        postman.setNextRequest(\"Authentication and Authorization\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 15 minutes before next request.\");\r",
							"        }, 900000);\r",
							"    }\r",
							"     else {\r",
							"        console.log(\"Not Completed! Running the same API\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 5 minutes before next request.\");\r",
							"        }, 300000);\r",
							"        postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"    }\r",
							"}\r",
							"else\r",
							"{ \r",
							"    console.log(\"Not Completed ! Runnnig same API\");\r",
							"    setTimeout(function(){\r",
							"          console.log(\"Sleeping for 5  minutes before next request.\");\r",
							"  }, 300000);\r",
							"     postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{v4tokenAlpha}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"requestId\": \"{{requestId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/analysis/geo-spider-progress",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"geo-spider-progress"
					]
				}
			},
			"response": []
		},
		{
			"name": "Refresh token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"//postman.setEnvironmentVariable(\"token\", jsonData.token);\r",
							"pm.collectionVariables.set(\"v4tokenAlpha\", jsonData.token);\r",
							"postman.setNextRequest(\"Portfolio-geo-spider-progress\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-data-by-requestid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"//Add assertion for contribution check\r",
							"\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure Eigen Sample EQTO, Geocoded Resolution == 1\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure Eigen Sample EQTO, Geocoded Resolution == 1\", () => {\r",
							"    const result = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\");\r",
							"    pm.expect(result[\"Geocoded Resolution\"]).to.eql(\"1\");\r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure Eigen Sample EQTO, Geocoded Resolution == 1\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure Eigen Sample EQTO, Geocoded Resolution == 1\", () => {\r",
							"    const result = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\");\r",
							"    pm.expect(result[\"Percentage\"]).to.eql(100);\r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure Eigen Sample EQTO, Geocoded Resolution == 1\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure Eigen Sample EQTO, Geocoded Resolution == 1\", () => {\r",
							"    const result = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\");\r",
							"    pm.expect(result[\"TIV\"]).to.eql(523807959962);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"console.log(\"-------- TOP 20 Accumulations by Gross Exposed Limit >0 --------\") \r",
							"\r",
							"// Assertion for #Assets in the first row\r",
							"pm.test('Validating #Assets In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['#Assets']).to.eql(12883);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the first row\r",
							"pm.test('Validating #Contracts In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['#Contracts']).to.eql(2017);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the first row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['ContractLoss_Value All Types_EL']).to.eql(10106069498.24998);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the first row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['ContractLoss_Value All Types_GL']).to.eql(10106069498.24998);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the first row\r",
							"pm.test('Validating Country In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the first row\r",
							"pm.test('Validating Fac Exposed Limit In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Fac Exposed Limit']).to.eql(96600000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the first row\r",
							"pm.test('Validating GroundUpLoss In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['GroundUpLoss']).to.eql(67395225210);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the first row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Net Pre Cat Exposed Limit']).to.eql(6923842054.005706);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the first row\r",
							"pm.test('Validating Net Pre Cat Loss In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Net Pre Cat Loss']).to.eql(6923842054.005706);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the first row\r",
							"pm.test('Validating Net of Fac Exposed Limit In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Net of Fac Exposed Limit']).to.eql(10009469498.24998);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the first row\r",
							"pm.test('Validating Net of Fac Loss In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Net of Fac Loss']).to.eql(10009469498.24998);\r",
							"});\r",
							"\r",
							"// Assertion for State in the first row\r",
							"pm.test('Validating State In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['State']).to.eql(\"NY\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the first row\r",
							"pm.test('Validating TIV In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['TIV']).to.eql(67395225210);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the first row\r",
							"pm.test('Validating Treaty Exposed Limit In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Treaty Exposed Limit']).to.eql(3085627444.2443233);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the first row\r",
							"pm.test('Validating Treaty Loss In First Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Treaty Loss']).to.eql(3085627444.2443233);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the second row\r",
							"pm.test('Validating #Assets In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['#Assets']).to.eql(9181);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the second row\r",
							"pm.test('Validating #Contracts In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['#Contracts']).to.eql(1479);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the second row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['ContractLoss_Value All Types_EL']).to.eql(7777566865.999994);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the second row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['ContractLoss_Value All Types_GL']).to.eql(7777566865.999994);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the second row\r",
							"pm.test('Validating Country In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the second row\r",
							"pm.test('Validating Fac Exposed Limit In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Fac Exposed Limit']).to.eql(68900000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the second row\r",
							"pm.test('Validating GroundUpLoss In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['GroundUpLoss']).to.eql(47821253027);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the second row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Net Pre Cat Exposed Limit']).to.eql(5322594965.958334);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the second row\r",
							"pm.test('Validating Net Pre Cat Loss In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Net Pre Cat Loss']).to.eql(5322594965.958334);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the second row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Net of Fac Exposed Limit']).to.eql(7708666865.999994);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the second row\r",
							"pm.test('Validating Net of Fac Loss In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Net of Fac Loss']).to.eql(7708666865.999994);\r",
							"});\r",
							"\r",
							"// Assertion for State in the second row\r",
							"pm.test('Validating State In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['State']).to.eql(\"TX\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the second row\r",
							"pm.test('Validating TIV In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['TIV']).to.eql(47821253027);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the second row\r",
							"pm.test('Validating Treaty Exposed Limit In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Treaty Exposed Limit']).to.eql(2386071900.041652);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the second row\r",
							"pm.test('Validating Treaty Loss In Second Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Treaty Loss']).to.eql(2386071900.041652);\r",
							"});\r",
							"\r",
							"\r",
							"// Assertion for #Assets in the third row\r",
							"pm.test('Validating #Assets In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['#Assets']).to.eql(7919);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the third row\r",
							"pm.test('Validating #Contracts In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['#Contracts']).to.eql(1236);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the third row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['ContractLoss_Value All Types_EL']).to.eql(7059606477.75001);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the third row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['ContractLoss_Value All Types_GL']).to.eql(7059606477.75001);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the third row\r",
							"pm.test('Validating Country In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the third row\r",
							"pm.test('Validating Fac Exposed Limit In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Fac Exposed Limit']).to.eql(61300000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the third row\r",
							"pm.test('Validating GroundUpLoss In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['GroundUpLoss']).to.eql(41688777149);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the third row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Net Pre Cat Exposed Limit']).to.eql(4828328444.048843);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the third row\r",
							"pm.test('Validating Net Pre Cat Loss In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Net Pre Cat Loss']).to.eql(4828328444.048843);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the third row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Net of Fac Exposed Limit']).to.eql(6998306477.75001);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the third row\r",
							"pm.test('Validating Net of Fac Loss In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Net of Fac Loss']).to.eql(6998306477.75001);\r",
							"});\r",
							"\r",
							"// Assertion for State in the third row\r",
							"pm.test('Validating State In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['State']).to.eql(\"FL\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the third row\r",
							"pm.test('Validating TIV In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['TIV']).to.eql(41688777149);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the third row\r",
							"pm.test('Validating Treaty Exposed Limit In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Treaty Exposed Limit']).to.eql(2169978033.7011647);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the third row\r",
							"pm.test('Validating Treaty Loss In Third Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Treaty Loss']).to.eql(2169978033.7011647);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the fourth row\r",
							"pm.test('Validating #Assets In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['#Assets']).to.eql(7709);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the fourth row\r",
							"pm.test('Validating #Contracts In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['#Contracts']).to.eql(1219);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the fourth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['ContractLoss_Value All Types_EL']).to.eql(6974525216.999985);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the fourth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['ContractLoss_Value All Types_GL']).to.eql(6974525216.999985);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the fourth row\r",
							"pm.test('Validating Country In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the fourth row\r",
							"pm.test('Validating Fac Exposed Limit In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Fac Exposed Limit']).to.eql(57600000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the fourth row\r",
							"pm.test('Validating GroundUpLoss In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['GroundUpLoss']).to.eql(40906602526);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the fourth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Net Pre Cat Exposed Limit']).to.eql(4771992650.05582);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the fourth row\r",
							"pm.test('Validating Net Pre Cat Loss In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Net Pre Cat Loss']).to.eql(4771992650.05582);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the fourth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Net of Fac Exposed Limit']).to.eql(6916925216.999985);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the fourth row\r",
							"pm.test('Validating Net of Fac Loss In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Net of Fac Loss']).to.eql(6916925216.999985);\r",
							"});\r",
							"\r",
							"// Assertion for State in the fourth row\r",
							"pm.test('Validating State In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['State']).to.eql(\"CA\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the fourth row\r",
							"pm.test('Validating TIV In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['TIV']).to.eql(40906602526);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the fourth row\r",
							"pm.test('Validating Treaty Exposed Limit In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Treaty Exposed Limit']).to.eql(2144932566.944186);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the fourth row\r",
							"pm.test('Validating Treaty Loss In Fourth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Treaty Loss']).to.eql(2144932566.944186);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the fifth row\r",
							"pm.test('Validating #Assets In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['#Assets']).to.eql(6160);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the fifth row\r",
							"pm.test('Validating #Contracts In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['#Contracts']).to.eql(974);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the fifth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['ContractLoss_Value All Types_EL']).to.eql(5869300546.500018);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the fifth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['ContractLoss_Value All Types_GL']).to.eql(5869300546.500018);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the fifth row\r",
							"pm.test('Validating Country In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the fifth row\r",
							"pm.test('Validating Fac Exposed Limit In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Fac Exposed Limit']).to.eql(46200000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the fifth row\r",
							"pm.test('Validating GroundUpLoss In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['GroundUpLoss']).to.eql(32009254496);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the fifth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Net Pre Cat Exposed Limit']).to.eql(4012187169.92756);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the fifth row\r",
							"pm.test('Validating Net Pre Cat Loss In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Net Pre Cat Loss']).to.eql(4012187169.92756);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the fifth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Net of Fac Exposed Limit']).to.eql(5823100546.500018);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the fifth row\r",
							"pm.test('Validating Net of Fac Loss In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Net of Fac Loss']).to.eql(5823100546.500018);\r",
							"});\r",
							"\r",
							"// Assertion for State in the fifth row\r",
							"pm.test('Validating State In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['State']).to.eql(\"MA\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the fifth row\r",
							"pm.test('Validating TIV In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['TIV']).to.eql(32009254496);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the fifth row\r",
							"pm.test('Validating Treaty Exposed Limit In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Treaty Exposed Limit']).to.eql(1810913376.572441);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the fifth row\r",
							"pm.test('Validating Treaty Loss In Fifth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Treaty Loss']).to.eql(1810913376.572441);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the sixth row\r",
							"pm.test('Validating #Assets In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['#Assets']).to.eql(3697);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the sixth row\r",
							"pm.test('Validating #Contracts In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['#Contracts']).to.eql(590);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the sixth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['ContractLoss_Value All Types_EL']).to.eql(4441865720.750002);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the sixth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['ContractLoss_Value All Types_GL']).to.eql(4441865720.750002);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the sixth row\r",
							"pm.test('Validating Country In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the sixth row\r",
							"pm.test('Validating Fac Exposed Limit In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Fac Exposed Limit']).to.eql(28900000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the sixth row\r",
							"pm.test('Validating GroundUpLoss In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['GroundUpLoss']).to.eql(19675549750);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the sixth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Net Pre Cat Exposed Limit']).to.eql(3040016393.8292193);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the sixth row\r",
							"pm.test('Validating Net Pre Cat Loss In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Net Pre Cat Loss']).to.eql(3040016393.8292193);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the sixth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Net of Fac Exposed Limit']).to.eql(4412965720.750003);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the sixth row\r",
							"pm.test('Validating Net of Fac Loss In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Net of Fac Loss']).to.eql(4412965720.750003);\r",
							"});\r",
							"\r",
							"// Assertion for State in the sixth row\r",
							"pm.test('Validating State In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['State']).to.eql(\"CT\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the sixth row\r",
							"pm.test('Validating TIV In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['TIV']).to.eql(19675549750);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the sixth row\r",
							"pm.test('Validating Treaty Exposed Limit In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Treaty Exposed Limit']).to.eql(1372949326.9207814);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the sixth row\r",
							"pm.test('Validating Treaty Loss In Sixth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Treaty Loss']).to.eql(1372949326.9207814);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the seventh row\r",
							"pm.test('Validating #Assets In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['#Assets']).to.eql(3779);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the seventh row\r",
							"pm.test('Validating #Contracts In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['#Contracts']).to.eql(621);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the seventh row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['ContractLoss_Value All Types_EL']).to.eql(4421248026.749997);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the seventh row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['ContractLoss_Value All Types_GL']).to.eql(4421248026.749997);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the seventh row\r",
							"pm.test('Validating Country In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the seventh row\r",
							"pm.test('Validating Fac Exposed Limit In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Fac Exposed Limit']).to.eql(30600000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the seventh row\r",
							"pm.test('Validating GroundUpLoss In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['GroundUpLoss']).to.eql(19375763458);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the seventh row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Net Pre Cat Exposed Limit']).to.eql(3029671449.2225723);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the seventh row\r",
							"pm.test('Validating Net Pre Cat Loss In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Net Pre Cat Loss']).to.eql(3029671449.2225723);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the seventh row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Net of Fac Exposed Limit']).to.eql(4390648026.749996);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the seventh row\r",
							"pm.test('Validating Net of Fac Loss In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Net of Fac Loss']).to.eql(4390648026.749996);\r",
							"});\r",
							"\r",
							"// Assertion for State in the seventh row\r",
							"pm.test('Validating State In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['State']).to.eql(\"GA\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the seventh row\r",
							"pm.test('Validating TIV In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['TIV']).to.eql(19375763458);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the seventh row\r",
							"pm.test('Validating Treaty Exposed Limit In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Treaty Exposed Limit']).to.eql(1360976577.5274248);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the seventh row\r",
							"pm.test('Validating Treaty Loss In Seventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Treaty Loss']).to.eql(1360976577.5274248);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the eighth row\r",
							"pm.test('Validating #Assets In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['#Assets']).to.eql(3647);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the eighth row\r",
							"pm.test('Validating #Contracts In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['#Contracts']).to.eql(557);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the eighth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['ContractLoss_Value All Types_EL']).to.eql(4258100678.750007);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the eighth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['ContractLoss_Value All Types_GL']).to.eql(4258100678.750007);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the eighth row\r",
							"pm.test('Validating Country In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the eighth row\r",
							"pm.test('Validating Fac Exposed Limit In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Fac Exposed Limit']).to.eql(28000000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the eighth row\r",
							"pm.test('Validating GroundUpLoss In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['GroundUpLoss']).to.eql(18714911577);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the eighth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Net Pre Cat Exposed Limit']).to.eql(2913316931.9732647);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the eighth row\r",
							"pm.test('Validating Net Pre Cat Loss In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Net Pre Cat Loss']).to.eql(2913316931.9732647);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the eighth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Net of Fac Exposed Limit']).to.eql(4230100678.7500076);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the eighth row\r",
							"pm.test('Validating Net of Fac Loss In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Net of Fac Loss']).to.eql(4230100678.7500076);\r",
							"});\r",
							"\r",
							"// Assertion for State in the eighth row\r",
							"pm.test('Validating State In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['State']).to.eql(\"NC\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the eighth row\r",
							"pm.test('Validating TIV In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['TIV']).to.eql(18714911577);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the eighth row\r",
							"pm.test('Validating Treaty Exposed Limit In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Treaty Exposed Limit']).to.eql(1316783746.7767346);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the eighth row\r",
							"pm.test('Validating Treaty Loss In Eighth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Treaty Loss']).to.eql(1316783746.7767346);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the ninth row\r",
							"pm.test('Validating #Assets In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['#Assets']).to.eql(3123);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the ninth row\r",
							"pm.test('Validating #Contracts In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['#Contracts']).to.eql(488);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the ninth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['ContractLoss_Value All Types_EL']).to.eql(4098307373.0000005);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the ninth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['ContractLoss_Value All Types_GL']).to.eql(4098307373.0000005);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the ninth row\r",
							"pm.test('Validating Country In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the ninth row\r",
							"pm.test('Validating Fac Exposed Limit In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Fac Exposed Limit']).to.eql(21800000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the ninth row\r",
							"pm.test('Validating GroundUpLoss In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['GroundUpLoss']).to.eql(16325277672);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the ninth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Net Pre Cat Exposed Limit']).to.eql(2808101864.500686);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the ninth row\r",
							"pm.test('Validating Net Pre Cat Loss In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Net Pre Cat Loss']).to.eql(2808101864.500686);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the ninth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Net of Fac Exposed Limit']).to.eql(4076507373.0000005);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the ninth row\r",
							"pm.test('Validating Net of Fac Loss In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Net of Fac Loss']).to.eql(4076507373.0000005);\r",
							"});\r",
							"\r",
							"// Assertion for State in the ninth row\r",
							"pm.test('Validating State In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['State']).to.eql(\"IL\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the ninth row\r",
							"pm.test('Validating TIV In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['TIV']).to.eql(16325277672);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the ninth row\r",
							"pm.test('Validating Treaty Exposed Limit In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Treaty Exposed Limit']).to.eql(1268405508.4993181);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the ninth row\r",
							"pm.test('Validating Treaty Loss In Ninth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Treaty Loss']).to.eql(1268405508.4993181);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the tenth row\r",
							"pm.test('Validating #Assets In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['#Assets']).to.eql(2770);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the tenth row\r",
							"pm.test('Validating #Contracts In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['#Contracts']).to.eql(459);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the tenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['ContractLoss_Value All Types_EL']).to.eql(4007538439.2499995);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the tenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['ContractLoss_Value All Types_GL']).to.eql(4007538439.2499995);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the tenth row\r",
							"pm.test('Validating Country In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the tenth row\r",
							"pm.test('Validating Fac Exposed Limit In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Fac Exposed Limit']).to.eql(21000000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the tenth row\r",
							"pm.test('Validating GroundUpLoss In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['GroundUpLoss']).to.eql(14653454982);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the tenth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Net Pre Cat Exposed Limit']).to.eql(2747520714.5179615);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the tenth row\r",
							"pm.test('Validating Net Pre Cat Loss In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Net Pre Cat Loss']).to.eql(2747520714.5179615);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the tenth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Net of Fac Exposed Limit']).to.eql(3986538439.25);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the tenth row\r",
							"pm.test('Validating Net of Fac Loss In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Net of Fac Loss']).to.eql(3986538439.25);\r",
							"});\r",
							"\r",
							"// Assertion for State in the tenth row\r",
							"pm.test('Validating State In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['State']).to.eql(\"NJ\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the tenth row\r",
							"pm.test('Validating TIV In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['TIV']).to.eql(14653454982);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the tenth row\r",
							"pm.test('Validating Treaty Exposed Limit In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Treaty Exposed Limit']).to.eql(1239017724.7320316);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the tenth row\r",
							"pm.test('Validating Treaty Loss In Tenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Treaty Loss']).to.eql(1239017724.7320316);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the eleventh row\r",
							"pm.test('Validating #Assets In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['#Assets']).to.eql(2431);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the eleventh row\r",
							"pm.test('Validating #Contracts In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['#Contracts']).to.eql(425);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the eleventh row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['ContractLoss_Value All Types_EL']).to.eql(3776746558.249997);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the eleventh row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['ContractLoss_Value All Types_GL']).to.eql(3776746558.249997);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the eleventh row\r",
							"pm.test('Validating Country In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the eleventh row\r",
							"pm.test('Validating Fac Exposed Limit In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Fac Exposed Limit']).to.eql(19300000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the eleventh row\r",
							"pm.test('Validating GroundUpLoss In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['GroundUpLoss']).to.eql(12956603035);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the eleventh row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Net Pre Cat Exposed Limit']).to.eql(2589652482.16378);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the eleventh row\r",
							"pm.test('Validating Net Pre Cat Loss In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Net Pre Cat Loss']).to.eql(2589652482.16378);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the eleventh row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Net of Fac Exposed Limit']).to.eql(3757446558.249997);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the eleventh row\r",
							"pm.test('Validating Net of Fac Loss In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Net of Fac Loss']).to.eql(3757446558.249997);\r",
							"});\r",
							"\r",
							"// Assertion for State in the eleventh row\r",
							"pm.test('Validating State In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['State']).to.eql(\"CO\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the eleventh row\r",
							"pm.test('Validating TIV In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['TIV']).to.eql(12956603035);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the eleventh row\r",
							"pm.test('Validating Treaty Exposed Limit In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Treaty Exposed Limit']).to.eql(1167794076.0862253);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the eleventh row\r",
							"pm.test('Validating Treaty Loss In Eleventh Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Treaty Loss']).to.eql(1167794076.0862253);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the twelfth row\r",
							"pm.test('Validating #Assets In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['#Assets']).to.eql(2646);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the twelfth row\r",
							"pm.test('Validating #Contracts In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['#Contracts']).to.eql(406);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the twelfth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['ContractLoss_Value All Types_EL']).to.eql(3661749182.000005);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the twelfth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['ContractLoss_Value All Types_GL']).to.eql(3661749182.000005);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the twelfth row\r",
							"pm.test('Validating Country In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the twelfth row\r",
							"pm.test('Validating Fac Exposed Limit In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Fac Exposed Limit']).to.eql(18800000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the twelfth row\r",
							"pm.test('Validating GroundUpLoss In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['GroundUpLoss']).to.eql(13824863510);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the twelfth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Net Pre Cat Exposed Limit']).to.eql(2512422490.8510423);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the twelfth row\r",
							"pm.test('Validating Net Pre Cat Loss In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Net Pre Cat Loss']).to.eql(2512422490.8510423);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the twelfth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Net of Fac Exposed Limit']).to.eql(3642949182.0000043);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the twelfth row\r",
							"pm.test('Validating Net of Fac Loss In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Net of Fac Loss']).to.eql(3642949182.0000043);\r",
							"});\r",
							"\r",
							"// Assertion for State in the twelfth row\r",
							"pm.test('Validating State In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['State']).to.eql(\"SC\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the twelfth row\r",
							"pm.test('Validating TIV In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['TIV']).to.eql(13824863510);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the twelfth row\r",
							"pm.test('Validating Treaty Exposed Limit In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Treaty Exposed Limit']).to.eql(1130526691.1489584);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the twelfth row\r",
							"pm.test('Validating Treaty Loss In Twelfth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Treaty Loss']).to.eql(1130526691.1489584);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the thirteenth row\r",
							"pm.test('Validating #Assets In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['#Assets']).to.eql(2527);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the thirteenth row\r",
							"pm.test('Validating #Contracts In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['#Contracts']).to.eql(407);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the thirteenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['ContractLoss_Value All Types_EL']).to.eql(3656717735.7499967);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the thirteenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['ContractLoss_Value All Types_GL']).to.eql(3656717735.7499967);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the thirteenth row\r",
							"pm.test('Validating Country In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the thirteenth row\r",
							"pm.test('Validating Fac Exposed Limit In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Fac Exposed Limit']).to.eql(18100000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the thirteenth row\r",
							"pm.test('Validating GroundUpLoss In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['GroundUpLoss']).to.eql(13228744555);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the thirteenth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Net Pre Cat Exposed Limit']).to.eql(2511099292.4205503);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the thirteenth row\r",
							"pm.test('Validating Net Pre Cat Loss In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Net Pre Cat Loss']).to.eql(2511099292.4205503);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the thirteenth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Net of Fac Exposed Limit']).to.eql(3638617735.7499976);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the thirteenth row\r",
							"pm.test('Validating Net of Fac Loss In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Net of Fac Loss']).to.eql(3638617735.7499976);\r",
							"});\r",
							"\r",
							"// Assertion for State in the thirteenth row\r",
							"pm.test('Validating State In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['State']).to.eql(\"WA\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the thirteenth row\r",
							"pm.test('Validating TIV In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['TIV']).to.eql(13228744555);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the thirteenth row\r",
							"pm.test('Validating Treaty Exposed Limit In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Treaty Exposed Limit']).to.eql(1127518443.3294501);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the thirteenth row\r",
							"pm.test('Validating Treaty Loss In Thirteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Treaty Loss']).to.eql(1127518443.3294501);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the fourteenth row\r",
							"pm.test('Validating #Assets In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['#Assets']).to.eql(2104);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the fourteenth row\r",
							"pm.test('Validating #Contracts In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['#Contracts']).to.eql(362);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the fourteenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['ContractLoss_Value All Types_EL']).to.eql(3464967157.7499948);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the fourteenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['ContractLoss_Value All Types_GL']).to.eql(3464967157.7499948);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the fourteenth row\r",
							"pm.test('Validating Country In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the fourteenth row\r",
							"pm.test('Validating Fac Exposed Limit In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Fac Exposed Limit']).to.eql(17600000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the fourteenth row\r",
							"pm.test('Validating GroundUpLoss In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['GroundUpLoss']).to.eql(11036270087);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the fourteenth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Net Pre Cat Exposed Limit']).to.eql(2380131942.010271);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the fourteenth row\r",
							"pm.test('Validating Net Pre Cat Loss In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Net Pre Cat Loss']).to.eql(2380131942.010271);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the fourteenth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Net of Fac Exposed Limit']).to.eql(3447367157.7499948);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the fourteenth row\r",
							"pm.test('Validating Net of Fac Loss In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Net of Fac Loss']).to.eql(3447367157.7499948);\r",
							"});\r",
							"\r",
							"// Assertion for State in the fourteenth row\r",
							"pm.test('Validating State In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['State']).to.eql(\"PA\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the fourteenth row\r",
							"pm.test('Validating TIV In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['TIV']).to.eql(11036270087);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the fourteenth row\r",
							"pm.test('Validating Treaty Exposed Limit In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Treaty Exposed Limit']).to.eql(1067235215.7397274);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the fourteenth row\r",
							"pm.test('Validating Treaty Loss In Fourteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Treaty Loss']).to.eql(1067235215.7397274);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the fifteenth row\r",
							"pm.test('Validating #Assets In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['#Assets']).to.eql(1923);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the fifteenth row\r",
							"pm.test('Validating #Contracts In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['#Contracts']).to.eql(300);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the fifteenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['ContractLoss_Value All Types_EL']).to.eql(3317064481.249997);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the fifteenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['ContractLoss_Value All Types_GL']).to.eql(3317064481.249997);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the fifteenth row\r",
							"pm.test('Validating Country In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the fifteenth row\r",
							"pm.test('Validating Fac Exposed Limit In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Fac Exposed Limit']).to.eql(13600000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the fifteenth row\r",
							"pm.test('Validating GroundUpLoss In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['GroundUpLoss']).to.eql(10197092489);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the fifteenth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Net Pre Cat Exposed Limit']).to.eql(2273976666.161192);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the fifteenth row\r",
							"pm.test('Validating Net Pre Cat Loss In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Net Pre Cat Loss']).to.eql(2273976666.161192);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the fifteenth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Net of Fac Exposed Limit']).to.eql(3303464481.249997);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the fifteenth row\r",
							"pm.test('Validating Net of Fac Loss In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Net of Fac Loss']).to.eql(3303464481.249997);\r",
							"});\r",
							"\r",
							"// Assertion for State in the fifteenth row\r",
							"pm.test('Validating State In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['State']).to.eql(\"LA\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the fifteenth row\r",
							"pm.test('Validating TIV In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['TIV']).to.eql(10197092489);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the fifteenth row\r",
							"pm.test('Validating Treaty Exposed Limit In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Treaty Exposed Limit']).to.eql(1029487815.0888028);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the fifteenth row\r",
							"pm.test('Validating Treaty Loss In Fifteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Treaty Loss']).to.eql(1029487815.0888028);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the sixteenth row\r",
							"pm.test('Validating #Assets In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['#Assets']).to.eql(1462);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the sixteenth row\r",
							"pm.test('Validating #Contracts In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['#Contracts']).to.eql(287);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the sixteenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['ContractLoss_Value All Types_EL']).to.eql(3213234969.2500005);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the sixteenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['ContractLoss_Value All Types_GL']).to.eql(3213234969.2500005);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the sixteenth row\r",
							"pm.test('Validating Country In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the sixteenth row\r",
							"pm.test('Validating Fac Exposed Limit In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Fac Exposed Limit']).to.eql(12400000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the sixteenth row\r",
							"pm.test('Validating GroundUpLoss In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['GroundUpLoss']).to.eql(7736505072);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the sixteenth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Net Pre Cat Exposed Limit']).to.eql(2212412277.773065);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the sixteenth row\r",
							"pm.test('Validating Net Pre Cat Loss In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Net Pre Cat Loss']).to.eql(2212412277.773065);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the sixteenth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Net of Fac Exposed Limit']).to.eql(3200834969.2500005);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the sixteenth row\r",
							"pm.test('Validating Net of Fac Loss In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Net of Fac Loss']).to.eql(3200834969.2500005);\r",
							"});\r",
							"\r",
							"// Assertion for State in the sixteenth row\r",
							"pm.test('Validating State In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['State']).to.eql(\"RI\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the sixteenth row\r",
							"pm.test('Validating TIV In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['TIV']).to.eql(7736505072);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the sixteenth row\r",
							"pm.test('Validating Treaty Exposed Limit In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Treaty Exposed Limit']).to.eql(988422691.4769316);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the sixteenth row\r",
							"pm.test('Validating Treaty Loss In Sixteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Treaty Loss']).to.eql(988422691.4769316);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the seventeenth row\r",
							"pm.test('Validating #Assets In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['#Assets']).to.eql(1788);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the seventeenth row\r",
							"pm.test('Validating #Contracts In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['#Contracts']).to.eql(269);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the seventeenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['ContractLoss_Value All Types_EL']).to.eql(3207109098.500002);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the seventeenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['ContractLoss_Value All Types_GL']).to.eql(3207109098.500002);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the seventeenth row\r",
							"pm.test('Validating Country In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the seventeenth row\r",
							"pm.test('Validating Fac Exposed Limit In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Fac Exposed Limit']).to.eql(13800000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the seventeenth row\r",
							"pm.test('Validating GroundUpLoss In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['GroundUpLoss']).to.eql(9622123650);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the seventeenth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Net Pre Cat Exposed Limit']).to.eql(2203783033.447347);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the seventeenth row\r",
							"pm.test('Validating Net Pre Cat Loss In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Net Pre Cat Loss']).to.eql(2203783033.447347);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the seventeenth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Net of Fac Exposed Limit']).to.eql(3193309098.5000024);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the seventeenth row\r",
							"pm.test('Validating Net of Fac Loss In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Net of Fac Loss']).to.eql(3193309098.5000024);\r",
							"});\r",
							"\r",
							"// Assertion for State in the seventeenth row\r",
							"pm.test('Validating State In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['State']).to.eql(\"TN\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the seventeenth row\r",
							"pm.test('Validating TIV In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['TIV']).to.eql(9622123650);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the seventeenth row\r",
							"pm.test('Validating Treaty Exposed Limit In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Treaty Exposed Limit']).to.eql(989526065.0526454);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the seventeenth row\r",
							"pm.test('Validating Treaty Loss In Seventeenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Treaty Loss']).to.eql(989526065.0526454);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the eighteenth row\r",
							"pm.test('Validating #Assets In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['#Assets']).to.eql(1785);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the eighteenth row\r",
							"pm.test('Validating #Contracts In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['#Contracts']).to.eql(289);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the eighteenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['ContractLoss_Value All Types_EL']).to.eql(3175402951.749993);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the eighteenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['ContractLoss_Value All Types_GL']).to.eql(3175402951.749993);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the eighteenth row\r",
							"pm.test('Validating Country In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the eighteenth row\r",
							"pm.test('Validating Fac Exposed Limit In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Fac Exposed Limit']).to.eql(13100000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the eighteenth row\r",
							"pm.test('Validating GroundUpLoss In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['GroundUpLoss']).to.eql(9202036248);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the eighteenth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Net Pre Cat Exposed Limit']).to.eql(2181460261.331406);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the eighteenth row\r",
							"pm.test('Validating Net Pre Cat Loss In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Net Pre Cat Loss']).to.eql(2181460261.331406);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the eighteenth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Net of Fac Exposed Limit']).to.eql(3162302951.749993);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the eighteenth row\r",
							"pm.test('Validating Net of Fac Loss In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Net of Fac Loss']).to.eql(3162302951.749993);\r",
							"});\r",
							"\r",
							"// Assertion for State in the eighteenth row\r",
							"pm.test('Validating State In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['State']).to.eql(\"MD\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the eighteenth row\r",
							"pm.test('Validating TIV In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['TIV']).to.eql(9202036248);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the eighteenth row\r",
							"pm.test('Validating Treaty Exposed Limit In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Treaty Exposed Limit']).to.eql(980842690.4185995);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the eighteenth row\r",
							"pm.test('Validating Treaty Loss In Eighteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Treaty Loss']).to.eql(980842690.4185995);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the nineteenth row\r",
							"pm.test('Validating #Assets In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['#Assets']).to.eql(1538);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the nineteenth row\r",
							"pm.test('Validating #Contracts In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['#Contracts']).to.eql(265);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the nineteenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['ContractLoss_Value All Types_EL']).to.eql(3163056861.500002);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the nineteenth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['ContractLoss_Value All Types_GL']).to.eql(3163056861.500002);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the nineteenth row\r",
							"pm.test('Validating Country In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the nineteenth row\r",
							"pm.test('Validating Fac Exposed Limit In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Fac Exposed Limit']).to.eql(11200000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the nineteenth row\r",
							"pm.test('Validating GroundUpLoss In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['GroundUpLoss']).to.eql(7998160186);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the nineteenth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Net Pre Cat Exposed Limit']).to.eql(2170426702.0425863);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the nineteenth row\r",
							"pm.test('Validating Net Pre Cat Loss In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Net Pre Cat Loss']).to.eql(2170426702.0425863);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the nineteenth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Net of Fac Exposed Limit']).to.eql(3151856861.500002);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the nineteenth row\r",
							"pm.test('Validating Net of Fac Loss In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Net of Fac Loss']).to.eql(3151856861.500002);\r",
							"});\r",
							"\r",
							"// Assertion for State in the nineteenth row\r",
							"pm.test('Validating State In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['State']).to.eql(\"MI\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the nineteenth row\r",
							"pm.test('Validating TIV In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['TIV']).to.eql(7998160186);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the nineteenth row\r",
							"pm.test('Validating Treaty Exposed Limit In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Treaty Exposed Limit']).to.eql(981430159.4574136);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the nineteenth row\r",
							"pm.test('Validating Treaty Loss In Nineteenth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Treaty Loss']).to.eql(981430159.4574136);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets in the twentieth row\r",
							"pm.test('Validating #Assets In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['#Assets']).to.eql(1761);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts in the twentieth row\r",
							"pm.test('Validating #Contracts In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['#Contracts']).to.eql(261);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL in the twentieth row\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['ContractLoss_Value All Types_EL']).to.eql(3125641958.7500043);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL in the twentieth row\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['ContractLoss_Value All Types_GL']).to.eql(3125641958.7500043);\r",
							"});\r",
							"\r",
							"// Assertion for Country in the twentieth row\r",
							"pm.test('Validating Country In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Country']).to.eql(\"US\");\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit in the twentieth row\r",
							"pm.test('Validating Fac Exposed Limit In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Fac Exposed Limit']).to.eql(11700000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss in the twentieth row\r",
							"pm.test('Validating GroundUpLoss In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['GroundUpLoss']).to.eql(9217516089);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit in the twentieth row\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Net Pre Cat Exposed Limit']).to.eql(2149212753.877367);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss in the twentieth row\r",
							"pm.test('Validating Net Pre Cat Loss In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Net Pre Cat Loss']).to.eql(2149212753.877367);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit in the twentieth row\r",
							"pm.test('Validating Net of Fac Exposed Limit In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Net of Fac Exposed Limit']).to.eql(3113941958.750005);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss in the twentieth row\r",
							"pm.test('Validating Net of Fac Loss In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Net of Fac Loss']).to.eql(3113941958.750005);\r",
							"});\r",
							"\r",
							"// Assertion for State in the twentieth row\r",
							"pm.test('Validating State In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['State']).to.eql(\"MN\");\r",
							"});\r",
							"\r",
							"// Assertion for TIV in the twentieth row\r",
							"pm.test('Validating TIV In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['TIV']).to.eql(9217516089);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit in the twentieth row\r",
							"pm.test('Validating Treaty Exposed Limit In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Treaty Exposed Limit']).to.eql(964729204.8726311);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss in the twentieth row\r",
							"pm.test('Validating Treaty Loss In Twentieth Row for Geo Spider without event exposure Eigen Sample EQTO', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Treaty Loss']).to.eql(964729204.8726311);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{v4tokenAlpha}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"requestId\": \"{{requestId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-data-by-requestid",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-data-by-requestid"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "requestID",
			"value": ""
		},
		{
			"key": "{{State}}",
			"value": "",
			"type": "string"
		},
		{
			"key": "v4tokenAlpha",
			"value": ""
		},
		{
			"key": "requestId",
			"value": ""
		}
	]
}