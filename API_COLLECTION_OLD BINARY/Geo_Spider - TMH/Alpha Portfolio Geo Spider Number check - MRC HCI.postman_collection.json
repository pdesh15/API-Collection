{
	"info": {
		"_postman_id": "8b94e15c-410f-4107-b1ad-e28a0940a4b0",
		"name": "Alpha Portfolio Geo Spider Number check - MRC HCI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33412147"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"//postman.setEnvironmentVariable(\"token\", jsonData.token);\r",
							"pm.collectionVariables.set(\"v4tokenAlpha\", jsonData.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://prism-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Portfolio geo-spider-analysis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"//postman.setEnvironmentVariable(\"token\", jsonData.token);\r",
							"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{v4tokenAlpha}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 26234,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"IncludeAllContracts\": true,\r\n    \"ApplyAllPerils\": false,\r\n    \"CurrencyCode\": \"USD\",\r\n    \"ExposureFilterSets\": {\r\n        \"FilterList\": [\r\n            {\r\n                \"AndOr\": \"AND\",\r\n                \"FilterList\": [\r\n                    {\r\n                        \"AssetType\": \"Site\",\r\n                        \"Attribute\": \"Cause Of Loss\",\r\n                        \"Operator\": \"EQ\",\r\n                        \"Value\": \"EQXX\",\r\n                        \"AndOr\": \"OR\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"AccumulateByAttribute\": {\r\n        \"AdditionalMeasures\": [\r\n            \"#Assets\",\r\n            \"#Contracts\",\r\n            \"TIV\",\r\n            \"GroundUpLoss\",\r\n            \"ContractLoss_Value All Types_EL\",\r\n            \"ContractLoss_Value All Types_GL\",\r\n            \"Gross Exposed Limit\",\r\n            \"Net Pre Cat Exposed Limit\",\r\n            \"Net Pre Cat Loss\",\r\n            \"Net of Fac Exposed Limit\",\r\n            \"Net of Fac Loss\",\r\n            \"Fac Exposed Limit\",\r\n            \"Fac loss\",\r\n            \"Treaty Exposed Limit\",\r\n            \"Treaty Loss\"\r\n        ],\r\n        \"Attributes\": [\r\n            \"State\",\r\n            \"Country\"\r\n        ],\r\n        \"Count\": 20,\r\n        \"Measure\": \"ContractLoss_Value All Types_EL\",\r\n        \"Peril\": \"Earthquake\",\r\n        \"SubPeril\": \"Shake\",\r\n        \"Operator\": \"GT\",\r\n        \"Threshold\": 0,\r\n        \"ThresholdEnd\": 0,\r\n        \"Contribution\": [\r\n            {\r\n                \"GroupByMeasures\": [\r\n                    \"TIV\"\r\n                ],\r\n                \"GroupByAttributes\": [\r\n                    \"Geocoded Resolution\",\r\n                    \"Country\"\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://prism-api.eigenrisk.com/analysis/geo-spider-analysis",
					"protocol": "https",
					"host": [
						"prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"geo-spider-analysis"
					]
				}
			},
			"response": []
		},
		{
			"name": "Portfolio-geo-spider-progress",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"console.log(responseJson);\r",
							"\r",
							"if (responseJson.hasOwnProperty('error')) {\r",
							"    if (responseJson.error === \"Request unauthorized\") {\r",
							"        console.log(\"Authentication Failed. Re-running the Refresh token API\");\r",
							"        pm.collectionVariables.set(\"Flag\", \"true\");\r",
							"        postman.setNextRequest(\"Refresh token\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1.7 minutes before next request.\");\r",
							"        }, 100000);\r",
							"    } else if (responseJson.error === \"Please check the request id. No status available.\") {\r",
							"        console.log(\"Facing a crash. Starting the same iteration\");\r",
							"        postman.setNextRequest(\"Authentication and Authorization\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 15 minutes before next request.\");\r",
							"        }, 900000);\r",
							"    } else {\r",
							"        console.log(\"Authentication Failed. Re-running the Refresh token API\");\r",
							"        postman.setNextRequest(\"Refresh token\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1.7 minutes before next request.\");\r",
							"        }, 100000);\r",
							"    }\r",
							"} else if (responseJson.hasOwnProperty('Stage')) {\r",
							"    if (responseJson.Stage === \"In Queue\") {\r",
							"        console.log(\"Analysis is In Queue. Running the same API\");\r",
							"        postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 2 minute before next request.\");\r",
							"        }, 120000);\r",
							"    } else if (responseJson.Stage === \"Started\") {\r",
							"        console.log(\"Analysis is Started. Running the same API\");\r",
							"        postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1 minute before next request.\");\r",
							"        }, 60000);\r",
							"    } else if (responseJson.Percentage === 100) {\r",
							"        console.log(\"Success! Moving to next API\");\r",
							"        postman.setNextRequest(\"get-data-by-requestid\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1 minute before next request.\");\r",
							"        }, 60000);\r",
							"    } else if (responseJson.Stage === \"Computing accumulations\") {\r",
							"        console.log(\"Computation still not completed. Running the same API\");\r",
							"        postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1 minute before next request.\");\r",
							"        }, 60000);\r",
							"    } else if (responseJson.Message === \"Unable to connect to Geo server\") {\r",
							"        console.log(\"Facing a crash. Starting the same iteration\");\r",
							"        postman.setNextRequest(\"Authentication and Authorization\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 15 minutes before next request.\");\r",
							"        }, 900000);\r",
							"    } else if (responseJson.Message === \"No server available to run the analysis\") {\r",
							"        console.log(\"Facing a crash. Starting the same iteration\");\r",
							"        postman.setNextRequest(\"Authentication and Authorization\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 15 minutes before next request.\");\r",
							"        }, 900000);\r",
							"    } else if (responseJson.Stage === \"Failed!\") {\r",
							"        console.log(\"Facing a crash. Starting the same iteration\");\r",
							"        postman.setNextRequest(\"Authentication and Authorization\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 15 minutes before next request.\");\r",
							"        }, 900000);\r",
							"    }\r",
							"     else {\r",
							"        console.log(\"Not Completed! Running the same API\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 5 minutes before next request.\");\r",
							"        }, 300000);\r",
							"        postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"    }\r",
							"}\r",
							"else\r",
							"{ \r",
							"    console.log(\"Not Completed ! Runnnig same API\");\r",
							"    setTimeout(function(){\r",
							"          console.log(\"Sleeping for 5  minutes before next request.\");\r",
							"  }, 300000);\r",
							"     postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{v4tokenAlpha}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"requestId\": \"{{requestId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://prism-api.eigenrisk.com/analysis/geo-spider-progress",
					"protocol": "https",
					"host": [
						"prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"geo-spider-progress"
					]
				}
			},
			"response": []
		},
		{
			"name": "Refresh token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"//postman.setEnvironmentVariable(\"token\", jsonData.token);\r",
							"pm.collectionVariables.set(\"v4tokenAlpha\", jsonData.token);\r",
							"postman.setNextRequest(\"Portfolio-geo-spider-progress\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-data-by-requestid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log('-------- TOP 20 Accumulations by Gross Exposed Limit >0 --------')\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['#Assets']).to.eql(150);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['#Contracts']).to.eql(15);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['TIV']).to.eql(3048903691.773431);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['GroundUpLoss']).to.eql(3048903691.773431);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['ContractLoss_Value All Types_EL']).to.eql(39705165.903028466);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['ContractLoss_Value All Types_GL']).to.eql(39705165.903028466);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Net Pre Cat Exposed Limit']).to.eql(31999569.797927007);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Net Pre Cat Loss']).to.eql(31999569.797927007);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Net of Fac Exposed Limit']).to.eql(39705165.903028466);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Net of Fac Loss']).to.eql(39705165.903028466);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Treaty Exposed Limit']).to.eql(7705596.105101477);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In First Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Treaty Loss']).to.eql(7705596.105101477);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['#Assets']).to.eql(36);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['#Contracts']).to.eql(7);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['TIV']).to.eql(2441290023.44);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['GroundUpLoss']).to.eql(2441290023.44);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['ContractLoss_Value All Types_EL']).to.eql(37733554.3738942);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['ContractLoss_Value All Types_GL']).to.eql(37733554.3738942);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Net Pre Cat Exposed Limit']).to.eql(30186843.499115355);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Net Pre Cat Loss']).to.eql(30186843.499115355);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Net of Fac Exposed Limit']).to.eql(37733554.3738942);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Net of Fac Loss']).to.eql(37733554.3738942);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Treaty Exposed Limit']).to.eql(7546710.87477884);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Second Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Treaty Loss']).to.eql(7546710.87477884);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['#Assets']).to.eql(23);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['#Contracts']).to.eql(8);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['TIV']).to.eql(2287268621.4787216);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['GroundUpLoss']).to.eql(2287268621.4787216);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['ContractLoss_Value All Types_EL']).to.eql(26102040.900343224);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['ContractLoss_Value All Types_GL']).to.eql(26102040.900343224);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Net Pre Cat Exposed Limit']).to.eql(20881632.720274586);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Net Pre Cat Loss']).to.eql(20881632.720274586);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Net of Fac Exposed Limit']).to.eql(26102040.900343224);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Net of Fac Loss']).to.eql(26102040.900343224);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Treaty Exposed Limit']).to.eql(5220408.180068647);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Third Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Treaty Loss']).to.eql(5220408.180068647);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['#Assets']).to.eql(3);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['#Contracts']).to.eql(3);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['TIV']).to.eql(879702321.4000001);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['GroundUpLoss']).to.eql(879702321.4000001);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['ContractLoss_Value All Types_EL']).to.eql(20217857.417609993);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['ContractLoss_Value All Types_GL']).to.eql(20217857.417609993);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Net Pre Cat Exposed Limit']).to.eql(16174285.934087995);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Net Pre Cat Loss']).to.eql(16174285.934087995);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Net of Fac Exposed Limit']).to.eql(20217857.417609993);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Net of Fac Loss']).to.eql(20217857.417609993);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Treaty Exposed Limit']).to.eql(4043571.483521999);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Fourth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Treaty Loss']).to.eql(4043571.483521999);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['#Assets']).to.eql(35);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['#Contracts']).to.eql(10);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['TIV']).to.eql(1242111013.950059);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['GroundUpLoss']).to.eql(1242111013.950059);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['ContractLoss_Value All Types_EL']).to.eql(19400893.524541326);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['ContractLoss_Value All Types_GL']).to.eql(19400893.524541326);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Net Pre Cat Exposed Limit']).to.eql(15520714.81963306);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Net Pre Cat Loss']).to.eql(15520714.81963306);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Net of Fac Exposed Limit']).to.eql(19400893.524541326);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Net of Fac Loss']).to.eql(19400893.524541326);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Treaty Exposed Limit']).to.eql(3880178.7049082653);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Fifth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Treaty Loss']).to.eql(3880178.7049082653);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['#Assets']).to.eql(27);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['#Contracts']).to.eql(4);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['TIV']).to.eql(470768864.2332363);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['GroundUpLoss']).to.eql(470768864.2332363);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['ContractLoss_Value All Types_EL']).to.eql(18938604.142432258);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['ContractLoss_Value All Types_GL']).to.eql(18938604.142432258);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Net Pre Cat Exposed Limit']).to.eql(15150883.313945808);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Net Pre Cat Loss']).to.eql(15150883.313945808);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Net of Fac Exposed Limit']).to.eql(18938604.142432258);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Net of Fac Loss']).to.eql(18938604.142432258);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Treaty Exposed Limit']).to.eql(3787720.828486452);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Sixth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Treaty Loss']).to.eql(3787720.828486452);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['#Assets']).to.eql(13);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['#Contracts']).to.eql(2);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['TIV']).to.eql(591149024);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['GroundUpLoss']).to.eql(591149024);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['ContractLoss_Value All Types_EL']).to.eql(18182375.517860055);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['ContractLoss_Value All Types_GL']).to.eql(18182375.517860055);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Net Pre Cat Exposed Limit']).to.eql(14545900.414288044);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Net Pre Cat Loss']).to.eql(14545900.414288044);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Net of Fac Exposed Limit']).to.eql(18182375.517860055);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Net of Fac Loss']).to.eql(18182375.517860055);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Treaty Exposed Limit']).to.eql(3636475.103572011);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Seventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Treaty Loss']).to.eql(3636475.103572011);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['#Assets']).to.eql(27);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['#Contracts']).to.eql(6);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['TIV']).to.eql(1231262950.6332116);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['GroundUpLoss']).to.eql(1231262950.6332116);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['ContractLoss_Value All Types_EL']).to.eql(17006232.262027852);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['ContractLoss_Value All Types_GL']).to.eql(17006232.262027852);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Net Pre Cat Exposed Limit']).to.eql(13604985.80962228);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Net Pre Cat Loss']).to.eql(13604985.80962228);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Net of Fac Exposed Limit']).to.eql(17006232.262027852);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Net of Fac Loss']).to.eql(17006232.262027852);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Treaty Exposed Limit']).to.eql(3401246.452405571);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Eighth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Treaty Loss']).to.eql(3401246.452405571);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['#Assets']).to.eql(12);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['#Contracts']).to.eql(7);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['TIV']).to.eql(721424254.72);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['GroundUpLoss']).to.eql(721424254.72);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['ContractLoss_Value All Types_EL']).to.eql(16148271.961611269);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['ContractLoss_Value All Types_GL']).to.eql(16148271.961611269);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Net Pre Cat Exposed Limit']).to.eql(12918617.569289017);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Net Pre Cat Loss']).to.eql(12918617.569289017);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Net of Fac Exposed Limit']).to.eql(16148271.961611269);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Net of Fac Loss']).to.eql(16148271.961611269);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Treaty Exposed Limit']).to.eql(3229654.3923222544);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Ninth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Treaty Loss']).to.eql(3229654.3923222544);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['#Assets']).to.eql(2);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['#Contracts']).to.eql(2);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['TIV']).to.eql(244226730);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['GroundUpLoss']).to.eql(244226730);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['ContractLoss_Value All Types_EL']).to.eql(15367613.494801173);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['ContractLoss_Value All Types_GL']).to.eql(15367613.494801173);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Net Pre Cat Exposed Limit']).to.eql(12294090.795840938);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Net Pre Cat Loss']).to.eql(12294090.795840938);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Net of Fac Exposed Limit']).to.eql(15367613.494801173);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Net of Fac Loss']).to.eql(15367613.494801173);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Treaty Exposed Limit']).to.eql(3073522.698960235);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Tenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Treaty Loss']).to.eql(3073522.698960235);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['#Assets']).to.eql(1);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['#Contracts']).to.eql(1);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['TIV']).to.eql(356500000);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['GroundUpLoss']).to.eql(356500000);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['ContractLoss_Value All Types_EL']).to.eql(14531405.739486216);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['ContractLoss_Value All Types_GL']).to.eql(14531405.739486216);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Net Pre Cat Exposed Limit']).to.eql(11625124.591588972);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Net Pre Cat Loss']).to.eql(11625124.591588972);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Net of Fac Exposed Limit']).to.eql(14531405.739486216);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Net of Fac Loss']).to.eql(14531405.739486216);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Treaty Exposed Limit']).to.eql(2906281.1478972435);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Eleventh Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Treaty Loss']).to.eql(2906281.1478972435);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['#Assets']).to.eql(41);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['#Contracts']).to.eql(6);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['TIV']).to.eql(700672008.12);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['GroundUpLoss']).to.eql(700672008.12);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['ContractLoss_Value All Types_EL']).to.eql(14484623.960736955);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['ContractLoss_Value All Types_GL']).to.eql(14484623.960736955);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Net Pre Cat Exposed Limit']).to.eql(11587699.16858957);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Net Pre Cat Loss']).to.eql(11587699.16858957);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Net of Fac Exposed Limit']).to.eql(14484623.960736955);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Net of Fac Loss']).to.eql(14484623.960736955);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Treaty Exposed Limit']).to.eql(2896924.7921473924);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Twelfth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Treaty Loss']).to.eql(2896924.7921473924);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['#Assets']).to.eql(3);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['#Contracts']).to.eql(3);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['TIV']).to.eql(588311544.6800001);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['GroundUpLoss']).to.eql(588311544.6800001);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['ContractLoss_Value All Types_EL']).to.eql(14463366.318307374);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['ContractLoss_Value All Types_GL']).to.eql(14463366.318307374);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Net Pre Cat Exposed Limit']).to.eql(11570693.0546459);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Net Pre Cat Loss']).to.eql(11570693.0546459);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Net of Fac Exposed Limit']).to.eql(14463366.318307374);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Net of Fac Loss']).to.eql(14463366.318307374);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Treaty Exposed Limit']).to.eql(2892673.263661475);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Thirteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Treaty Loss']).to.eql(2892673.263661475);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['#Assets']).to.eql(7);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['#Contracts']).to.eql(5);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['TIV']).to.eql(1317706483.9333124);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['GroundUpLoss']).to.eql(1317706483.9333124);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['ContractLoss_Value All Types_EL']).to.eql(14298654.41151117);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['ContractLoss_Value All Types_GL']).to.eql(14298654.41151117);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Net Pre Cat Exposed Limit']).to.eql(11438923.529208936);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Net Pre Cat Loss']).to.eql(11438923.529208936);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Net of Fac Exposed Limit']).to.eql(14298654.41151117);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Net of Fac Loss']).to.eql(14298654.41151117);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Treaty Exposed Limit']).to.eql(2859730.882302234);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Fourteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Treaty Loss']).to.eql(2859730.882302234);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['#Assets']).to.eql(3);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['#Contracts']).to.eql(2);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['TIV']).to.eql(592020839);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['GroundUpLoss']).to.eql(592020839);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['ContractLoss_Value All Types_EL']).to.eql(14249999.821186066);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['ContractLoss_Value All Types_GL']).to.eql(14249999.821186066);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Net Pre Cat Exposed Limit']).to.eql(11399999.856948853);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Net Pre Cat Loss']).to.eql(11399999.856948853);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Net of Fac Exposed Limit']).to.eql(14249999.821186066);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Net of Fac Loss']).to.eql(14249999.821186066);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Treaty Exposed Limit']).to.eql(2849999.964237213);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Fifteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Treaty Loss']).to.eql(2849999.964237213);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['#Assets']).to.eql(2);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['#Contracts']).to.eql(2);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['TIV']).to.eql(683471226.57);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['GroundUpLoss']).to.eql(683471226.57);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['ContractLoss_Value All Types_EL']).to.eql(13750000);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['ContractLoss_Value All Types_GL']).to.eql(13750000);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Net Pre Cat Exposed Limit']).to.eql(11000000);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Net Pre Cat Loss']).to.eql(11000000);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Net of Fac Exposed Limit']).to.eql(13750000);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Net of Fac Loss']).to.eql(13750000);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Treaty Exposed Limit']).to.eql(2750000);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Sixteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Treaty Loss']).to.eql(2750000);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['#Assets']).to.eql(221);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['#Contracts']).to.eql(4);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['TIV']).to.eql(639967962.9022259);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['GroundUpLoss']).to.eql(639967962.9022259);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['ContractLoss_Value All Types_EL']).to.eql(12308334.535770552);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['ContractLoss_Value All Types_GL']).to.eql(12308334.535770552);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Net Pre Cat Exposed Limit']).to.eql(9846667.628616467);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Net Pre Cat Loss']).to.eql(9846667.628616467);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Net of Fac Exposed Limit']).to.eql(12308334.535770552);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Net of Fac Loss']).to.eql(12308334.535770552);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Treaty Exposed Limit']).to.eql(2461666.907154117);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Seventeenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Treaty Loss']).to.eql(2461666.907154117);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['#Assets']).to.eql(21);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['#Contracts']).to.eql(2);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['TIV']).to.eql(103094359.32);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['GroundUpLoss']).to.eql(103094359.32);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['ContractLoss_Value All Types_EL']).to.eql(11063100.241124628);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['ContractLoss_Value All Types_GL']).to.eql(11063100.241124628);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Net Pre Cat Exposed Limit']).to.eql(8850480.192899706);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Net Pre Cat Loss']).to.eql(8850480.192899706);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Net of Fac Exposed Limit']).to.eql(11063100.241124628);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Net of Fac Loss']).to.eql(11063100.241124628);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Treaty Exposed Limit']).to.eql(2212620.0482249265);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Eighteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Treaty Loss']).to.eql(2212620.0482249265);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['#Assets']).to.eql(4);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['#Contracts']).to.eql(3);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['TIV']).to.eql(500650736.1);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['GroundUpLoss']).to.eql(500650736.1);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['ContractLoss_Value All Types_EL']).to.eql(11001335.066618828);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['ContractLoss_Value All Types_GL']).to.eql(11001335.066618828);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Net Pre Cat Exposed Limit']).to.eql(8801068.053295063);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Net Pre Cat Loss']).to.eql(8801068.053295063);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Net of Fac Exposed Limit']).to.eql(11001335.066618828);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Net of Fac Loss']).to.eql(11001335.066618828);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Treaty Exposed Limit']).to.eql(2200267.0133237657);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Nineteenth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Treaty Loss']).to.eql(2200267.0133237657);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['#Assets']).to.eql(13);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['#Contracts']).to.eql(6);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['TIV']).to.eql(884875672.370286);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['GroundUpLoss']).to.eql(884875672.370286);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['ContractLoss_Value All Types_EL']).to.eql(10652784.507473987);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['ContractLoss_Value All Types_GL']).to.eql(10652784.507473987);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Net Pre Cat Exposed Limit']).to.eql(8522227.60597919);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Net Pre Cat Loss']).to.eql(8522227.60597919);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Net of Fac Exposed Limit']).to.eql(10652784.507473987);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Net of Fac Loss']).to.eql(10652784.507473987);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Treaty Exposed Limit']).to.eql(2130556.901494797);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Twentieth Row for Geo Spider without event exposure MRC_TME', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Treaty Loss']).to.eql(2130556.901494797);\r",
							"});\r",
							"\r",
							"//----------------------------Contribution -----------------------------------//\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{v4tokenAlpha}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"requestId\": \"{{requestId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://prism-api.eigenrisk.com/get-data-by-requestid",
					"protocol": "https",
					"host": [
						"prism-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-data-by-requestid"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "requestID",
			"value": ""
		},
		{
			"key": "{{State}}",
			"value": "",
			"type": "string"
		},
		{
			"key": "v4tokenAlpha",
			"value": ""
		},
		{
			"key": "requestId",
			"value": ""
		}
	]
}