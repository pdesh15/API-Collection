{
	"info": {
		"_postman_id": "bb7b3d15-1fab-402f-af32-05c55482a810",
		"name": "Alpha Portfolio Geo Spider Number check - MRC LDS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14426843",
		"_collection_link": "https://solar-shadow-896910.postman.co/workspace/Alpha-Api-suite~aabbbd6b-3012-4b9e-8f22-8aa975b28af1/collection/14426843-bb7b3d15-1fab-402f-af32-05c55482a810?action=share&source=collection_link&creator=14426843"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"//postman.setEnvironmentVariable(\"token\", jsonData.token);\r",
							"pm.collectionVariables.set(\"v4tokenAlpha\", jsonData.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Portfolio geo-spider-analysis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"//postman.setEnvironmentVariable(\"token\", jsonData.token);\r",
							"pm.collectionVariables.set(\"requestId\", jsonData.requestId);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{v4tokenAlpha}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 23649,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"IncludeAllContracts\": true,\r\n    \"ApplyAllPerils\": false,\r\n    \"CurrencyCode\": \"USD\",\r\n    \"ExposureFilterSets\": {\r\n        \"FilterList\": [\r\n            {\r\n                \"AndOr\": \"AND\",\r\n                \"FilterList\": [\r\n                    {\r\n                        \"AssetType\": \"Site\",\r\n                        \"Attribute\": \"Cause Of Loss\",\r\n                        \"Operator\": \"EQ\",\r\n                        \"Value\": \"EQXX\",\r\n                        \"AndOr\": \"OR\"\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    },\r\n    \"AccumulateByAttribute\": {\r\n        \"AdditionalMeasures\": [\r\n            \"#Assets\",\r\n            \"#Contracts\",\r\n            \"TIV\",\r\n            \"GroundUpLoss\",\r\n            \"ContractLoss_Value All Types_EL\",\r\n            \"ContractLoss_Value All Types_GL\",\r\n            \"Gross Exposed Limit\",\r\n            \"Net Pre Cat Exposed Limit\",\r\n            \"Net Pre Cat Loss\",\r\n            \"Net of Fac Exposed Limit\",\r\n            \"Net of Fac Loss\",\r\n            \"Fac Exposed Limit\",\r\n            \"Fac loss\",\r\n            \"Treaty Exposed Limit\",\r\n            \"Treaty Loss\"\r\n        ],\r\n        \"Attributes\": [\r\n            \"State\",\r\n            \"Country\"\r\n        ],\r\n        \"Count\": 20,\r\n        \"Measure\": \"ContractLoss_Value All Types_EL\",\r\n        \"Peril\": \"Earthquake\",\r\n        \"SubPeril\": \"Shake\",\r\n        \"Operator\": \"GT\",\r\n        \"Threshold\": 0,\r\n        \"ThresholdEnd\": 0,\r\n        \"Contribution\": [\r\n            {\r\n                \"GroupByMeasures\": [\r\n                    \"TIV\"\r\n                ],\r\n                \"GroupByAttributes\": [\r\n                    \"Geocoded Resolution\",\r\n                    \"Country\"\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/analysis/geo-spider-analysis",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"geo-spider-analysis"
					]
				}
			},
			"response": []
		},
		{
			"name": "Portfolio-geo-spider-progress",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();\r",
							"console.log(responseJson);\r",
							"\r",
							"if (responseJson.hasOwnProperty('error')) {\r",
							"    if (responseJson.error === \"Request unauthorized\") {\r",
							"        console.log(\"Authentication Failed. Re-running the Refresh token API\");\r",
							"        pm.collectionVariables.set(\"Flag\", \"true\");\r",
							"        postman.setNextRequest(\"Refresh token\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1.7 minutes before next request.\");\r",
							"        }, 100000);\r",
							"    } else if (responseJson.error === \"Please check the request id. No status available.\") {\r",
							"        console.log(\"Facing a crash. Starting the same iteration\");\r",
							"        postman.setNextRequest(\"Authentication and Authorization\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 15 minutes before next request.\");\r",
							"        }, 900000);\r",
							"    } else {\r",
							"        console.log(\"Authentication Failed. Re-running the Refresh token API\");\r",
							"        postman.setNextRequest(\"Refresh token\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1.7 minutes before next request.\");\r",
							"        }, 100000);\r",
							"    }\r",
							"} else if (responseJson.hasOwnProperty('Stage')) {\r",
							"    if (responseJson.Stage === \"In Queue\") {\r",
							"        console.log(\"Analysis is In Queue. Running the same API\");\r",
							"        postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 2 minute before next request.\");\r",
							"        }, 120000);\r",
							"    } else if (responseJson.Stage === \"Started\") {\r",
							"        console.log(\"Analysis is Started. Running the same API\");\r",
							"        postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1 minute before next request.\");\r",
							"        }, 60000);\r",
							"    } else if (responseJson.Percentage === 100) {\r",
							"        console.log(\"Success! Moving to next API\");\r",
							"        postman.setNextRequest(\"get-data-by-requestid\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1 minute before next request.\");\r",
							"        }, 60000);\r",
							"    } else if (responseJson.Stage === \"Computing accumulations\") {\r",
							"        console.log(\"Computation still not completed. Running the same API\");\r",
							"        postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 1 minute before next request.\");\r",
							"        }, 60000);\r",
							"    } else if (responseJson.Message === \"Unable to connect to Geo server\") {\r",
							"        console.log(\"Facing a crash. Starting the same iteration\");\r",
							"        postman.setNextRequest(\"Authentication and Authorization\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 15 minutes before next request.\");\r",
							"        }, 900000);\r",
							"    } else if (responseJson.Message === \"No server available to run the analysis\") {\r",
							"        console.log(\"Facing a crash. Starting the same iteration\");\r",
							"        postman.setNextRequest(\"Authentication and Authorization\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 15 minutes before next request.\");\r",
							"        }, 900000);\r",
							"    } else if (responseJson.Stage === \"Failed!\") {\r",
							"        console.log(\"Facing a crash. Starting the same iteration\");\r",
							"        postman.setNextRequest(\"Authentication and Authorization\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 15 minutes before next request.\");\r",
							"        }, 900000);\r",
							"    }\r",
							"     else {\r",
							"        console.log(\"Not Completed! Running the same API\");\r",
							"        setTimeout(function() {\r",
							"            console.log(\"Sleeping for 5 minutes before next request.\");\r",
							"        }, 300000);\r",
							"        postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"    }\r",
							"}\r",
							"else\r",
							"{ \r",
							"    console.log(\"Not Completed ! Runnnig same API\");\r",
							"    setTimeout(function(){\r",
							"          console.log(\"Sleeping for 5  minutes before next request.\");\r",
							"  }, 300000);\r",
							"     postman.setNextRequest(\"Portfolio-geo-spider-progress\");\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{v4tokenAlpha}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"requestId\": \"{{requestId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/analysis/geo-spider-progress",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"geo-spider-progress"
					]
				}
			},
			"response": []
		},
		{
			"name": "Refresh token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"var jsonData = JSON.parse(responseBody);\r",
							"//postman.setEnvironmentVariable(\"token\", jsonData.token);\r",
							"pm.collectionVariables.set(\"v4tokenAlpha\", jsonData.token);\r",
							"postman.setNextRequest(\"Portfolio-geo-spider-progress\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"nkumar@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://Alpha-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"Alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "get-data-by-requestid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log('-------- TOP 20 Accumulations by Gross Exposed Limit >0 --------')\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['#Assets']).to.eql(1676);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['#Contracts']).to.eql(137);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['TIV']).to.eql(11077781225.975475);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['GroundUpLoss']).to.eql(11077781225.975475);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['ContractLoss_Value All Types_EL']).to.eql(330298664.4013434);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['ContractLoss_Value All Types_GL']).to.eql(330298664.4013434);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Net Pre Cat Exposed Limit']).to.eql(266531889.0106016);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Net Pre Cat Loss']).to.eql(266531889.0106016);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Net of Fac Exposed Limit']).to.eql(330298664.4013434);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Net of Fac Loss']).to.eql(330298664.4013434);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Treaty Exposed Limit']).to.eql(63766775.390743144);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In First Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][0]['Treaty Loss']).to.eql(63766775.390743144);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['#Assets']).to.eql(2427);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['#Contracts']).to.eql(116);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['TIV']).to.eql(14359927317.969294);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['GroundUpLoss']).to.eql(14359927317.969294);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['ContractLoss_Value All Types_EL']).to.eql(306688351.82431835);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['ContractLoss_Value All Types_GL']).to.eql(306688351.82431835);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Net Pre Cat Exposed Limit']).to.eql(248918087.91830018);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Net Pre Cat Loss']).to.eql(248918087.91830018);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Net of Fac Exposed Limit']).to.eql(306688351.82431835);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Net of Fac Loss']).to.eql(306688351.82431835);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Treaty Exposed Limit']).to.eql(57770263.906014174);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Second Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][1]['Treaty Loss']).to.eql(57770263.906014174);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['#Assets']).to.eql(228);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['#Contracts']).to.eql(52);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['TIV']).to.eql(6654117405.319808);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['GroundUpLoss']).to.eql(6654117405.319808);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['ContractLoss_Value All Types_EL']).to.eql(121772778.37374927);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['ContractLoss_Value All Types_GL']).to.eql(121772778.37374927);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Net Pre Cat Exposed Limit']).to.eql(97631580.35129988);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Net Pre Cat Loss']).to.eql(97631580.35129988);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Net of Fac Exposed Limit']).to.eql(121772778.37374927);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Net of Fac Loss']).to.eql(121772778.37374927);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Treaty Exposed Limit']).to.eql(24141198.022449397);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Third Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][2]['Treaty Loss']).to.eql(24141198.022449397);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['#Assets']).to.eql(1598);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['#Contracts']).to.eql(69);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['TIV']).to.eql(2557283182.6957884);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['GroundUpLoss']).to.eql(2557283182.6957884);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['ContractLoss_Value All Types_EL']).to.eql(112380262.84083842);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['ContractLoss_Value All Types_GL']).to.eql(112380262.84083842);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Net Pre Cat Exposed Limit']).to.eql(92171692.08655436);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Net Pre Cat Loss']).to.eql(92171692.08655436);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Net of Fac Exposed Limit']).to.eql(112380262.84083842);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Net of Fac Loss']).to.eql(112380262.84083842);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Treaty Exposed Limit']).to.eql(20208570.75428411);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Fourth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][3]['Treaty Loss']).to.eql(20208570.75428411);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['#Assets']).to.eql(418);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['#Contracts']).to.eql(57);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['TIV']).to.eql(3609074871.1606364);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['GroundUpLoss']).to.eql(3609074871.1606364);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['ContractLoss_Value All Types_EL']).to.eql(102772982.8701615);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['ContractLoss_Value All Types_GL']).to.eql(102772982.8701615);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Net Pre Cat Exposed Limit']).to.eql(82654359.71456261);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Net Pre Cat Loss']).to.eql(82654359.71456261);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Net of Fac Exposed Limit']).to.eql(102772982.8701615);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Net of Fac Loss']).to.eql(102772982.8701615);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Treaty Exposed Limit']).to.eql(20118623.15559902);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Fifth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][4]['Treaty Loss']).to.eql(20118623.15559902);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['#Assets']).to.eql(817);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['#Contracts']).to.eql(51);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['TIV']).to.eql(3445255499.715383);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['GroundUpLoss']).to.eql(3445255499.715383);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['ContractLoss_Value All Types_EL']).to.eql(102233752.37644035);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['ContractLoss_Value All Types_GL']).to.eql(102233752.37644035);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Net Pre Cat Exposed Limit']).to.eql(83424899.48616685);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Net Pre Cat Loss']).to.eql(83424899.48616685);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Net of Fac Exposed Limit']).to.eql(102233752.37644035);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Net of Fac Loss']).to.eql(102233752.37644035);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Treaty Exposed Limit']).to.eql(18808852.890273757);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Sixth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][5]['Treaty Loss']).to.eql(18808852.890273757);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['#Assets']).to.eql(951);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['#Contracts']).to.eql(43);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['TIV']).to.eql(3007043741.9610577);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['GroundUpLoss']).to.eql(3007043741.9610577);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['ContractLoss_Value All Types_EL']).to.eql(96769315.90971422);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['ContractLoss_Value All Types_GL']).to.eql(96769315.90971422);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Net Pre Cat Exposed Limit']).to.eql(78507973.71442817);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Net Pre Cat Loss']).to.eql(78507973.71442817);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Net of Fac Exposed Limit']).to.eql(96769315.90971422);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Net of Fac Loss']).to.eql(96769315.90971422);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Treaty Exposed Limit']).to.eql(18261342.195286535);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Seventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][6]['Treaty Loss']).to.eql(18261342.195286535);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['#Assets']).to.eql(513);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['#Contracts']).to.eql(63);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['TIV']).to.eql(2888248551.6537914);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['GroundUpLoss']).to.eql(2888248551.6537914);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['ContractLoss_Value All Types_EL']).to.eql(92832413.45797563);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['ContractLoss_Value All Types_GL']).to.eql(92832413.45797563);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Net Pre Cat Exposed Limit']).to.eql(75049586.69505458);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Net Pre Cat Loss']).to.eql(75049586.69505458);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Net of Fac Exposed Limit']).to.eql(92832413.45797563);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Net of Fac Loss']).to.eql(92832413.45797563);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Treaty Exposed Limit']).to.eql(17782826.762921236);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Eighth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][7]['Treaty Loss']).to.eql(17782826.762921236);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['#Assets']).to.eql(205);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['#Contracts']).to.eql(46);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['TIV']).to.eql(3314967751.3511386);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['GroundUpLoss']).to.eql(3314967751.3511386);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['ContractLoss_Value All Types_EL']).to.eql(91556263.95397511);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['ContractLoss_Value All Types_GL']).to.eql(91556263.95397511);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Net Pre Cat Exposed Limit']).to.eql(75062893.49806538);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Net Pre Cat Loss']).to.eql(75062893.49806538);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Net of Fac Exposed Limit']).to.eql(91556263.95397511);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Net of Fac Loss']).to.eql(91556263.95397511);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Treaty Exposed Limit']).to.eql(16493370.455909733);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Ninth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][8]['Treaty Loss']).to.eql(16493370.455909733);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['#Assets']).to.eql(78);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['#Contracts']).to.eql(30);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['TIV']).to.eql(2811383494.572642);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['GroundUpLoss']).to.eql(2811383494.572642);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['ContractLoss_Value All Types_EL']).to.eql(89979833.55673558);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['ContractLoss_Value All Types_GL']).to.eql(89979833.55673558);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Net Pre Cat Exposed Limit']).to.eql(73104380.94667014);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Net Pre Cat Loss']).to.eql(73104380.94667014);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Net of Fac Exposed Limit']).to.eql(89979833.55673558);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Net of Fac Loss']).to.eql(89979833.55673558);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Treaty Exposed Limit']).to.eql(16875452.610065494);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Tenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][9]['Treaty Loss']).to.eql(16875452.610065494);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['#Assets']).to.eql(476);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['#Contracts']).to.eql(40);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['TIV']).to.eql(17972207119.087997);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['GroundUpLoss']).to.eql(17972207119.087997);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['ContractLoss_Value All Types_EL']).to.eql(83008411.11044192);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['ContractLoss_Value All Types_GL']).to.eql(83008411.11044192);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Net Pre Cat Exposed Limit']).to.eql(67762100.53342474);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Net Pre Cat Loss']).to.eql(67762100.53342474);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Net of Fac Exposed Limit']).to.eql(83008411.11044192);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Net of Fac Loss']).to.eql(83008411.11044192);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Treaty Exposed Limit']).to.eql(15246310.577017486);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Eleventh Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][10]['Treaty Loss']).to.eql(15246310.577017486);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['#Assets']).to.eql(1003);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['#Contracts']).to.eql(55);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['TIV']).to.eql(3086072313.2499995);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['GroundUpLoss']).to.eql(3086072313.2499995);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['ContractLoss_Value All Types_EL']).to.eql(81382999.87803616);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['ContractLoss_Value All Types_GL']).to.eql(81382999.87803616);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Net Pre Cat Exposed Limit']).to.eql(66787703.91149315);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Net Pre Cat Loss']).to.eql(66787703.91149315);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Net of Fac Exposed Limit']).to.eql(81382999.87803616);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Net of Fac Loss']).to.eql(81382999.87803616);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Treaty Exposed Limit']).to.eql(14595295.96654371);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Twelfth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][11]['Treaty Loss']).to.eql(14595295.96654371);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['#Assets']).to.eql(538);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['#Contracts']).to.eql(47);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['TIV']).to.eql(3053712881.2800016);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['GroundUpLoss']).to.eql(3053712881.2800016);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['ContractLoss_Value All Types_EL']).to.eql(79942512.1755396);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['ContractLoss_Value All Types_GL']).to.eql(79942512.1755396);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Net Pre Cat Exposed Limit']).to.eql(65558184.60426734);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Net Pre Cat Loss']).to.eql(65558184.60426734);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Net of Fac Exposed Limit']).to.eql(79942512.1755396);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Net of Fac Loss']).to.eql(79942512.1755396);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Treaty Exposed Limit']).to.eql(14384327.57127192);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Thirteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][12]['Treaty Loss']).to.eql(14384327.57127192);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['#Assets']).to.eql(116);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['#Contracts']).to.eql(30);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['TIV']).to.eql(7815056534.341822);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['GroundUpLoss']).to.eql(7815056534.341822);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['ContractLoss_Value All Types_EL']).to.eql(79390702.50485246);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['ContractLoss_Value All Types_GL']).to.eql(79390702.50485246);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Net Pre Cat Exposed Limit']).to.eql(63512562.003881946);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Net Pre Cat Loss']).to.eql(63512562.003881946);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Net of Fac Exposed Limit']).to.eql(79390702.50485246);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Net of Fac Loss']).to.eql(79390702.50485246);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Treaty Exposed Limit']).to.eql(15878140.500970485);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Fourteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][13]['Treaty Loss']).to.eql(15878140.500970485);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['#Assets']).to.eql(755);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['#Contracts']).to.eql(63);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['TIV']).to.eql(4460662430.034447);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['GroundUpLoss']).to.eql(4460662430.034447);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['ContractLoss_Value All Types_EL']).to.eql(77678551.93444563);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['ContractLoss_Value All Types_GL']).to.eql(77678551.93444563);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Net Pre Cat Exposed Limit']).to.eql(64536029.15188463);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Net Pre Cat Loss']).to.eql(64536029.15188463);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Net of Fac Exposed Limit']).to.eql(77678551.93444563);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Net of Fac Loss']).to.eql(77678551.93444563);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Treaty Exposed Limit']).to.eql(13142522.782561101);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Fifteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][14]['Treaty Loss']).to.eql(13142522.782561101);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['#Assets']).to.eql(504);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['#Contracts']).to.eql(45);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['TIV']).to.eql(2743993150.36);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['GroundUpLoss']).to.eql(2743993150.36);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['ContractLoss_Value All Types_EL']).to.eql(75883718.7431112);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['ContractLoss_Value All Types_GL']).to.eql(75883718.7431112);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Net Pre Cat Exposed Limit']).to.eql(60866158.93898307);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Net Pre Cat Loss']).to.eql(60866158.93898307);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Net of Fac Exposed Limit']).to.eql(75883718.7431112);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Net of Fac Loss']).to.eql(75883718.7431112);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Treaty Exposed Limit']).to.eql(15017559.804127535);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Sixteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][15]['Treaty Loss']).to.eql(15017559.804127535);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['#Assets']).to.eql(623);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['#Contracts']).to.eql(44);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['TIV']).to.eql(1567375621.9620006);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['GroundUpLoss']).to.eql(1567375621.9620006);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['ContractLoss_Value All Types_EL']).to.eql(71479170.56973447);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['ContractLoss_Value All Types_GL']).to.eql(71479170.56973447);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Net Pre Cat Exposed Limit']).to.eql(58012124.08500846);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Net Pre Cat Loss']).to.eql(58012124.08500846);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Net of Fac Exposed Limit']).to.eql(71479170.56973447);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Net of Fac Loss']).to.eql(71479170.56973447);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Treaty Exposed Limit']).to.eql(13467046.484724445);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Seventeenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][16]['Treaty Loss']).to.eql(13467046.484724445);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['#Assets']).to.eql(999);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['#Contracts']).to.eql(44);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['TIV']).to.eql(2210195012.5674443);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['GroundUpLoss']).to.eql(2210195012.5674443);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['ContractLoss_Value All Types_EL']).to.eql(69116981.53627715);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['ContractLoss_Value All Types_GL']).to.eql(69116981.53627715);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Net Pre Cat Exposed Limit']).to.eql(56974543.71104816);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Net Pre Cat Loss']).to.eql(56974543.71104816);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Net of Fac Exposed Limit']).to.eql(69116981.53627715);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Net of Fac Loss']).to.eql(69116981.53627715);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Treaty Exposed Limit']).to.eql(12142437.825228227);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Eighteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][17]['Treaty Loss']).to.eql(12142437.825228227);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['#Assets']).to.eql(62);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['#Contracts']).to.eql(17);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['TIV']).to.eql(3751843074.3420005);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['GroundUpLoss']).to.eql(3751843074.3420005);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['ContractLoss_Value All Types_EL']).to.eql(66157690.6390444);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['ContractLoss_Value All Types_GL']).to.eql(66157690.6390444);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Net Pre Cat Exposed Limit']).to.eql(52926152.51123554);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Net Pre Cat Loss']).to.eql(52926152.51123554);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Net of Fac Exposed Limit']).to.eql(66157690.6390444);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Net of Fac Loss']).to.eql(66157690.6390444);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Treaty Exposed Limit']).to.eql(13231538.127808886);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Nineteenth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][18]['Treaty Loss']).to.eql(13231538.127808886);\r",
							"});\r",
							"\r",
							"// Assertion for #Assets\r",
							"pm.test('Validating #Assets In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['#Assets']).to.eql(147);\r",
							"});\r",
							"\r",
							"// Assertion for #Contracts\r",
							"pm.test('Validating #Contracts In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['#Contracts']).to.eql(29);\r",
							"});\r",
							"\r",
							"// Assertion for TIV\r",
							"pm.test('Validating TIV In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['TIV']).to.eql(1307158736.6744177);\r",
							"});\r",
							"\r",
							"// Assertion for GroundUpLoss\r",
							"pm.test('Validating GroundUpLoss In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['GroundUpLoss']).to.eql(1307158736.6744177);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_EL\r",
							"pm.test('Validating ContractLoss_Value All Types_EL In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['ContractLoss_Value All Types_EL']).to.eql(64574587.86570706);\r",
							"});\r",
							"\r",
							"// Assertion for ContractLoss_Value All Types_GL\r",
							"pm.test('Validating ContractLoss_Value All Types_GL In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['ContractLoss_Value All Types_GL']).to.eql(64574587.86570706);\r",
							"});\r",
							"\r",
							"// Assertion for Gross Exposed Limit (assuming it's a missing field in the provided data)\r",
							"pm.test('Validating Gross Exposed Limit In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Gross Exposed Limit']).to.be.undefined;\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Exposed Limit\r",
							"pm.test('Validating Net Pre Cat Exposed Limit In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Net Pre Cat Exposed Limit']).to.eql(52783520.28054943);\r",
							"});\r",
							"\r",
							"// Assertion for Net Pre Cat Loss\r",
							"pm.test('Validating Net Pre Cat Loss In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Net Pre Cat Loss']).to.eql(52783520.28054943);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Exposed Limit\r",
							"pm.test('Validating Net of Fac Exposed Limit In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Net of Fac Exposed Limit']).to.eql(64574587.86570706);\r",
							"});\r",
							"\r",
							"// Assertion for Net of Fac Loss\r",
							"pm.test('Validating Net of Fac Loss In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Net of Fac Loss']).to.eql(64574587.86570706);\r",
							"});\r",
							"\r",
							"// Assertion for Fac Exposed Limit\r",
							"pm.test('Validating Fac Exposed Limit In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Fac Exposed Limit']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Fac loss\r",
							"pm.test('Validating Fac loss In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Fac loss']).to.eql(0);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Exposed Limit\r",
							"pm.test('Validating Treaty Exposed Limit In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Treaty Exposed Limit']).to.eql(11791067.585157728);\r",
							"});\r",
							"\r",
							"// Assertion for Treaty Loss\r",
							"pm.test('Validating Treaty Loss In Twentieth Row for Geo Spider without event exposure MRC_LDS', () => {\r",
							"    pm.expect(responseJson.Value.Analysis0['Topn Accumulations'][19]['Treaty Loss']).to.eql(11791067.585157728);\r",
							"});\r",
							"\r",
							"//--------------------------- Contribution checks ----------------------------//\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ID\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ID\", () => {\r",
							"    const ID = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"ID\");\r",
							"    pm.expect(ID[\"Country\"]).to.eql(\"ID\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ID\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ID\", () => {\r",
							"    const ID = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"ID\");\r",
							"    pm.expect(ID[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ID\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ID\", () => {\r",
							"    const ID = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"ID\");\r",
							"    pm.expect(ID[\"Percentage\"].toFixed(4)).to.eql(0.0762.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ID\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ID\", () => {\r",
							"    const ID = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"ID\");\r",
							"    pm.expect(ID[\"TIV\"].toFixed(2)).to.eql(165957220.88.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ES\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ES\", () => {\r",
							"    const ES = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"ES\");\r",
							"    pm.expect(ES[\"Country\"]).to.eql(\"ES\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ES\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ES\", () => {\r",
							"    const ES = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"ES\");\r",
							"    pm.expect(ES[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ES\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ES\", () => {\r",
							"    const ES = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"ES\");\r",
							"    pm.expect(ES[\"Percentage\"].toFixed(4)).to.eql(0.6080.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ES\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country ES\", () => {\r",
							"    const ES = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"ES\");\r",
							"    pm.expect(ES[\"TIV\"].toFixed(2)).to.eql(1323495133.59.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TH\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TH\", () => {\r",
							"    const TH = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"TH\");\r",
							"    pm.expect(TH[\"Country\"]).to.eql(\"TH\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TH\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TH\", () => {\r",
							"    const TH = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"TH\");\r",
							"    pm.expect(TH[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TH\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TH\", () => {\r",
							"    const TH = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"TH\");\r",
							"    pm.expect(TH[\"Percentage\"].toFixed(4)).to.eql(0.0482.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TH\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TH\", () => {\r",
							"    const TH = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"TH\");\r",
							"    pm.expect(TH[\"TIV\"].toFixed(2)).to.eql(104912798.49.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IT\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IT\", () => {\r",
							"    const IT = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"IT\");\r",
							"    pm.expect(IT[\"Country\"]).to.eql(\"IT\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IT\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IT\", () => {\r",
							"    const IT = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"IT\");\r",
							"    pm.expect(IT[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IT\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IT\", () => {\r",
							"    const IT = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"IT\");\r",
							"    pm.expect(IT[\"Percentage\"].toFixed(4)).to.eql(0.5361.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IT\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IT\", () => {\r",
							"    const IT = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"IT\");\r",
							"    pm.expect(IT[\"TIV\"].toFixed(2)).to.eql(1166978374.76.toFixed(2)); \r",
							"});\r",
							"\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PH\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PH\", () => {\r",
							"    const PH = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"PH\");\r",
							"    pm.expect(PH[\"Country\"]).to.eql(\"PH\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PH\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PH\", () => {\r",
							"    const PH = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"PH\");\r",
							"    pm.expect(PH[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PH\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PH\", () => {\r",
							"    const PH = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"PH\");\r",
							"    pm.expect(PH[\"Percentage\"].toFixed(4)).to.eql(1.2651.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PH\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PH\", () => {\r",
							"    const PH = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"PH\");\r",
							"    pm.expect(PH[\"TIV\"].toFixed(2)).to.eql(2753698629.99.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MY\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MY\", () => {\r",
							"    const MY = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MY\");\r",
							"    pm.expect(MY[\"Country\"]).to.eql(\"MY\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MY\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MY\", () => {\r",
							"    const MY = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MY\");\r",
							"    pm.expect(MY[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MY\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MY\", () => {\r",
							"    const MY = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MY\");\r",
							"    pm.expect(MY[\"Percentage\"].toFixed(4)).to.eql(2.0570.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MY\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MY\", () => {\r",
							"    const MY = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MY\");\r",
							"    pm.expect(MY[\"TIV\"].toFixed(2)).to.eql(4477361150.73.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country NZ\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country NZ\", () => {\r",
							"    const NZ = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"NZ\");\r",
							"    pm.expect(NZ[\"Country\"]).to.eql(\"NZ\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country NZ\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country NZ\", () => {\r",
							"    const NZ = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"NZ\");\r",
							"    pm.expect(NZ[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country NZ\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country NZ\", () => {\r",
							"    const NZ = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"NZ\");\r",
							"    pm.expect(NZ[\"Percentage\"].toFixed(4)).to.eql(0.9929.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country NZ\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country NZ\", () => {\r",
							"    const NZ = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"NZ\");\r",
							"    pm.expect(NZ[\"TIV\"].toFixed(2)).to.eql(2161103469.60.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CL\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CL\", () => {\r",
							"    const CL = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"CL\");\r",
							"    pm.expect(CL[\"Country\"]).to.eql(\"CL\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CL\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CL\", () => {\r",
							"    const CL = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"CL\");\r",
							"    pm.expect(CL[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CL\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CL\", () => {\r",
							"    const CL = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"CL\");\r",
							"    pm.expect(CL[\"Percentage\"].toFixed(4)).to.eql(13.1036.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CL\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CL\", () => {\r",
							"    const CL = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"CL\");\r",
							"    pm.expect(CL[\"TIV\"].toFixed(2)).to.eql(28521999385.71.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MX\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MX\", () => {\r",
							"    const MX = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MX\");\r",
							"    pm.expect(MX[\"Country\"]).to.eql(\"MX\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MX\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MX\", () => {\r",
							"    const MX = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MX\");\r",
							"    pm.expect(MX[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MX\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MX\", () => {\r",
							"    const MX = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MX\");\r",
							"    pm.expect(MX[\"Percentage\"].toFixed(4)).to.eql(2.2595.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MX\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MX\", () => {\r",
							"    const MX = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MX\");\r",
							"    pm.expect(MX[\"TIV\"].toFixed(2)).to.eql(4918080596.60.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country VN\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country VN\", () => {\r",
							"    const VN = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"VN\");\r",
							"    pm.expect(VN[\"Country\"]).to.eql(\"VN\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country VN\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country VN\", () => {\r",
							"    const VN = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"VN\");\r",
							"    pm.expect(VN[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country VN\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country VN\", () => {\r",
							"    const VN = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"VN\");\r",
							"    pm.expect(VN[\"Percentage\"].toFixed(4)).to.eql(0.1148.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country VN\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country VN\", () => {\r",
							"    const VN = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"VN\");\r",
							"    pm.expect(VN[\"TIV\"].toFixed(2)).to.eql(249965709.24.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country SL\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country SL\", () => {\r",
							"    const SL = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"0\" && item[\"Country\"] === \"SL\");\r",
							"    pm.expect(SL[\"Country\"]).to.eql(\"SL\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country SL\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country SL\", () => {\r",
							"    const SL = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"0\" && item[\"Country\"] === \"SL\");\r",
							"    pm.expect(SL[\"Geocoded Resolution\"]).to.eql(\"0\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country SL\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country SL\", () => {\r",
							"    const SL = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"0\" && item[\"Country\"] === \"SL\");\r",
							"    pm.expect(SL[\"Percentage\"].toFixed(4)).to.eql(0.0004.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country SL\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country SL\", () => {\r",
							"    const SL = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"0\" && item[\"Country\"] === \"SL\");\r",
							"    pm.expect(SL[\"TIV\"].toFixed(2)).to.eql(850000.00.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LV\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LV\", () => {\r",
							"    const LV = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"LV\");\r",
							"    pm.expect(LV[\"Country\"]).to.eql(\"LV\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LV\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LV\", () => {\r",
							"    const LV = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"LV\");\r",
							"    pm.expect(LV[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LV\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LV\", () => {\r",
							"    const LV = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"LV\");\r",
							"    pm.expect(LV[\"Percentage\"].toFixed(4)).to.eql(0.0042.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LV\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LV\", () => {\r",
							"    const LV = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"LV\");\r",
							"    pm.expect(LV[\"TIV\"].toFixed(2)).to.eql(9195368.57.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LK\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LK\", () => {\r",
							"    const LK = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"LK\");\r",
							"    pm.expect(LK[\"Country\"]).to.eql(\"LK\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LK\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LK\", () => {\r",
							"    const LK = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"LK\");\r",
							"    pm.expect(LK[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LK\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LK\", () => {\r",
							"    const LK = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"LK\");\r",
							"    pm.expect(LK[\"Percentage\"].toFixed(4)).to.eql(0.0067.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LK\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LK\", () => {\r",
							"    const LK = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"LK\");\r",
							"    pm.expect(LK[\"TIV\"].toFixed(2)).to.eql(14583938.00.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country AU\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country AU\", () => {\r",
							"    const AU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"0\" && item[\"Country\"] === \"AU\");\r",
							"    pm.expect(AU[\"Country\"]).to.eql(\"AU\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country AU\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country AU\", () => {\r",
							"    const AU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"0\" && item[\"Country\"] === \"AU\");\r",
							"    pm.expect(AU[\"Geocoded Resolution\"]).to.eql(\"0\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country AU\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country AU\", () => {\r",
							"    const AU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"0\" && item[\"Country\"] === \"AU\");\r",
							"    pm.expect(AU[\"Percentage\"].toFixed(4)).to.eql(0.0566.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country AU\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country AU\", () => {\r",
							"    const AU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"0\" && item[\"Country\"] === \"AU\");\r",
							"    pm.expect(AU[\"TIV\"].toFixed(2)).to.eql(123277737.54.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LU\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LU\", () => {\r",
							"    const LU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"LU\");\r",
							"    pm.expect(LU[\"Country\"]).to.eql(\"LU\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LU\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LU\", () => {\r",
							"    const LU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"LU\");\r",
							"    pm.expect(LU[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LU\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LU\", () => {\r",
							"    const LU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"LU\");\r",
							"    pm.expect(LU[\"Percentage\"].toFixed(4)).to.eql(0.0001.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LU\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country LU\", () => {\r",
							"    const LU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"LU\");\r",
							"    pm.expect(LU[\"TIV\"].toFixed(2)).to.eql(324471.24.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BO\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BO\", () => {\r",
							"    const BO = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"BO\");\r",
							"    pm.expect(BO[\"Country\"]).to.eql(\"BO\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BO\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BO\", () => {\r",
							"    const BO = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"BO\");\r",
							"    pm.expect(BO[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BO\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BO\", () => {\r",
							"    const BO = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"BO\");\r",
							"    pm.expect(BO[\"Percentage\"].toFixed(4)).to.eql(0.0259.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BO\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BO\", () => {\r",
							"    const BO = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"BO\");\r",
							"    pm.expect(BO[\"TIV\"].toFixed(2)).to.eql(56276499.79.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country RU\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country RU\", () => {\r",
							"    const RU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"RU\");\r",
							"    pm.expect(RU[\"Country\"]).to.eql(\"RU\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country RU\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country RU\", () => {\r",
							"    const RU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"RU\");\r",
							"    pm.expect(RU[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country RU\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country RU\", () => {\r",
							"    const RU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"RU\");\r",
							"    pm.expect(RU[\"Percentage\"].toFixed(4)).to.eql(0.3332.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country RU\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country RU\", () => {\r",
							"    const RU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"RU\");\r",
							"    pm.expect(RU[\"TIV\"].toFixed(2)).to.eql(725232859.70.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BS\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BS\", () => {\r",
							"    const BS = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"BS\");\r",
							"    pm.expect(BS[\"Country\"]).to.eql(\"BS\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BS\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BS\", () => {\r",
							"    const BS = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"BS\");\r",
							"    pm.expect(BS[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BS\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BS\", () => {\r",
							"    const BS = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"BS\");\r",
							"    pm.expect(BS[\"Percentage\"].toFixed(4)).to.eql(0.0098.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BS\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BS\", () => {\r",
							"    const BS = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"BS\");\r",
							"    pm.expect(BS[\"TIV\"].toFixed(2)).to.eql(21336823.88.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MA\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MA\", () => {\r",
							"    const MA = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MA\");\r",
							"    pm.expect(MA[\"Country\"]).to.eql(\"MA\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MA\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MA\", () => {\r",
							"    const MA = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MA\");\r",
							"    pm.expect(MA[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MA\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MA\", () => {\r",
							"    const MA = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MA\");\r",
							"    pm.expect(MA[\"Percentage\"].toFixed(3)).to.eql(0.0049.toFixed(3)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MA\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MA\", () => {\r",
							"    const MA = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MA\");\r",
							"    pm.expect(MA[\"TIV\"].toFixed(2)).to.eql(10826491.02.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CR\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CR\", () => {\r",
							"    const CR = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"CR\");\r",
							"    pm.expect(CR[\"Country\"]).to.eql(\"CR\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CR\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CR\", () => {\r",
							"    const CR = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"CR\");\r",
							"    pm.expect(CR[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CR\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CR\", () => {\r",
							"    const CR = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"CR\");\r",
							"    pm.expect(CR[\"Percentage\"].toFixed(4)).to.eql(0.0178.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CR\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CR\", () => {\r",
							"    const CR = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"CR\");\r",
							"    pm.expect(CR[\"TIV\"].toFixed(2)).to.eql(38781639.02.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MU\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MU\", () => {\r",
							"    const MU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MU\");\r",
							"    pm.expect(MU[\"Country\"]).to.eql(\"MU\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MU\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MU\", () => {\r",
							"    const MU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MU\");\r",
							"    pm.expect(MU[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MU\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MU\", () => {\r",
							"    const MU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MU\");\r",
							"    pm.expect(MU[\"Percentage\"].toFixed(4)).to.eql(0.0059.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MU\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MU\", () => {\r",
							"    const MU = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MU\");\r",
							"    pm.expect(MU[\"TIV\"].toFixed(2)).to.eql(12757679.76.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country UY\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country UY\", () => {\r",
							"    const UY = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"UY\");\r",
							"    pm.expect(UY[\"Country\"]).to.eql(\"UY\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country UY\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country UY\", () => {\r",
							"    const UY = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"UY\");\r",
							"    pm.expect(UY[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country UY\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country UY\", () => {\r",
							"    const UY = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"UY\");\r",
							"    pm.expect(UY[\"Percentage\"].toFixed(4)).to.eql(0.0212.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country UY\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country UY\", () => {\r",
							"    const UY = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"UY\");\r",
							"    pm.expect(UY[\"TIV\"].toFixed(2)).to.eql(46218021.53.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MV\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MV\", () => {\r",
							"    const MV = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MV\");\r",
							"    pm.expect(MV[\"Country\"]).to.eql(\"MV\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MV\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MV\", () => {\r",
							"    const MV = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MV\");\r",
							"    pm.expect(MV[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MV\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MV\", () => {\r",
							"    const MV = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MV\");\r",
							"    pm.expect(MV[\"Percentage\"].toFixed(4)).to.eql(0.0020.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MV\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MV\", () => {\r",
							"    const MV = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MV\");\r",
							"    pm.expect(MV[\"TIV\"].toFixed(2)).to.eql(4391424.10.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country HR\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country HR\", () => {\r",
							"    const HR = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"HR\");\r",
							"    pm.expect(HR[\"Country\"]).to.eql(\"HR\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country HR\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country HR\", () => {\r",
							"    const HR = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"HR\");\r",
							"    pm.expect(HR[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country HR\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country HR\", () => {\r",
							"    const HR = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"HR\");\r",
							"    pm.expect(HR[\"Percentage\"].toFixed(2)).to.eql(0.1379.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country HR\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country HR\", () => {\r",
							"    const HR = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"HR\");\r",
							"    pm.expect(HR[\"TIV\"].toFixed(2)).to.eql(300278369.80.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country EG\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country EG\", () => {\r",
							"    const EG = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"EG\");\r",
							"    pm.expect(EG[\"Country\"]).to.eql(\"EG\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country EG\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country EG\", () => {\r",
							"    const EG = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"EG\");\r",
							"    pm.expect(EG[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country EG\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country EG\", () => {\r",
							"    const EG = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"EG\");\r",
							"    pm.expect(EG[\"Percentage\"].toFixed(4)).to.eql(0.0270.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country EG\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country EG\", () => {\r",
							"    const EG = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"EG\");\r",
							"    pm.expect(EG[\"TIV\"].toFixed(2)).to.eql(58830753.00.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TZ\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TZ\", () => {\r",
							"    const TZ = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"TZ\");\r",
							"    pm.expect(TZ[\"Country\"]).to.eql(\"TZ\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TZ\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TZ\", () => {\r",
							"    const TZ = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"TZ\");\r",
							"    pm.expect(TZ[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TZ\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TZ\", () => {\r",
							"    const TZ = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"TZ\");\r",
							"    pm.expect(TZ[\"Percentage\"].toFixed(4)).to.eql(0.0264.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TZ\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country TZ\", () => {\r",
							"    const TZ = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"TZ\");\r",
							"    pm.expect(TZ[\"TIV\"].toFixed(2)).to.eql(57370044.90.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country DO\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country DO\", () => {\r",
							"    const DO = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"DO\");\r",
							"    pm.expect(DO[\"Country\"]).to.eql(\"DO\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country DO\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country DO\", () => {\r",
							"    const DO = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"DO\");\r",
							"    pm.expect(DO[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country DO\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country DO\", () => {\r",
							"    const DO = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"DO\");\r",
							"    pm.expect(DO[\"Percentage\"].toFixed(4)).to.eql(0.0813.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country DO\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country DO\", () => {\r",
							"    const DO = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"DO\");\r",
							"    pm.expect(DO[\"TIV\"].toFixed(2)).to.eql(176952173.70.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PY\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PY\", () => {\r",
							"    const PY = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"PY\");\r",
							"    pm.expect(PY[\"Country\"]).to.eql(\"PY\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PY\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PY\", () => {\r",
							"    const PY = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"PY\");\r",
							"    pm.expect(PY[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PY\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PY\", () => {\r",
							"    const PY = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"PY\");\r",
							"    pm.expect(PY[\"Percentage\"].toFixed(4)).to.eql(0.0712.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PY\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country PY\", () => {\r",
							"    const PY = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"PY\");\r",
							"    pm.expect(PY[\"TIV\"].toFixed(2)).to.eql(155065916.93.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country ZA\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country ZA\", () => {\r",
							"    const ZA = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"0\" && item[\"Country\"] === \"ZA\");\r",
							"    pm.expect(ZA[\"Country\"]).to.eql(\"ZA\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country ZA\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country ZA\", () => {\r",
							"    const ZA = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"0\" && item[\"Country\"] === \"ZA\");\r",
							"    pm.expect(ZA[\"Geocoded Resolution\"]).to.eql(\"0\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country ZA\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country ZA\", () => {\r",
							"    const ZA = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"0\" && item[\"Country\"] === \"ZA\");\r",
							"    pm.expect(ZA[\"Percentage\"].toFixed(4)).to.eql(0.0303.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country ZA\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 0 for Country ZA\", () => {\r",
							"    const ZA = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"0\" && item[\"Country\"] === \"ZA\");\r",
							"    pm.expect(ZA[\"TIV\"].toFixed(2)).to.eql(65996436.60.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country JO\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country JO\", () => {\r",
							"    const JO = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"JO\");\r",
							"    pm.expect(JO[\"Country\"]).to.eql(\"JO\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country JO\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country JO\", () => {\r",
							"    const JO = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"JO\");\r",
							"    pm.expect(JO[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country JO\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country JO\", () => {\r",
							"    const JO = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"JO\");\r",
							"    pm.expect(JO[\"Percentage\"].toFixed(4)).to.eql(0.0173.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country JO\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country JO\", () => {\r",
							"    const JO = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"JO\");\r",
							"    pm.expect(JO[\"TIV\"].toFixed(2)).to.eql(37699693.50.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country QA\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country QA\", () => {\r",
							"    const QA = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"QA\");\r",
							"    pm.expect(QA[\"Country\"]).to.eql(\"QA\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country QA\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country QA\", () => {\r",
							"    const QA = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"QA\");\r",
							"    pm.expect(QA[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country QA\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country QA\", () => {\r",
							"    const QA = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"QA\");\r",
							"    pm.expect(QA[\"Percentage\"].toFixed(4)).to.eql(0.0000.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country QA\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country QA\", () => {\r",
							"    const QA = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"QA\");\r",
							"    pm.expect(QA[\"TIV\"].toFixed(2)).to.eql(57747.00.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IE\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IE\", () => {\r",
							"    const IE = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"IE\");\r",
							"    pm.expect(IE[\"Country\"]).to.eql(\"IE\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IE\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IE\", () => {\r",
							"    const IE = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"IE\");\r",
							"    pm.expect(IE[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IE\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IE\", () => {\r",
							"    const IE = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"IE\");\r",
							"    pm.expect(IE[\"Percentage\"].toFixed(4)).to.eql(0.0479.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IE\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country IE\", () => {\r",
							"    const IE = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"IE\");\r",
							"    pm.expect(IE[\"TIV\"].toFixed(2)).to.eql(104200848.39.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CD\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CD\", () => {\r",
							"    const CD = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"CD\");\r",
							"    pm.expect(CD[\"Country\"]).to.eql(\"CD\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CD\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CD\", () => {\r",
							"    const CD = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"CD\");\r",
							"    pm.expect(CD[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CD\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CD\", () => {\r",
							"    const CD = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"CD\");\r",
							"    pm.expect(CD[\"Percentage\"].toFixed(4)).to.eql(0.2388.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CD\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country CD\", () => {\r",
							"    const CD = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"CD\");\r",
							"    pm.expect(CD[\"TIV\"].toFixed(2)).to.eql(519718609.64.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MR\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MR\", () => {\r",
							"    const MR = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MR\");\r",
							"    pm.expect(MR[\"Country\"]).to.eql(\"MR\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MR\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MR\", () => {\r",
							"    const MR = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MR\");\r",
							"    pm.expect(MR[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MR\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MR\", () => {\r",
							"    const MR = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MR\");\r",
							"    pm.expect(MR[\"Percentage\"].toFixed(4)).to.eql(0.0175.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MR\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country MR\", () => {\r",
							"    const MR = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"MR\");\r",
							"    pm.expect(MR[\"TIV\"].toFixed(2)).to.eql(38000000.00.toFixed(2)); \r",
							"});\r",
							"\r",
							"// Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BD\r",
							"pm.test(\"Validating Country in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BD\", () => {\r",
							"    const BD = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"BD\");\r",
							"    pm.expect(BD[\"Country\"]).to.eql(\"BD\"); \r",
							"});\r",
							"\r",
							"// Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BD\r",
							"pm.test(\"Validating Geocoded Resolution in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BD\", () => {\r",
							"    const BD = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"BD\");\r",
							"    pm.expect(BD[\"Geocoded Resolution\"]).to.eql(\"1\"); \r",
							"});\r",
							"\r",
							"// Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BD\r",
							"pm.test(\"Validating Percentage in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BD\", () => {\r",
							"    const BD = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"BD\");\r",
							"    pm.expect(BD[\"Percentage\"].toFixed(4)).to.eql(0.0015.toFixed(4)); \r",
							"});\r",
							"\r",
							"// Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BD\r",
							"pm.test(\"Validating TIV in Geo Spider Contribution without event exposure OM 2212 - Fleet(Copy), Geocoded Resolution == 1 for Country BD\", () => {\r",
							"    const BD = responseJson.Value.Analysis0.Contribution[0].Results.find(item => item[\"Geocoded Resolution\"] === \"1\" && item[\"Country\"] === \"BD\");\r",
							"    pm.expect(BD[\"TIV\"].toFixed(2)).to.eql(3250000.00.toFixed(2)); \r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{v4tokenAlpha}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"requestId\": \"{{requestId}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-data-by-requestid",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-data-by-requestid"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "requestID",
			"value": ""
		},
		{
			"key": "{{State}}",
			"value": "",
			"type": "string"
		},
		{
			"key": "v4tokenAlpha",
			"value": ""
		},
		{
			"key": "requestId",
			"value": ""
		}
	]
}