{
	"info": {
		"_postman_id": "1353b1c0-73fc-4b1a-b413-1b856e0f8c49",
		"name": "alpha  Enum_contribution_Portfolio - onerld",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "14426843",
		"_collection_link": "https://solar-shadow-896910.postman.co/workspace/alpha-18-03-~a4c6c3f1-c78c-43b8-a60c-866bee5368a5/collection/14426843-1353b1c0-73fc-4b1a-b413-1b856e0f8c49?action=share&source=collection_link&creator=14426843"
	},
	"item": [
		{
			"name": "Authentication and Authorization",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();  \r",
							"pm.collectionVariables.set(\"token\", jsonData.token);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-forwarded-for",
						"value": "152.58.201.217",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"email\": \"mafaz_orchid@eigenrisk.com\",\r\n  \"apiKey\": \"789\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/apiLogin",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"apiLogin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Set analysis",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"setTimeout(function() {\r",
							"    console.log(\"Next API Call After 2 Minutes \")\r",
							"}, 120000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Exposure\": {\r\n        \"id\": 20661,\r\n        \"object_sub_type\": \"portfolio\"\r\n    },\r\n    \"analysisObject\": [\r\n        {\r\n            \"CurrencyCode\": \"USD\",\r\n            \"IncludeAllContracts\": true,\r\n            \"damageAdjustment\": 1,\r\n            \"ValuationTypeCode\": 1,\r\n            \"ExposureFilterSets\": {\r\n        \"AssetModel\": \"ERBASICS\",\r\n        \"FilterList\": [\r\n          {\r\n            \"AndOr\": \"AND\",\r\n            \"FilterList\": [\r\n              {\r\n                \"AssetType\": \"Site\",\r\n                \"Attribute\": \"Cause Of Loss\",\r\n                \"Operator\": \"EQ\",\r\n                \"Value\": \"EWXX\",\r\n                \"AndOr\": \"OR\"\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n            \"quantile\": 50\r\n            \r\n        }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/analysis/load-exposure",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"analysis",
						"load-exposure"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tiv/Fire Alarm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"//const data1 = JSON(responseJson);\r",
							" console.log(\"--------TIV BY Wiring year range--------\") \r",
							"\r",
							"\r",
							"// Validating OneRLD analysis Percentage for Fire Protection === Central\r",
							"pm.test(\"Validating OneRLD analysis Percentage for Fire Protection === Central\", () => {\r",
							"    const fireProtectionCentral = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"Central\");\r",
							"    pm.expect(fireProtectionCentral[\"Percentage\"]).to.eql(32.17455659215149); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis TIV for Fire Protection === Central\r",
							"pm.test(\"Validating OneRLD analysis TIV for Fire Protection === Central\", () => {\r",
							"    const fireProtectionCentral = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"Central\");\r",
							"    pm.expect(fireProtectionCentral[\"TIV\"]).to.eql(11805357401); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Fire Protection for Fire Protection === Central\r",
							"pm.test(\"Validating OneRLD analysis Fire Protection for Fire Protection === Central\", () => {\r",
							"    const fireProtectionCentral = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"Central\");\r",
							"    pm.expect(fireProtectionCentral[\"Fire Protection\"]).to.eql(\"Central\"); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Percentage for Fire Protection === Local\r",
							"pm.test(\"Validating OneRLD analysis Percentage for Fire Protection === Local\", () => {\r",
							"    const fireProtectionLocal = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"Local\");\r",
							"    pm.expect(fireProtectionLocal[\"Percentage\"]).to.eql(13.870799779359103); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis TIV for Fire Protection === Local\r",
							"pm.test(\"Validating OneRLD analysis TIV for Fire Protection === Local\", () => {\r",
							"    const fireProtectionLocal = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"Local\");\r",
							"    pm.expect(fireProtectionLocal[\"TIV\"]).to.eql(5089417421); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Fire Protection for Fire Protection === Local\r",
							"pm.test(\"Validating OneRLD analysis Fire Protection for Fire Protection === Local\", () => {\r",
							"    const fireProtectionLocal = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"Local\");\r",
							"    pm.expect(fireProtectionLocal[\"Fire Protection\"]).to.eql(\"Local\"); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Percentage for Fire Protection === None\r",
							"pm.test(\"Validating OneRLD analysis Percentage for Fire Protection === None\", () => {\r",
							"    const fireProtectionNone = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"None\");\r",
							"    pm.expect(fireProtectionNone[\"Percentage\"]).to.eql(53.95464362848941); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis TIV for Fire Protection === None\r",
							"pm.test(\"Validating OneRLD analysis TIV for Fire Protection === None\", () => {\r",
							"    const fireProtectionNone = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"None\");\r",
							"    pm.expect(fireProtectionNone[\"TIV\"]).to.eql(19796818323); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Fire Protection for Fire Protection === None\r",
							"pm.test(\"Validating OneRLD analysis Fire Protection for Fire Protection === None\", () => {\r",
							"    const fireProtectionNone = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"None\");\r",
							"    pm.expect(fireProtectionNone[\"Fire Protection\"]).to.eql(\"None\"); \r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"TIV\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Fire Protection\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "CoverageB/Roof meterial",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"//const data1 = JSON(responseJson);\r",
							" console.log(\"--------TIV BY HVAC year range--------\") \r",
							"\r",
							"\r",
							"// Validating OneRLD analysis Percentage for Roof Construction === Barrel Tile\r",
							"pm.test(\"Validating OneRLD analysis Percentage for Roof Construction === Barrel Tile\", () => {\r",
							"    const roofConstructionBarrelTile = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Barrel Tile\");\r",
							"    pm.expect(roofConstructionBarrelTile[\"Percentage\"]).to.eql(12.912280488179245);\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Value Other Structures for Roof Construction === Barrel Tile\r",
							"pm.test(\"Validating OneRLD analysis Value Other Structures for Roof Construction === Barrel Tile\", () => {\r",
							"    const roofConstructionBarrelTile = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Barrel Tile\");\r",
							"    pm.expect(roofConstructionBarrelTile[\"Value Other Structures\"]).to.eql(193464920);\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Percentage for Roof Construction === Membrane\r",
							"pm.test(\"Validating OneRLD analysis Percentage for Roof Construction === Membrane\", () => {\r",
							"    const roofConstructionMembrane = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Membrane\");\r",
							"    pm.expect(roofConstructionMembrane[\"Percentage\"]).to.eql(1.5276011347287284);\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Value Other Structures for Roof Construction === Membrane\r",
							"pm.test(\"Validating OneRLD analysis Value Other Structures for Roof Construction === Membrane\", () => {\r",
							"    const roofConstructionMembrane = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Membrane\");\r",
							"    pm.expect(roofConstructionMembrane[\"Value Other Structures\"]).to.eql(22888074);\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Percentage for Roof Construction === Metal\r",
							"pm.test(\"Validating OneRLD analysis Percentage for Roof Construction === Metal\", () => {\r",
							"    const roofConstructionMetal = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Metal\");\r",
							"    pm.expect(roofConstructionMetal[\"Percentage\"]).to.eql(15.798047791729319);\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Value Other Structures for Roof Construction === Metal\r",
							"pm.test(\"Validating OneRLD analysis Value Other Structures for Roof Construction === Metal\", () => {\r",
							"    const roofConstructionMetal = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Metal\");\r",
							"    pm.expect(roofConstructionMetal[\"Value Other Structures\"]).to.eql(236702421);\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Percentage for Roof Construction === Other\r",
							"pm.test(\"Validating OneRLD analysis Percentage for Roof Construction === Other\", () => {\r",
							"    const roofConstructionOther = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Other\");\r",
							"    pm.expect(roofConstructionOther[\"Percentage\"]).to.eql(0.21751760459007416);\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Value Other Structures for Roof Construction === Other\r",
							"pm.test(\"Validating OneRLD analysis Value Other Structures for Roof Construction === Other\", () => {\r",
							"    const roofConstructionOther = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Other\");\r",
							"    pm.expect(roofConstructionOther[\"Value Other Structures\"]).to.eql(3259070);\r",
							"});\r",
							"\r",
							"// Continue this pattern for the remaining Roof Construction categories...\r",
							"\r",
							"// Validating OneRLD analysis Percentage for Roof Construction === Unknown\r",
							"pm.test(\"Validating OneRLD analysis Percentage for Roof Construction === Unknown\", () => {\r",
							"    const roofConstructionUnknown = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Unknown\");\r",
							"    pm.expect(roofConstructionUnknown[\"Percentage\"]).to.eql(0.026988289204487762);\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Value Other Structures for Roof Construction === Unknown\r",
							"pm.test(\"Validating OneRLD analysis Value Other Structures for Roof Construction === Unknown\", () => {\r",
							"    const roofConstructionUnknown = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Unknown\");\r",
							"    pm.expect(roofConstructionUnknown[\"Value Other Structures\"]).to.eql(404366);\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Percentage for Roof Construction === Wood Shake\r",
							"pm.test(\"Validating OneRLD analysis Percentage for Roof Construction === Wood Shake\", () => {\r",
							"    const roofConstructionWoodShake = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Wood Shake\");\r",
							"    pm.expect(roofConstructionWoodShake[\"Percentage\"]).to.eql(1.6573621822224236);\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Value Other Structures for Roof Construction === Wood Shake\r",
							"pm.test(\"Validating OneRLD analysis Value Other Structures for Roof Construction === Wood Shake\", () => {\r",
							"    const roofConstructionWoodShake = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Wood Shake\");\r",
							"    pm.expect(roofConstructionWoodShake[\"Value Other Structures\"]).to.eql(24832286);\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Roof Construction for Barrel Tile\r",
							"pm.test(\"Validating OneRLD analysis Roof Construction for Barrel Tile\", () => {\r",
							"    const roofConstructionBarrelTile = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Barrel Tile\");\r",
							"    pm.expect(roofConstructionBarrelTile[\"Roof Construction\"]).to.eql(\"Barrel Tile\");\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Roof Construction for Membrane\r",
							"pm.test(\"Validating OneRLD analysis Roof Construction for Membrane\", () => {\r",
							"    const roofConstructionMembrane = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Membrane\");\r",
							"    pm.expect(roofConstructionMembrane[\"Roof Construction\"]).to.eql(\"Membrane\");\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Roof Construction for Metal\r",
							"pm.test(\"Validating OneRLD analysis Roof Construction for Metal\", () => {\r",
							"    const roofConstructionMetal = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Metal\");\r",
							"    pm.expect(roofConstructionMetal[\"Roof Construction\"]).to.eql(\"Metal\");\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Roof Construction for Other\r",
							"pm.test(\"Validating OneRLD analysis Roof Construction for Other\", () => {\r",
							"    const roofConstructionOther = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Other\");\r",
							"    pm.expect(roofConstructionOther[\"Roof Construction\"]).to.eql(\"Other\");\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Roof Construction for Poured Concrete\r",
							"pm.test(\"Validating OneRLD analysis Roof Construction for Poured Concrete\", () => {\r",
							"    const roofConstructionPouredConcrete = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Poured Concrete\");\r",
							"    pm.expect(roofConstructionPouredConcrete[\"Roof Construction\"]).to.eql(\"Poured Concrete\");\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Roof Construction for Shingle\r",
							"pm.test(\"Validating OneRLD analysis Roof Construction for Shingle\", () => {\r",
							"    const roofConstructionShingle = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Shingle\");\r",
							"    pm.expect(roofConstructionShingle[\"Roof Construction\"]).to.eql(\"Shingle\");\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Roof Construction for Slate\r",
							"pm.test(\"Validating OneRLD analysis Roof Construction for Slate\", () => {\r",
							"    const roofConstructionSlate = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Slate\");\r",
							"    pm.expect(roofConstructionSlate[\"Roof Construction\"]).to.eql(\"Slate\");\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Roof Construction for Tar & Gravel\r",
							"pm.test(\"Validating OneRLD analysis Roof Construction for Tar & Gravel\", () => {\r",
							"    const roofConstructionTarGravel = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Tar & Gravel\");\r",
							"    pm.expect(roofConstructionTarGravel[\"Roof Construction\"]).to.eql(\"Tar & Gravel\");\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Roof Construction for Tile\r",
							"pm.test(\"Validating OneRLD analysis Roof Construction for Tile\", () => {\r",
							"    const roofConstructionTile = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Tile\");\r",
							"    pm.expect(roofConstructionTile[\"Roof Construction\"]).to.eql(\"Tile\");\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Roof Construction for Unknown\r",
							"pm.test(\"Validating OneRLD analysis Roof Construction for Unknown\", () => {\r",
							"    const roofConstructionUnknown = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Unknown\");\r",
							"    pm.expect(roofConstructionUnknown[\"Roof Construction\"]).to.eql(\"Unknown\");\r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Roof Construction for Wood Shake\r",
							"pm.test(\"Validating OneRLD analysis Roof Construction for Wood Shake\", () => {\r",
							"    const roofConstructionWoodShake = responseJson.Value.Analysis0.find(item => item[\"Roof Construction\"] === \"Wood Shake\");\r",
							"    pm.expect(roofConstructionWoodShake[\"Roof Construction\"]).to.eql(\"Wood Shake\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"Value Other Structures\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Roof Construction\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "CoverageD/TIV",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"//const data1 = JSON(responseJson);\r",
							"console.log(\"--------TIV BY Roof year range--------\")\r",
							"\r",
							"\r",
							"// Validating Percentage for TIV Range === <1M\r",
							"pm.test(\"Validating Percentage for TIV Range === <1M\", () => {\r",
							"    const tivRangeLessThan1M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"<1M\");\r",
							"    pm.expect(tivRangeLessThan1M[\"Percentage\"]).to.eql(51.000220866230194);\r",
							"});\r",
							"\r",
							"// Validating TIV.Bins for TIV Range === <1M\r",
							"pm.test(\"Validating TIV.Bins for TIV Range === <1M\", () => {\r",
							"    const tivRangeLessThan1M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"<1M\");\r",
							"    pm.expect(tivRangeLessThan1M[\"TIV.Bins\"]).to.eql(1);\r",
							"});\r",
							"\r",
							"// Validating Value Business Interruption for TIV Range === <1M\r",
							"pm.test(\"Validating Value Business Interruption for TIV Range === <1M\", () => {\r",
							"    const tivRangeLessThan1M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"<1M\");\r",
							"    pm.expect(tivRangeLessThan1M[\"Value Business Interruption\"]).to.eql(1367109573);\r",
							"});\r",
							"\r",
							"// Validating Percentage for TIV Range === 1M -5M\r",
							"pm.test(\"Validating Percentage for TIV Range === 1M -5M\", () => {\r",
							"    const tivRange1MTo5M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"1M -5M\");\r",
							"    pm.expect(tivRange1MTo5M[\"Percentage\"]).to.eql(47.622220512228985);\r",
							"});\r",
							"\r",
							"// Validating TIV.Bins for TIV Range === 1M -5M\r",
							"pm.test(\"Validating TIV.Bins for TIV Range === 1M -5M\", () => {\r",
							"    const tivRange1MTo5M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"1M -5M\");\r",
							"    pm.expect(tivRange1MTo5M[\"TIV.Bins\"]).to.eql(2);\r",
							"});\r",
							"\r",
							"// Validating Value Business Interruption for TIV Range === 1M -5M\r",
							"pm.test(\"Validating Value Business Interruption for TIV Range === 1M -5M\", () => {\r",
							"    const tivRange1MTo5M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"1M -5M\");\r",
							"    pm.expect(tivRange1MTo5M[\"Value Business Interruption\"]).to.eql(1276559051);\r",
							"});\r",
							"\r",
							"// Validating Percentage for TIV Range === 5M – 10M\r",
							"pm.test(\"Validating Percentage for TIV Range === 5M – 10M\", () => {\r",
							"    const tivRange5MTo10M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"5M – 10M\");\r",
							"    pm.expect(tivRange5MTo10M[\"Percentage\"]).to.eql(1.1916710382980635);\r",
							"});\r",
							"\r",
							"// Validating TIV.Bins for TIV Range === 5M – 10M\r",
							"pm.test(\"Validating TIV.Bins for TIV Range === 5M – 10M\", () => {\r",
							"    const tivRange5MTo10M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"5M – 10M\");\r",
							"    pm.expect(tivRange5MTo10M[\"TIV.Bins\"]).to.eql(3);\r",
							"});\r",
							"\r",
							"// Validating Value Business Interruption for TIV Range === 5M – 10M\r",
							"pm.test(\"Validating Value Business Interruption for TIV Range === 5M – 10M\", () => {\r",
							"    const tivRange5MTo10M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"5M – 10M\");\r",
							"    pm.expect(tivRange5MTo10M[\"Value Business Interruption\"]).to.eql(31943879);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Percentage for TIV Range === 10M -50M\r",
							"pm.test(\"Validating Percentage for TIV Range === 10M -50M\", () => {\r",
							"    const tivRange10MTo50M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"10M -50M\");\r",
							"    pm.expect(tivRange10MTo50M[\"Percentage\"]).to.eql(0.1858875832427612);\r",
							"});\r",
							"\r",
							"// Validating TIV.Bins for TIV Range === 10M -50M\r",
							"pm.test(\"Validating TIV.Bins for TIV Range === 10M -50M\", () => {\r",
							"    const tivRange10MTo50M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"10M -50M\");\r",
							"    pm.expect(tivRange10MTo50M[\"TIV.Bins\"]).to.eql(4);\r",
							"});\r",
							"\r",
							"// Validating Value Business Interruption for TIV Range === 10M -50M\r",
							"pm.test(\"Validating Value Business Interruption for TIV Range === 10M -50M\", () => {\r",
							"    const tivRange10MTo50M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"10M -50M\");\r",
							"    pm.expect(tivRange10MTo50M[\"Value Business Interruption\"]).to.eql(4982894);\r",
							"});\r",
							"\r",
							"// Validating Percentage for TIV Range === 50M-100M\r",
							"pm.test(\"Validating Percentage for TIV Range === 50M-100M\", () => {\r",
							"    const tivRange50MTo100M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"50M-100M\");\r",
							"    pm.expect(tivRange50MTo100M[\"Percentage\"]).to.eql(0);\r",
							"});\r",
							"\r",
							"// Validating TIV.Bins for TIV Range === 50M-100M\r",
							"pm.test(\"Validating TIV.Bins for TIV Range === 50M-100M\", () => {\r",
							"    const tivRange50MTo100M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"50M-100M\");\r",
							"    pm.expect(tivRange50MTo100M[\"TIV.Bins\"]).to.eql(5);\r",
							"});\r",
							"\r",
							"// Validating Value Business Interruption for TIV Range === 50M-100M\r",
							"pm.test(\"Validating Value Business Interruption for TIV Range === 50M-100M\", () => {\r",
							"    const tivRange50MTo100M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"50M-100M\");\r",
							"    pm.expect(tivRange50MTo100M[\"Value Business Interruption\"]).to.eql(0);\r",
							"});\r",
							"\r",
							"// Validating Percentage for TIV Range === 100M-500M\r",
							"pm.test(\"Validating Percentage for TIV Range === 100M-500M\", () => {\r",
							"    const tivRange100MTo500M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"100M-500M\");\r",
							"    pm.expect(tivRange100MTo500M[\"Percentage\"]).to.eql(0);\r",
							"});\r",
							"\r",
							"// Validating TIV.Bins for TIV Range === 100M-500M\r",
							"pm.test(\"Validating TIV.Bins for TIV Range === 100M-500M\", () => {\r",
							"    const tivRange100MTo500M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"100M-500M\");\r",
							"    pm.expect(tivRange100MTo500M[\"TIV.Bins\"]).to.eql(6);\r",
							"});\r",
							"\r",
							"// Validating Value Business Interruption for TIV Range === 100M-500M\r",
							"pm.test(\"Validating Value Business Interruption for TIV Range === 100M-500M\", () => {\r",
							"    const tivRange100MTo500M = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"100M-500M\");\r",
							"    pm.expect(tivRange100MTo500M[\"Value Business Interruption\"]).to.eql(0);\r",
							"});\r",
							"\r",
							"// Validating Percentage for TIV Range === 500M-1B\r",
							"pm.test(\"Validating Percentage for TIV Range === 500M-1B\", () => {\r",
							"    const tivRange500MTo1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"500M-1B\");\r",
							"    pm.expect(tivRange500MTo1B[\"Percentage\"]).to.eql(0);\r",
							"});\r",
							"\r",
							"// Validating TIV.Bins for TIV Range === 500M-1B\r",
							"pm.test(\"Validating TIV.Bins for TIV Range === 500M-1B\", () => {\r",
							"    const tivRange500MTo1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"500M-1B\");\r",
							"    pm.expect(tivRange500MTo1B[\"TIV.Bins\"]).to.eql(7);\r",
							"});\r",
							"\r",
							"// Validating Value Business Interruption for TIV Range === 500M-1B\r",
							"pm.test(\"Validating Value Business Interruption for TIV Range === 500M-1B\", () => {\r",
							"    const tivRange500MTo1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \"500M-1B\");\r",
							"    pm.expect(tivRange500MTo1B[\"Value Business Interruption\"]).to.eql(0);\r",
							"});\r",
							"\r",
							"// Validating Percentage for TIV Range === >1B\r",
							"pm.test(\"Validating Percentage for TIV Range === >1B\", () => {\r",
							"    const tivRangeGreaterThan1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \">1B\");\r",
							"    pm.expect(tivRangeGreaterThan1B[\"Percentage\"]).to.eql(0);\r",
							"});\r",
							"\r",
							"// Validating TIV.Bins for TIV Range === >1B\r",
							"pm.test(\"Validating TIV.Bins for TIV Range === >1B\", () => {\r",
							"    const tivRangeGreaterThan1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \">1B\");\r",
							"    pm.expect(tivRangeGreaterThan1B[\"TIV.Bins\"]).to.eql(8);\r",
							"});\r",
							"\r",
							"// Validating Value Business Interruption for TIV Range === >1B\r",
							"pm.test(\"Validating Value Business Interruption for TIV Range === >1B\", () => {\r",
							"    const tivRangeGreaterThan1B = responseJson.Value.Analysis0.find(item => item[\"TIV Range\"] === \">1B\");\r",
							"    pm.expect(tivRangeGreaterThan1B[\"Value Business Interruption\"]).to.eql(0);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"Value Business Interruption\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"TIV\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tiv/PC Class",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"//const data1 = JSON(responseJson);\r",
							" console.log(\"--------TIV BY Plumbing year Range--------\") \r",
							"\r",
							"\r",
							"// Validating Percentage for Protection Class === 2\r",
							"pm.test(\"Validating Percentage for Protection Class === 2\", () => {\r",
							"    const protectionClass2 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"2\");\r",
							"    pm.expect(protectionClass2[\"Percentage\"]).to.eql(20.566645196294324);\r",
							"});\r",
							"\r",
							"// Validating TIV for Protection Class === 2\r",
							"pm.test(\"Validating TIV for Protection Class === 2\", () => {\r",
							"    const protectionClass2 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"2\");\r",
							"    pm.expect(protectionClass2[\"TIV\"]).to.eql(7546229779);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Protection Class === 1\r",
							"pm.test(\"Validating Percentage for Protection Class === 1\", () => {\r",
							"    const protectionClass1 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"1\");\r",
							"    pm.expect(protectionClass1[\"Percentage\"]).to.eql(13.011419749841446);\r",
							"});\r",
							"\r",
							"// Validating TIV for Protection Class === 1\r",
							"pm.test(\"Validating TIV for Protection Class === 1\", () => {\r",
							"    const protectionClass1 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"1\");\r",
							"    pm.expect(protectionClass1[\"TIV\"]).to.eql(4774097197);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Protection Class === 3\r",
							"pm.test(\"Validating Percentage for Protection Class === 3\", () => {\r",
							"    const protectionClass3 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"3\");\r",
							"    pm.expect(protectionClass3[\"Percentage\"]).to.eql(23.13732506640112);\r",
							"});\r",
							"\r",
							"// Validating TIV for Protection Class === 3\r",
							"pm.test(\"Validating TIV for Protection Class === 3\", () => {\r",
							"    const protectionClass3 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"3\");\r",
							"    pm.expect(protectionClass3[\"TIV\"]).to.eql(8489453178);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Protection Class === 4\r",
							"pm.test(\"Validating Percentage for Protection Class === 4\", () => {\r",
							"    const protectionClass4 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"4\");\r",
							"    pm.expect(protectionClass4[\"Percentage\"]).to.eql(33.76261824621298);\r",
							"});\r",
							"\r",
							"// Validating TIV for Protection Class === 4\r",
							"pm.test(\"Validating TIV for Protection Class === 4\", () => {\r",
							"    const protectionClass4 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"4\");\r",
							"    pm.expect(protectionClass4[\"TIV\"]).to.eql(12388042522);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Protection Class === 5\r",
							"pm.test(\"Validating Percentage for Protection Class === 5\", () => {\r",
							"    const protectionClass5 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"5\");\r",
							"    pm.expect(protectionClass5[\"Percentage\"]).to.eql(5.732878931387159);\r",
							"});\r",
							"\r",
							"// Validating TIV for Protection Class === 5\r",
							"pm.test(\"Validating TIV for Protection Class === 5\", () => {\r",
							"    const protectionClass5 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"5\");\r",
							"    pm.expect(protectionClass5[\"TIV\"]).to.eql(2103484613);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Protection Class === 6\r",
							"pm.test(\"Validating Percentage for Protection Class === 6\", () => {\r",
							"    const protectionClass6 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"6\");\r",
							"    pm.expect(protectionClass6[\"Percentage\"]).to.eql(2.2396896688362644);\r",
							"});\r",
							"\r",
							"// Validating TIV for Protection Class === 6\r",
							"pm.test(\"Validating TIV for Protection Class === 6\", () => {\r",
							"    const protectionClass6 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"6\");\r",
							"    pm.expect(protectionClass6[\"TIV\"]).to.eql(821777821);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Protection Class === 7\r",
							"pm.test(\"Validating Percentage for Protection Class === 7\", () => {\r",
							"    const protectionClass7 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"7\");\r",
							"    pm.expect(protectionClass7[\"Percentage\"]).to.eql(0.5697791267166303);\r",
							"});\r",
							"\r",
							"// Validating TIV for Protection Class === 7\r",
							"pm.test(\"Validating TIV for Protection Class === 7\", () => {\r",
							"    const protectionClass7 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"7\");\r",
							"    pm.expect(protectionClass7[\"TIV\"]).to.eql(209061039);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Protection Class === 8\r",
							"pm.test(\"Validating Percentage for Protection Class === 8\", () => {\r",
							"    const protectionClass8 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"8\");\r",
							"    pm.expect(protectionClass8[\"Percentage\"]).to.eql(0.5135676127643926);\r",
							"});\r",
							"\r",
							"// Validating TIV for Protection Class === 8\r",
							"pm.test(\"Validating TIV for Protection Class === 8\", () => {\r",
							"    const protectionClass8 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"8\");\r",
							"    pm.expect(protectionClass8[\"TIV\"]).to.eql(188436139);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Protection Class === 9\r",
							"pm.test(\"Validating Percentage for Protection Class === 9\", () => {\r",
							"    const protectionClass9 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"9\");\r",
							"    pm.expect(protectionClass9[\"Percentage\"]).to.eql(0.33981963799517106);\r",
							"});\r",
							"\r",
							"// Validating TIV for Protection Class === 9\r",
							"pm.test(\"Validating TIV for Protection Class === 9\", () => {\r",
							"    const protectionClass9 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"9\");\r",
							"    pm.expect(protectionClass9[\"TIV\"]).to.eql(124685239);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Protection Class === 10\r",
							"pm.test(\"Validating Percentage for Protection Class === 10\", () => {\r",
							"    const protectionClass10 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"10\");\r",
							"    pm.expect(protectionClass10[\"Percentage\"]).to.eql(0.12625676355051602);\r",
							"});\r",
							"\r",
							"// Validating TIV for Protection Class === 10\r",
							"pm.test(\"Validating TIV for Protection Class === 10\", () => {\r",
							"    const protectionClass10 = responseJson.Value.Analysis0.find(item => item[\"Protection Class\"] === \"10\");\r",
							"    pm.expect(protectionClass10[\"TIV\"]).to.eql(46325618);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"TIV\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Protection Class\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tiv / Roof Dock Atachment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log('--------TIV BY Distance To Coast Range--------')\r",
							"\r",
							"// Validating analysis Percentage for Custom Enum 3 === \"\"\r",
							"pm.test(\"Validating analysis Percentage for Custom Enum 3 === ''\", () => {\r",
							"    const customEnum3Empty = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"\");\r",
							"    pm.expect(customEnum3Empty[\"Percentage\"]).to.eql(18.063656701434844);\r",
							"});\r",
							"\r",
							"// Validating analysis TIV for Custom Enum 3 === \"\"\r",
							"pm.test(\"Validating analysis TIV for Custom Enum 3 === ''\", () => {\r",
							"    const customEnum3Empty = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"\");\r",
							"    pm.expect(customEnum3Empty[\"TIV\"]).to.eql(6627843424);\r",
							"});\r",
							"\r",
							"// Validating analysis Custom Enum 3 for Custom Enum 3 === \"\"\r",
							"pm.test(\"Validating analysis Custom Enum 3 for Custom Enum 3 === ''\", () => {\r",
							"    const customEnum3Empty = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"\");\r",
							"    pm.expect(customEnum3Empty[\"Custom Enum 3\"]).to.eql(\"\");\r",
							"});\r",
							"\r",
							"// Validating analysis Percentage for Custom Enum 3 === \"10dNailsHighWind\"\r",
							"pm.test(\"Validating analysis Percentage for Custom Enum 3 === '10dNailsHighWind'\", () => {\r",
							"    const customEnum310dNailsHighWind = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"10dNailsHighWind\");\r",
							"    pm.expect(customEnum310dNailsHighWind[\"Percentage\"]).to.eql(1.8552312223399914);\r",
							"});\r",
							"\r",
							"// Validating analysis TIV for Custom Enum 3 === \"10dNailsHighWind\"\r",
							"pm.test(\"Validating analysis TIV for Custom Enum 3 === '10dNailsHighWind'\", () => {\r",
							"    const customEnum310dNailsHighWind = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"10dNailsHighWind\");\r",
							"    pm.expect(customEnum310dNailsHighWind[\"TIV\"]).to.eql(680713892);\r",
							"});\r",
							"\r",
							"// Validating analysis Custom Enum 3 for Custom Enum 3 === \"10dNailsHighWind\"\r",
							"pm.test(\"Validating analysis Custom Enum 3 for Custom Enum 3 === '10dNailsHighWind'\", () => {\r",
							"    const customEnum310dNailsHighWind = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"10dNailsHighWind\");\r",
							"    pm.expect(customEnum310dNailsHighWind[\"Custom Enum 3\"]).to.eql(\"10dNailsHighWind\");\r",
							"});\r",
							"\r",
							"// Validating analysis Percentage for Custom Enum 3 === \"\"\r",
							"pm.test(\"Validating analysis Percentage for Custom Enum 3 === ''\", () => {\r",
							"    const customEnum3Empty = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"\");\r",
							"    pm.expect(customEnum3Empty[\"Percentage\"]).to.eql(18.063656701434844);\r",
							"});\r",
							"\r",
							"// Validating analysis TIV for Custom Enum 3 === \"\"\r",
							"pm.test(\"Validating analysis TIV for Custom Enum 3 === ''\", () => {\r",
							"    const customEnum3Empty = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"\");\r",
							"    pm.expect(customEnum3Empty[\"TIV\"]).to.eql(6627843424);\r",
							"});\r",
							"\r",
							"// Validating analysis Custom Enum 3 for Custom Enum 3 === \"\"\r",
							"pm.test(\"Validating analysis Custom Enum 3 for Custom Enum 3 === ''\", () => {\r",
							"    const customEnum3Empty = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"\");\r",
							"    pm.expect(customEnum3Empty[\"Custom Enum 3\"]).to.eql(\"\");\r",
							"});\r",
							"\r",
							"// Validating analysis Percentage for Custom Enum 3 === \"10dNailsHighWind\"\r",
							"pm.test(\"Validating analysis Percentage for Custom Enum 3 === '10dNailsHighWind'\", () => {\r",
							"    const customEnum310dNailsHighWind = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"10dNailsHighWind\");\r",
							"    pm.expect(customEnum310dNailsHighWind[\"Percentage\"]).to.eql(1.8552312223399914);\r",
							"});\r",
							"\r",
							"// Validating analysis TIV for Custom Enum 3 === \"10dNailsHighWind\"\r",
							"pm.test(\"Validating analysis TIV for Custom Enum 3 === '10dNailsHighWind'\", () => {\r",
							"    const customEnum310dNailsHighWind = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"10dNailsHighWind\");\r",
							"    pm.expect(customEnum310dNailsHighWind[\"TIV\"]).to.eql(680713892);\r",
							"});\r",
							"\r",
							"// Validating analysis Custom Enum 3 for Custom Enum 3 === \"10dNailsHighWind\"\r",
							"pm.test(\"Validating analysis Custom Enum 3 for Custom Enum 3 === '10dNailsHighWind'\", () => {\r",
							"    const customEnum310dNailsHighWind = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"10dNailsHighWind\");\r",
							"    pm.expect(customEnum310dNailsHighWind[\"Custom Enum 3\"]).to.eql(\"10dNailsHighWind\");\r",
							"});\r",
							"\r",
							"// Validating analysis Percentage for Custom Enum 3 === \"6dNailsAny\"\r",
							"pm.test(\"Validating analysis Percentage for Custom Enum 3 === '6dNailsAny'\", () => {\r",
							"    const customEnum36dNailsAny = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"6dNailsAny\");\r",
							"    pm.expect(customEnum36dNailsAny[\"Percentage\"]).to.eql(2.7348130565890694);\r",
							"});\r",
							"\r",
							"// Validating analysis TIV for Custom Enum 3 === \"6dNailsAny\"\r",
							"pm.test(\"Validating analysis TIV for Custom Enum 3 === '6dNailsAny'\", () => {\r",
							"    const customEnum36dNailsAny = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"6dNailsAny\");\r",
							"    pm.expect(customEnum36dNailsAny[\"TIV\"]).to.eql(1003446480);\r",
							"});\r",
							"\r",
							"// Validating analysis Custom Enum 3 for Custom Enum 3 === \"6dNailsAny\"\r",
							"pm.test(\"Validating analysis Custom Enum 3 for Custom Enum 3 === '6dNailsAny'\", () => {\r",
							"    const customEnum36dNailsAny = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"6dNailsAny\");\r",
							"    pm.expect(customEnum36dNailsAny[\"Custom Enum 3\"]).to.eql(\"6dNailsAny\");\r",
							"});\r",
							"\r",
							"// Validating analysis Percentage for Custom Enum 3 === \"8dNailsHighWind\"\r",
							"pm.test(\"Validating analysis Percentage for Custom Enum 3 === '8dNailsHighWind'\", () => {\r",
							"    const customEnum38dNailsHighWind = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"8dNailsHighWind\");\r",
							"    pm.expect(customEnum38dNailsHighWind[\"Percentage\"]).to.eql(16.299581199337972);\r",
							"});\r",
							"\r",
							"// Validating analysis TIV for Custom Enum 3 === \"8dNailsHighWind\"\r",
							"pm.test(\"Validating analysis TIV for Custom Enum 3 === '8dNailsHighWind'\", () => {\r",
							"    const customEnum38dNailsHighWind = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"8dNailsHighWind\");\r",
							"    pm.expect(customEnum38dNailsHighWind[\"TIV\"]).to.eql(5980576018);\r",
							"});\r",
							"\r",
							"// Validating analysis Custom Enum 3 for Custom Enum 3 === \"8dNailsHighWind\"\r",
							"pm.test(\"Validating analysis Custom Enum 3 for Custom Enum 3 === '8dNailsHighWind'\", () => {\r",
							"    const customEnum38dNailsHighWind = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"Unknown\");\r",
							"    pm.expect(customEnum38dNailsHighWind[\"Percentage\"]).to.eql(58.940485177452764);\r",
							"});\r",
							"\r",
							"// Validating analysis Percentage for Custom Enum 3 === Unknown\r",
							"pm.test(\"Validating analysis Percentage for Custom Enum 3 === Unknown\", () => {\r",
							"    const customEnum3Unknown = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"Unknown\");\r",
							"    pm.expect(customEnum3Unknown[\"Percentage\"]).to.eql(58.940485177452764);\r",
							"});\r",
							"\r",
							"// Validating analysis TIV for Custom Enum 3 === Unknown\r",
							"pm.test(\"Validating analysis TIV for Custom Enum 3 === Unknown\", () => {\r",
							"    const customEnum3Unknown = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"Unknown\");\r",
							"    pm.expect(customEnum3Unknown[\"TIV\"]).to.eql(21626203019);\r",
							"});\r",
							"\r",
							"// Validating analysis Custom Enum 3 for Custom Enum 3 === Unknown\r",
							"pm.test(\"Validating analysis Custom Enum 3 for Custom Enum 3 === Unknown\", () => {\r",
							"    const customEnum3Unknown = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 3\"] === \"Unknown\");\r",
							"    pm.expect(customEnum3Unknown[\"Custom Enum 3\"]).to.eql(\"Unknown\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"GroupByMeasures\":[\"TIV\"],\"GroupByAttributes\":[\"Custom Enum 3\"],\"includeAllBins\":true}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "CovergeB/Agency code range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log(\"--------TIV BY Area--------\") \r",
							"\r",
							"// Validating Om - 2212 Fleet(copy) analysis Percentage for AGY2254\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for AGY2254\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY2254\");\r",
							"    pm.expect(agentData[\"Percentage\"]).to.eql(0.0200266740000361);\r",
							"});\r",
							"\r",
							"// Validating Om - 2212 Fleet(copy) analysis Value for AGY2254\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value for AGY2254\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY2254\");\r",
							"    pm.expect(agentData[\"Value Other Structures\"]).to.eql(300060);\r",
							"});\r",
							"\r",
							"\r",
							"// Example for AGY2259\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for AGY2259\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY2259\");\r",
							"    pm.expect(agentData[\"Percentage\"]).to.eql(0.02661927140622675);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value for AGY2259\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY2259\");\r",
							"    pm.expect(agentData[\"Value Other Structures\"]).to.eql(398837);\r",
							"});\r",
							"\r",
							"// Validating Om - 2212 Fleet(copy) analysis Percentage for AGY2261\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for AGY2261\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY2261\");\r",
							"    pm.expect(agentData[\"Percentage\"]).to.eql(0.15698426935325238);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value for AGY2261\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY2261\");\r",
							"    pm.expect(agentData[\"Value Other Structures\"]).to.eql(2352098);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for AGY2262\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY2262\");\r",
							"    pm.expect(agentData[\"Percentage\"]).to.eql(0.009116988830250389);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value for AGY2262\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY2262\");\r",
							"    pm.expect(agentData[\"Value Other Structures\"]).to.eql(136600);\r",
							"});\r",
							"\r",
							"// Validating Om - 2212 Fleet(copy) analysis Percentage for LMA940\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for LMA940\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA940\");\r",
							"    pm.expect(agentData[\"Percentage\"]).to.eql(0.0099108209323514);\r",
							"});\r",
							"\r",
							"// Validating Om - 2212 Fleet(copy) analysis Value for LMA940\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value for LMA940\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA940\");\r",
							"    pm.expect(agentData[\"Value Other Structures\"]).to.eql(148494);\r",
							"});\r",
							"\r",
							"// Repeat for LMA972\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for LMA972\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA972\");\r",
							"    pm.expect(agentData[\"Percentage\"]).to.eql(0.026343826216604176);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value for LMA972\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA972\");\r",
							"    pm.expect(agentData[\"Value Other Structures\"]).to.eql(394710);\r",
							"});\r",
							"\r",
							"\r",
							"// Example for LMA981\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for LMA981\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA981\");\r",
							"    pm.expect(agentData[\"Percentage\"]).to.eql(0.0020763508236390157);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value for LMA981\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA981\");\r",
							"    pm.expect(agentData[\"Value Other Structures\"]).to.eql(31110);\r",
							"});\r",
							"\r",
							"// Repeat for LMA987\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for LMA987\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA987\");\r",
							"    pm.expect(agentData[\"Percentage\"]).to.eql(0.003156907552495193);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value for LMA987\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA987\");\r",
							"    pm.expect(agentData[\"Value Other Structures\"]).to.eql(47300);\r",
							"});\r",
							"\r",
							"// Repeat for LMA989\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for LMA989\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA989\");\r",
							"    pm.expect(agentData[\"Percentage\"]).to.eql(0.006807707618488577);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value for LMA989\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA989\");\r",
							"    pm.expect(agentData[\"Value Other Structures\"]).to.eql(102000);\r",
							"});\r",
							"\r",
							"// Repeat for LMA990\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for LMA990\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA990\");\r",
							"    pm.expect(agentData[\"Percentage\"]).to.eql(0.0012814508458331437);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value for LMA990\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA990\");\r",
							"    pm.expect(agentData[\"Value Other Structures\"]).to.eql(19200);\r",
							"});\r",
							"\r",
							"// Repeat for LMA993\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for LMA993\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA993\");\r",
							"    pm.expect(agentData[\"Percentage\"]).to.eql(0.026028402430280873);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value for LMA993\", () => {\r",
							"    const agentData = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"LMA993\");\r",
							"    pm.expect(agentData[\"Value Other Structures\"]).to.eql(389984);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"Value Other Structures\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Agent\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "CoverageD/ Wind deductible range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"console.log(\"--------TIV BY Year Upgrade Range--------\")\r",
							"\r",
							"// Validating Om - 2212 Fleet(copy) analysis Percentage for Contract Custom Enum 4 === \"1%\"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for Contract Custom Enum 4 === '1%'\", () => {\r",
							"    const contractEnum1Percent = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"1%\");\r",
							"    pm.expect(contractEnum1Percent[\"Percentage\"]).to.eql(21.28882492444271);\r",
							"});\r",
							"\r",
							"// Validating Om - 2212 Fleet(copy) analysis Value Business Interruption for Contract Custom Enum 4 === \"1%\"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value Business Interruption for Contract Custom Enum 4 === '1%'\", () => {\r",
							"    const contractEnum1Percent = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"1%\");\r",
							"    pm.expect(contractEnum1Percent[\"Value Business Interruption\"]).to.eql(570667261);\r",
							"});\r",
							"\r",
							"// Validating Om - 2212 Fleet(copy) analysis Contract Custom Enum 4 for Contract Custom Enum 4 === \"1%\"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Contract Custom Enum 4 for Contract Custom Enum 4 === '1%'\", () => {\r",
							"    const contractEnum1Percent = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"1%\");\r",
							"    pm.expect(contractEnum1Percent[\"Contract Custom Enum 4\"]).to.eql(\"1%\");\r",
							"});\r",
							"\r",
							"\r",
							"// Assertion for \"10%\"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for Contract Custom Enum 4 === '10%'\", () => {\r",
							"    const contractEnum10Percent = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"10%\");\r",
							"    pm.expect(contractEnum10Percent[\"Percentage\"]).to.eql(2.437235028946071);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value Business Interruption for Contract Custom Enum 4 === '10%'\", () => {\r",
							"    const contractEnum10Percent = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"10%\");\r",
							"    pm.expect(contractEnum10Percent[\"Value Business Interruption\"]).to.eql(65332410);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Contract Custom Enum 4 for Contract Custom Enum 4 === '10%'\", () => {\r",
							"    const contractEnum10Percent = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"10%\");\r",
							"    pm.expect(contractEnum10Percent[\"Contract Custom Enum 4\"]).to.eql(\"10%\");\r",
							"});\r",
							"\r",
							"// Example for \"15%\"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for Contract Custom Enum 4 === '15%'\", () => {\r",
							"    const contractEnum15Percent = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"15%\");\r",
							"    pm.expect(contractEnum15Percent[\"Percentage\"]).to.eql(0.16550532038386545);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value Business Interruption for Contract Custom Enum 4 === '15%'\", () => {\r",
							"    const contractEnum15Percent = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"15%\");\r",
							"    pm.expect(contractEnum15Percent[\"Value Business Interruption\"]).to.eql(4436528);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Contract Custom Enum 4 for Contract Custom Enum 4 === '15%'\", () => {\r",
							"    const contractEnum15Percent = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"15%\");\r",
							"    pm.expect(contractEnum15Percent[\"Contract Custom Enum 4\"]).to.eql(\"15%\");\r",
							"});\r",
							"\r",
							"// Assertion for \"2%\"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for Contract Custom Enum 4 === '2%'\", () => {\r",
							"    const contractEnum2Percent = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"2%\");\r",
							"    pm.expect(contractEnum2Percent[\"Percentage\"]).to.eql(30.533145767391616);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value Business Interruption for Contract Custom Enum 4 === '2%'\", () => {\r",
							"    const contractEnum2Percent = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"2%\");\r",
							"    pm.expect(contractEnum2Percent[\"Value Business Interruption\"]).to.eql(818470100);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Contract Custom Enum 4 for Contract Custom Enum 4 === '2%'\", () => {\r",
							"    const contractEnum2Percent = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"2%\");\r",
							"    pm.expect(contractEnum2Percent[\"Contract Custom Enum 4\"]).to.eql(\"2%\");\r",
							"});\r",
							"\r",
							"\r",
							"// Assertion for \"AOP Deductible Applies\"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for Contract Custom Enum 4 === 'AOP Deductible Applies'\", () => {\r",
							"    const contractEnumAOP = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"AOP Deductible Applies\");\r",
							"    pm.expect(contractEnumAOP[\"Percentage\"]).to.eql(2.8353763154656346);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Value Business Interruption for Contract Custom Enum 4 === 'AOP Deductible Applies'\", () => {\r",
							"    const contractEnumAOP = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"AOP Deductible Applies\");\r",
							"    pm.expect(contractEnumAOP[\"Value Business Interruption\"]).to.eql(76004967);\r",
							"});\r",
							"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Contract Custom Enum 4 for Contract Custom Enum 4 === 'AOP Deductible Applies'\", () => {\r",
							"    const contractEnumAOP = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 4\"] === \"AOP Deductible Applies\");\r",
							"    pm.expect(contractEnumAOP[\"Contract Custom Enum 4\"]).to.eql(\"AOP Deductible Applies\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"Value Business Interruption\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Contract Custom Enum 4\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "GR AAL - RMS / Fire Alarm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"// Validating OneRLD analysis Percentage for Fire Protection === Central\r",
							"pm.test(\"Validating OneRLD analysis Percentage for Fire Protection === Central\", () => {\r",
							"    const fireProtectionCentral = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"Central\");\r",
							"    pm.expect(fireProtectionCentral[\"Percentage\"]).to.eql(31.789628263355223); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Gross AAL - CoL1 MDL1 for Fire Protection === Central\r",
							"pm.test(\"Validating OneRLD analysis Gross AAL - CoL1 MDL1 for Fire Protection === Central\", () => {\r",
							"    const fireProtectionCentral = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"Central\");\r",
							"    pm.expect(fireProtectionCentral[\"Gross AAL - CoL1 MDL1\"]).to.eql(12756723.169999963); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Fire Protection for Fire Protection === Central\r",
							"pm.test(\"Validating OneRLD analysis Fire Protection for Fire Protection === Central\", () => {\r",
							"    const fireProtectionCentral = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"Central\");\r",
							"    pm.expect(fireProtectionCentral[\"Fire Protection\"]).to.eql(\"Central\"); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Percentage for Fire Protection === Local\r",
							"pm.test(\"Validating OneRLD analysis Percentage for Fire Protection === Local\", () => {\r",
							"    const fireProtectionLocal = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"Local\");\r",
							"    pm.expect(fireProtectionLocal[\"Percentage\"]).to.eql(13.166827013813295); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Gross AAL - CoL1 MDL1 for Fire Protection === Local\r",
							"pm.test(\"Validating OneRLD analysis Gross AAL - CoL1 MDL1 for Fire Protection === Local\", () => {\r",
							"    const fireProtectionLocal = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"Local\");\r",
							"    pm.expect(fireProtectionLocal[\"Gross AAL - CoL1 MDL1\"]).to.eql(5283659.369999994); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Fire Protection for Fire Protection === Local\r",
							"pm.test(\"Validating OneRLD analysis Fire Protection for Fire Protection === Local\", () => {\r",
							"    const fireProtectionLocal = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"Local\");\r",
							"    pm.expect(fireProtectionLocal[\"Fire Protection\"]).to.eql(\"Local\"); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Percentage for Fire Protection === None\r",
							"pm.test(\"Validating OneRLD analysis Percentage for Fire Protection === None\", () => {\r",
							"    const fireProtectionNone = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"None\");\r",
							"    pm.expect(fireProtectionNone[\"Percentage\"]).to.eql(55.04354472283147); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Gross AAL - CoL1 MDL1 for Fire Protection === None\r",
							"pm.test(\"Validating OneRLD analysis Gross AAL - CoL1 MDL1 for Fire Protection === None\", () => {\r",
							"    const fireProtectionNone = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"None\");\r",
							"    pm.expect(fireProtectionNone[\"Gross AAL - CoL1 MDL1\"]).to.eql(22088187.269999947); \r",
							"});\r",
							"\r",
							"// Validating OneRLD analysis Fire Protection for Fire Protection === None\r",
							"pm.test(\"Validating OneRLD analysis Fire Protection for Fire Protection === None\", () => {\r",
							"    const fireProtectionNone = responseJson.Value.Analysis0.find(item => item[\"Fire Protection\"] === \"None\");\r",
							"    pm.expect(fireProtectionNone[\"Fire Protection\"]).to.eql(\"None\"); \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"Gross AAL - CoL1 MDL1\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Fire Protection\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "GR AAL - AIR/ PC class",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"// Validating Onerld analysis Percentage for Protection Class 1\r",
							"pm.test(\"Validating Onerld analysis Percentage for Protection Class 1\", () => {\r",
							"    const firstRow = responseJson.Value.Analysis0[0];\r",
							"    pm.expect(firstRow[\"Percentage\"]).to.eql(14.520351832066083);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Gross AAL for Protection Class 1\r",
							"pm.test(\"Validating Onerld analysis Gross AAL for Protection Class 1\", () => {\r",
							"    const firstRow = responseJson.Value.Analysis0[0];\r",
							"    pm.expect(firstRow[\"Gross AAL - CoL1 MDL2\"]).to.eql(11086363.799999971);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Protection Class for Protection Class 1\r",
							"pm.test(\"Validating Onerld analysis Protection Class for Protection Class 1\", () => {\r",
							"    const firstRow = responseJson.Value.Analysis0[0];\r",
							"    pm.expect(firstRow[\"Protection Class\"]).to.eql(\"1\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Protection Class 10\r",
							"pm.test(\"Validating Onerld analysis Percentage for Protection Class 10\", () => {\r",
							"    const secondRow = responseJson.Value.Analysis0[1];\r",
							"    pm.expect(secondRow[\"Percentage\"]).to.eql(0.03225149053615992);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Gross AAL for Protection Class 10\r",
							"pm.test(\"Validating Onerld analysis Gross AAL for Protection Class 10\", () => {\r",
							"    const secondRow = responseJson.Value.Analysis0[1];\r",
							"    pm.expect(secondRow[\"Gross AAL - CoL1 MDL2\"]).to.eql(24624.18);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Protection Class for Protection Class 10\r",
							"pm.test(\"Validating Onerld analysis Protection Class for Protection Class 10\", () => {\r",
							"    const secondRow = responseJson.Value.Analysis0[1];\r",
							"    pm.expect(secondRow[\"Protection Class\"]).to.eql(\"10\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Protection Class 2\r",
							"pm.test(\"Validating Onerld analysis Percentage for Protection Class 2\", () => {\r",
							"    const thirdRow = responseJson.Value.Analysis0[2];\r",
							"    pm.expect(thirdRow[\"Percentage\"]).to.eql(23.235903773091504);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Gross AAL for Protection Class 2\r",
							"pm.test(\"Validating Onerld analysis Gross AAL for Protection Class 2\", () => {\r",
							"    const thirdRow = responseJson.Value.Analysis0[2];\r",
							"    pm.expect(thirdRow[\"Gross AAL - CoL1 MDL2\"]).to.eql(17740732.82999993);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Protection Class for Protection Class 2\r",
							"pm.test(\"Validating Onerld analysis Protection Class for Protection Class 2\", () => {\r",
							"    const thirdRow = responseJson.Value.Analysis0[2];\r",
							"    pm.expect(thirdRow[\"Protection Class\"]).to.eql(\"2\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Protection Class 3\r",
							"pm.test(\"Validating Onerld analysis Percentage for Protection Class 3\", () => {\r",
							"    const fourthRow = responseJson.Value.Analysis0[3];\r",
							"    pm.expect(fourthRow[\"Percentage\"]).to.eql(26.423080104502045);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Gross AAL for Protection Class 3\r",
							"pm.test(\"Validating Onerld analysis Gross AAL for Protection Class 3\", () => {\r",
							"    const fourthRow = responseJson.Value.Analysis0[3];\r",
							"    pm.expect(fourthRow[\"Gross AAL - CoL1 MDL2\"]).to.eql(20174158.459999893);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Protection Class for Protection Class 3\r",
							"pm.test(\"Validating Onerld analysis Protection Class for Protection Class 3\", () => {\r",
							"    const fourthRow = responseJson.Value.Analysis0[3];\r",
							"    pm.expect(fourthRow[\"Protection Class\"]).to.eql(\"3\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Protection Class 4\r",
							"pm.test(\"Validating Onerld analysis Percentage for Protection Class 4\", () => {\r",
							"    const fifthRow = responseJson.Value.Analysis0[4];\r",
							"    pm.expect(fifthRow[\"Percentage\"]).to.eql(25.867200272094475);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Gross AAL for Protection Class 4\r",
							"pm.test(\"Validating Onerld analysis Gross AAL for Protection Class 4\", () => {\r",
							"    const fifthRow = responseJson.Value.Analysis0[4];\r",
							"    pm.expect(fifthRow[\"Gross AAL - CoL1 MDL2\"]).to.eql(19749741.33000006);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Protection Class for Protection Class 4\r",
							"pm.test(\"Validating Onerld analysis Protection Class for Protection Class 4\", () => {\r",
							"    const fifthRow = responseJson.Value.Analysis0[4];\r",
							"    pm.expect(fifthRow[\"Protection Class\"]).to.eql(\"4\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Protection Class 5\r",
							"pm.test(\"Validating Onerld analysis Percentage for Protection Class 5\", () => {\r",
							"    const sixthRow = responseJson.Value.Analysis0[5];\r",
							"    pm.expect(sixthRow[\"Percentage\"]).to.eql(5.976937335432001);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Gross AAL for Protection Class 5\r",
							"pm.test(\"Validating Onerld analysis Gross AAL for Protection Class 5\", () => {\r",
							"    const sixthRow = responseJson.Value.Analysis0[5];\r",
							"    pm.expect(sixthRow[\"Gross AAL - CoL1 MDL2\"]).to.eql(4563422.59999999);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Protection Class for Protection Class 5\r",
							"pm.test(\"Validating Onerld analysis Protection Class for Protection Class 5\", () => {\r",
							"    const sixthRow = responseJson.Value.Analysis0[5];\r",
							"    pm.expect(sixthRow[\"Protection Class\"]).to.eql(\"5\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Protection Class 6\r",
							"pm.test(\"Validating Onerld analysis Percentage for Protection Class 6\", () => {\r",
							"    const seventhRow = responseJson.Value.Analysis0[6];\r",
							"    pm.expect(seventhRow[\"Percentage\"]).to.eql(3.0510350541928184);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Gross AAL for Protection Class 6\r",
							"pm.test(\"Validating Onerld analysis Gross AAL for Protection Class 6\", () => {\r",
							"    const seventhRow = responseJson.Value.Analysis0[6];\r",
							"    pm.expect(seventhRow[\"Gross AAL - CoL1 MDL2\"]).to.eql(2329481.059999998);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Protection Class for Protection Class 6\r",
							"pm.test(\"Validating Onerld analysis Protection Class for Protection Class 6\", () => {\r",
							"    const seventhRow = responseJson.Value.Analysis0[6];\r",
							"    pm.expect(seventhRow[\"Protection Class\"]).to.eql(\"6\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Protection Class 7\r",
							"pm.test(\"Validating Onerld analysis Percentage for Protection Class 7\", () => {\r",
							"    const eighthRow = responseJson.Value.Analysis0[7];\r",
							"    pm.expect(eighthRow[\"Percentage\"]).to.eql(0.4243554721472361);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Gross AAL for Protection Class 7\r",
							"pm.test(\"Validating Onerld analysis Gross AAL for Protection Class 7\", () => {\r",
							"    const eighthRow = responseJson.Value.Analysis0[7];\r",
							"    pm.expect(eighthRow[\"Gross AAL - CoL1 MDL2\"]).to.eql(323997.60000000003);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Protection Class for Protection Class 7\r",
							"pm.test(\"Validating Onerld analysis Protection Class for Protection Class 7\", () => {\r",
							"    const eighthRow = responseJson.Value.Analysis0[7];\r",
							"    pm.expect(eighthRow[\"Protection Class\"]).to.eql(\"7\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Protection Class 8\r",
							"pm.test(\"Validating Onerld analysis Percentage for Protection Class 8\", () => {\r",
							"    const ninthRow = responseJson.Value.Analysis0[8];\r",
							"    pm.expect(ninthRow[\"Percentage\"]).to.eql(0.3246095211514431);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Gross AAL for Protection Class 8\r",
							"pm.test(\"Validating Onerld analysis Gross AAL for Protection Class 8\", () => {\r",
							"    const ninthRow = responseJson.Value.Analysis0[8];\r",
							"    pm.expect(ninthRow[\"Gross AAL - CoL1 MDL2\"]).to.eql(247841.05000000013);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Protection Class for Protection Class 8\r",
							"pm.test(\"Validating Onerld analysis Protection Class for Protection Class 8\", () => {\r",
							"    const ninthRow = responseJson.Value.Analysis0[8];\r",
							"    pm.expect(ninthRow[\"Protection Class\"]).to.eql(\"8\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Protection Class 9\r",
							"pm.test(\"Validating Onerld analysis Percentage for Protection Class 9\", () => {\r",
							"    const tenthRow = responseJson.Value.Analysis0[9];\r",
							"    pm.expect(tenthRow[\"Percentage\"]).to.eql(0.14427514478623854);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Gross AAL for Protection Class 9\r",
							"pm.test(\"Validating Onerld analysis Gross AAL for Protection Class 9\", () => {\r",
							"    const tenthRow = responseJson.Value.Analysis0[9];\r",
							"    pm.expect(tenthRow[\"Gross AAL - CoL1 MDL2\"]).to.eql(110154.81999999999);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Protection Class for Protection Class 9\r",
							"pm.test(\"Validating Onerld analysis Protection Class for Protection Class 9\", () => {\r",
							"    const tenthRow = responseJson.Value.Analysis0[9];\r",
							"    pm.expect(tenthRow[\"Protection Class\"]).to.eql(\"9\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"Gross AAL - CoL1 MDL2\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Protection Class\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "GU AAL RMS/Agency code range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"// Validating Onerld analysis Percentage for Agent AGY043\r",
							"pm.test(\"Validating Onerld analysis Percentage for Agent AGY043\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY043\");\r",
							"    pm.expect(agentRow[\"Percentage\"]).to.eql(2.7579640887467356);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Ground Up AAL for Agent AGY043\r",
							"pm.test(\"Validating Onerld analysis Ground Up AAL for Agent AGY043\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY043\");\r",
							"    pm.expect(agentRow[\"Ground Up AAL - CoL1 MDL1\"]).to.eql(1486767.319999998);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Agent for Agent AGY043\r",
							"pm.test(\"Validating Onerld analysis Agent for Agent AGY043\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY043\");\r",
							"    pm.expect(agentRow[\"Agent\"]).to.eql(\"AGY043\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Agent AGY022\r",
							"pm.test(\"Validating Onerld analysis Percentage for Agent AGY022\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY022\");\r",
							"    pm.expect(agentRow[\"Percentage\"]).to.eql(2.7254479642751646);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Ground Up AAL for Agent AGY022\r",
							"pm.test(\"Validating Onerld analysis Ground Up AAL for Agent AGY022\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY022\");\r",
							"    pm.expect(agentRow[\"Ground Up AAL - CoL1 MDL1\"]).to.eql(2.7254479642751646);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Agent for Agent AGY022\r",
							"pm.test(\"Validating Onerld analysis Agent for Agent AGY022\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY022\");\r",
							"    pm.expect(agentRow[\"Agent\"]).to.eql(\"AGY022\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Agent AGY2152\r",
							"pm.test(\"Validating Onerld analysis Percentage for Agent AGY2152\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY2152\");\r",
							"    pm.expect(agentRow[\"Percentage\"]).to.eql(1.1289819815349997);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Ground Up AAL for Agent AGY2152\r",
							"pm.test(\"Validating Onerld analysis Ground Up AAL for Agent AGY2152\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY2152\");\r",
							"    pm.expect(agentRow[\"Ground Up AAL - CoL1 MDL1\"]).to.eql(608613.2599999995);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Agent for Agent AGY2152\r",
							"pm.test(\"Validating Onerld analysis Agent for Agent AGY2152\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY2152\");\r",
							"    pm.expect(agentRow[\"Agent\"]).to.eql(\"AGY2152\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Agent AGY334\r",
							"pm.test(\"Validating Onerld analysis Percentage for Agent AGY334\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY334\");\r",
							"    pm.expect(agentRow[\"Percentage\"]).to.eql(1.3325242422613486);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Ground Up AAL for Agent AGY334\r",
							"pm.test(\"Validating Onerld analysis Ground Up AAL for Agent AGY334\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY334\");\r",
							"    pm.expect(agentRow[\"Ground Up AAL - CoL1 MDL1\"]).to.eql(718339.1200000006);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Agent for Agent AGY334\r",
							"pm.test(\"Validating Onerld analysis Agent for Agent AGY334\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY334\");\r",
							"    pm.expect(agentRow[\"Agent\"]).to.eql(\"AGY334\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Agent AGY335\r",
							"pm.test(\"Validating Onerld analysis Percentage for Agent AGY335\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY335\");\r",
							"    pm.expect(agentRow[\"Percentage\"]).to.eql(0.01749865395344158);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Ground Up AAL for Agent AGY335\r",
							"pm.test(\"Validating Onerld analysis Ground Up AAL for Agent AGY335\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY335\");\r",
							"    pm.expect(agentRow[\"Ground Up AAL - CoL1 MDL1\"]).to.eql(9433.2);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Agent for Agent AGY335\r",
							"pm.test(\"Validating Onerld analysis Agent for Agent AGY335\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY335\");\r",
							"    pm.expect(agentRow[\"Agent\"]).to.eql(\"AGY335\");\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Agent AGY010\r",
							"pm.test(\"Validating Onerld analysis Percentage for Agent AGY010\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY010\");\r",
							"    pm.expect(agentRow[\"Percentage\"]).to.eql(1.1778206297426868);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Ground Up AAL for Agent AGY010\r",
							"pm.test(\"Validating Onerld analysis Ground Up AAL for Agent AGY010\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY010\");\r",
							"    pm.expect(agentRow[\"Ground Up AAL - CoL1 MDL1\"]).to.eql(634941.2699999998);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Agent for Agent AGY010\r",
							"pm.test(\"Validating Onerld analysis Agent for Agent AGY010\", () => {\r",
							"    const agentRow = responseJson.Value.Analysis0.find(item => item[\"Agent\"] === \"AGY010\");\r",
							"    pm.expect(agentRow[\"Agent\"]).to.eql(\"AGY010\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"Ground Up AAL - CoL1 MDL1\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Agent\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "GU AAL - AIR/Wind deductible type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"// Validating Onerld analysis Percentage for Contract Custom Enum 1 \"Hurricane\"\r",
							"pm.test(\"Validating Onerld analysis Percentage for Contract Custom Enum 1 'Hurricane'\", () => {\r",
							"    const hurricaneRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 1\"] === \"Hurricane\");\r",
							"    pm.expect(hurricaneRow[\"Percentage\"]).to.eql(3.5965782486068485);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Ground Up AAL for Contract Custom Enum 1 \"Hurricane\"\r",
							"pm.test(\"Validating Onerld analysis Ground Up AAL for Contract Custom Enum 1 'Hurricane'\", () => {\r",
							"    const hurricaneRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 1\"] === \"Hurricane\");\r",
							"    pm.expect(hurricaneRow[\"Ground Up AAL - CoL1 MDL2\"]).to.eql(3715724.8799999985);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Contract Custom Enum 1 \"Named Storm\"\r",
							"pm.test(\"Validating Onerld analysis Percentage for Contract Custom Enum 1 'Named Storm'\", () => {\r",
							"    const namedStormRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 1\"] === \"Named Storm\");\r",
							"    pm.expect(namedStormRow[\"Percentage\"]).to.eql(62.05609168919707);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Ground Up AAL for Contract Custom Enum 1 \"Named Storm\"\r",
							"pm.test(\"Validating Onerld analysis Ground Up AAL for Contract Custom Enum 1 'Named Storm'\", () => {\r",
							"    const namedStormRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 1\"] === \"Named Storm\");\r",
							"    pm.expect(namedStormRow[\"Ground Up AAL - CoL1 MDL2\"]).to.eql(64111871.86999983);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Contract Custom Enum 1 \"Windstorm & Hail\"\r",
							"pm.test(\"Validating Onerld analysis Percentage for Contract Custom Enum 1 'Windstorm & Hail'\", () => {\r",
							"    const windstormHailRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 1\"] === \"Windstorm & Hail\");\r",
							"    pm.expect(windstormHailRow[\"Percentage\"]).to.eql(34.347330062196086);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Ground Up AAL for Contract Custom Enum 1 \"Windstorm & Hail\"\r",
							"pm.test(\"Validating Onerld analysis Ground Up AAL for Contract Custom Enum 1 'Windstorm & Hail'\", () => {\r",
							"    const windstormHailRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 1\"] === \"Windstorm & Hail\");\r",
							"    pm.expect(windstormHailRow[\"Ground Up AAL - CoL1 MDL2\"]).to.eql(35485180.64999979);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"Ground Up AAL - CoL1 MDL2\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Contract Custom Enum 1\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "PML 1in250 RMS/Roof to wall connection",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"// Validating onerld Percentage for Custom Enum 5 \"Not Required\"\r",
							"pm.test(\"Validating onerld Percentage for Custom Enum 5 'Not Required'\", () => {\r",
							"    const notRequiredRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"Not Required\");\r",
							"    pm.expect(notRequiredRow[\"Percentage\"]).to.eql(6.649347113549157);\r",
							"});\r",
							"\r",
							"// Validating onerld Custom Measure 1 for Custom Enum 5 \"Not Required\"\r",
							"pm.test(\"Validating onerld Custom Measure 1 for Custom Enum 5 'Not Required'\", () => {\r",
							"    const notRequiredRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"Not Required\");\r",
							"    pm.expect(notRequiredRow[\"Custom Measure 1\"]).to.eql(51478495.08000021);\r",
							"});\r",
							"\r",
							"// Validating onerld Percentage for Custom Enum 5 \"Unknown\"\r",
							"pm.test(\"Validating onerld Percentage for Custom Enum 5 'Unknown'\", () => {\r",
							"    const unknownRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"Unknown\");\r",
							"    pm.expect(unknownRow[\"Percentage\"]).to.eql(40.16780403746007);\r",
							"});\r",
							"\r",
							"// Validating onerld Custom Measure 1 for Custom Enum 5 \"Unknown\"\r",
							"pm.test(\"Validating onerld Custom Measure 1 for Custom Enum 5 'Unknown'\", () => {\r",
							"    const unknownRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"Unknown\");\r",
							"    pm.expect(unknownRow[\"Custom Measure 1\"]).to.eql(310974606.55999696);\r",
							"});\r",
							"\r",
							"// Validating onerld Percentage for Custom Enum 5 \"anchor bolts\"\r",
							"pm.test(\"Validating onerld Percentage for Custom Enum 5 'anchor bolts'\", () => {\r",
							"    const anchorBoltsRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"anchor bolts\");\r",
							"    pm.expect(anchorBoltsRow[\"Percentage\"]).to.eql(2.0727986854009592);\r",
							"});\r",
							"\r",
							"// Validating onerld Custom Measure 1 for Custom Enum 5 \"anchor bolts\"\r",
							"pm.test(\"Validating onerld Custom Measure 1 for Custom Enum 5 'anchor bolts'\", () => {\r",
							"    const anchorBoltsRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"anchor bolts\");\r",
							"    pm.expect(anchorBoltsRow[\"Custom Measure 1\"]).to.eql(16047373.540000007);\r",
							"});\r",
							"\r",
							"// Validating onerld Percentage for Custom Enum 5 \"clips\"\r",
							"pm.test(\"Validating onerld Percentage for Custom Enum 5 'clips'\", () => {\r",
							"    const clipsRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"clips\");\r",
							"    pm.expect(clipsRow[\"Percentage\"]).to.eql(18.068683462107607);\r",
							"});\r",
							"\r",
							"// Validating onerld Custom Measure 1 for Custom Enum 5 \"clips\"\r",
							"pm.test(\"Validating onerld Custom Measure 1 for Custom Enum 5 'clips'\", () => {\r",
							"    const clipsRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"clips\");\r",
							"    pm.expect(clipsRow[\"Custom Measure 1\"]).to.eql(139885708.59999985);\r",
							"});\r",
							"\r",
							"// Validating onerld Percentage for Custom Enum 5 \"double wraps\"\r",
							"pm.test(\"Validating onerld Percentage for Custom Enum 5 'double wraps'\", () => {\r",
							"    const doubleWrapsRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"double wraps\");\r",
							"    pm.expect(doubleWrapsRow[\"Percentage\"]).to.eql(9.137806302783568);\r",
							"});\r",
							"\r",
							"// Validating onerld Custom Measure 1 for Custom Enum 5 \"double wraps\"\r",
							"pm.test(\"Validating onerld Custom Measure 1 for Custom Enum 5 'double wraps'\", () => {\r",
							"    const doubleWrapsRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"double wraps\");\r",
							"    pm.expect(doubleWrapsRow[\"Custom Measure 1\"]).to.eql(70743865.33999993);\r",
							"});\r",
							"\r",
							"// Validating onerld Percentage for Custom Enum 5 \"metal bolt anchors\"\r",
							"pm.test(\"Validating onerld Percentage for Custom Enum 5 'metal bolt anchors'\", () => {\r",
							"    const metalBoltAnchorsRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"metal bolt anchors\");\r",
							"    pm.expect(metalBoltAnchorsRow[\"Percentage\"]).to.eql(0.051659324326190734);\r",
							"});\r",
							"\r",
							"// Validating onerld Custom Measure 1 for Custom Enum 5 \"metal bolt anchors\"\r",
							"pm.test(\"Validating onerld Custom Measure 1 for Custom Enum 5 'metal bolt anchors'\", () => {\r",
							"    const metalBoltAnchorsRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"metal bolt anchors\");\r",
							"    pm.expect(metalBoltAnchorsRow[\"Custom Measure 1\"]).to.eql(399940.66);\r",
							"});\r",
							"\r",
							"// Validating onerld Percentage for Custom Enum 5 \"single wraps\"\r",
							"pm.test(\"Validating onerld Percentage for Custom Enum 5 'single wraps'\", () => {\r",
							"    const singleWrapsRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"single wraps\");\r",
							"    pm.expect(singleWrapsRow[\"Percentage\"]).to.eql(16.76067872204847);\r",
							"});\r",
							"\r",
							"// Validating onerld Custom Measure 1 for Custom Enum 5 \"single wraps\"\r",
							"pm.test(\"Validating onerld Custom Measure 1 for Custom Enum 5 'single wraps'\", () => {\r",
							"    const singleWrapsRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"single wraps\");\r",
							"    pm.expect(singleWrapsRow[\"Custom Measure 1\"]).to.eql(129759283.4899997);\r",
							"});\r",
							"\r",
							"// Validating onerld Percentage for Custom Enum 5 \"toe nails\"\r",
							"pm.test(\"Validating onerld Percentage for Custom Enum 5 'toe nails'\", () => {\r",
							"    const toeNailsRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"toe nails\");\r",
							"    pm.expect(toeNailsRow[\"Percentage\"]).to.eql(7.091222352323986);\r",
							"});\r",
							"\r",
							"// Validating onerld Custom Measure 1 for Custom Enum 5 \"toe nails\"\r",
							"pm.test(\"Validating onerld Custom Measure 1 for Custom Enum 5 'toe nails'\", () => {\r",
							"    const toeNailsRow = responseJson.Value.Analysis0.find(item => item[\"Custom Enum 5\"] === \"toe nails\");\r",
							"    pm.expect(toeNailsRow[\"Custom Measure 1\"]).to.eql(54899443.32000004);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"Custom Measure 1\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Custom Enum 5\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "PML 1in100 RMS/Renwal type range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							" \r",
							"// Validating Onerld analysis Percentage for Contract Custom Enum 3 \"New\"\r",
							"pm.test(\"Validating Onerld analysis Percentage for Contract Custom Enum 3 'New'\", () => {\r",
							"    const newContractRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 3\"] === \"New\");\r",
							"    pm.expect(newContractRow[\"Percentage\"]).to.eql(32.10185310277301);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Custom Measure 2 for Contract Custom Enum 3 \"New\"\r",
							"pm.test(\"Validating Onerld analysis Custom Measure 2 for Contract Custom Enum 3 'New'\", () => {\r",
							"    const newContractRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 3\"] === \"New\");\r",
							"    pm.expect(newContractRow[\"Custom Measure 2\"]).to.eql(147936092.22000003);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Contract Custom Enum 3 \"Renewal\"\r",
							"pm.test(\"Validating Onerld analysis Percentage for Contract Custom Enum 3 'Renewal'\", () => {\r",
							"    const renewalContractRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 3\"] === \"Renewal\");\r",
							"    pm.expect(renewalContractRow[\"Percentage\"]).to.eql(65.76418587955656);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Custom Measure 2 for Contract Custom Enum 3 \"Renewal\"\r",
							"pm.test(\"Validating Onerld analysis Custom Measure 2 for Contract Custom Enum 3 'Renewal'\", () => {\r",
							"    const renewalContractRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 3\"] === \"Renewal\");\r",
							"    pm.expect(renewalContractRow[\"Custom Measure 2\"]).to.eql(303063397.4900005);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Percentage for Contract Custom Enum 3 \"Rewrite\"\r",
							"pm.test(\"Validating Onerld analysis Percentage for Contract Custom Enum 3 'Rewrite'\", () => {\r",
							"    const rewriteContractRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 3\"] === \"Rewrite\");\r",
							"    pm.expect(rewriteContractRow[\"Percentage\"]).to.eql(2.1339610176704125);\r",
							"});\r",
							"\r",
							"// Validating Onerld analysis Custom Measure 2 for Contract Custom Enum 3 \"Rewrite\"\r",
							"pm.test(\"Validating Onerld analysis Custom Measure 2 for Contract Custom Enum 3 'Rewrite'\", () => {\r",
							"    const rewriteContractRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 3\"] === \"Rewrite\");\r",
							"    pm.expect(rewriteContractRow[\"Custom Measure 2\"]).to.eql(9834007.180000003);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"GroupByMeasures\":[\"Custom Measure 2\"],\"GroupByAttributes\":[\"Contract Custom Enum 3\"],\"includeAllBins\":true}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "PML 1in250 AIR/Extended replacement cost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"\r",
							"// Validating  analysis Percentage for Ext Replacement Cost Flag \"no\"\r",
							"pm.test(\"Validating  analysis Percentage for Ext Replacement Cost Flag 'no'\", () => {\r",
							"    const extReplacementCostRow = responseJson.Value.Analysis0.find(item => item[\"Ext Replacement Cost Flag\"] === \"no\");\r",
							"    pm.expect(extReplacementCostRow[\"Percentage\"]).to.eql(100);\r",
							"});\r",
							"\r",
							"// Validating  analysis Custom Measure 3 for Ext Replacement Cost Flag \"no\"\r",
							"pm.test(\"Validating  analysis Custom Measure 3 for Ext Replacement Cost Flag 'no'\", () => {\r",
							"    const extReplacementCostRow = responseJson.Value.Analysis0.find(item => item[\"Ext Replacement Cost Flag\"] === \"no\");\r",
							"    pm.expect(extReplacementCostRow[\"Custom Measure 3\"]).to.eql(1272357900.934585);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"Custom Measure 3\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Ext Replacement Cost Flag\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "PML 1in100 AIR/EQ Coverage Range",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"// Validating Om - 2212 Fleet(copy) analysis Percentage for Contract Custom Enum 2 \"N\"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for Contract Custom Enum 2 'N'\", () => {\r",
							"    const contractEnumNRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 2\"] === \"N\");\r",
							"    pm.expect(contractEnumNRow[\"Percentage\"]).to.eql(99.99370280694673);\r",
							"});\r",
							"\r",
							"// Validating Om - 2212 Fleet(copy) analysis Custom Measure 4 for Contract Custom Enum 2 \"N\"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Custom Measure 4 for Contract Custom Enum 2 'N'\", () => {\r",
							"    const contractEnumNRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 2\"] === \"N\");\r",
							"    pm.expect(contractEnumNRow[\"Custom Measure 4\"]).to.eql(853844140.4555429);\r",
							"});\r",
							"\r",
							"// Validating Om - 2212 Fleet(copy) analysis Percentage for Contract Custom Enum 2 \"Y\"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Percentage for Contract Custom Enum 2 'Y'\", () => {\r",
							"    const contractEnumYRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 2\"] === \"Y\");\r",
							"    pm.expect(contractEnumYRow[\"Percentage\"]).to.eql(0.006297193053272434);\r",
							"});\r",
							"\r",
							"// Validating Om - 2212 Fleet(copy) analysis Custom Measure 4 for Contract Custom Enum 2 \"Y\"\r",
							"pm.test(\"Validating Om - 2212 Fleet(copy) analysis Custom Measure 4 for Contract Custom Enum 2 'Y'\", () => {\r",
							"    const contractEnumYRow = responseJson.Value.Analysis0.find(item => item[\"Contract Custom Enum 2\"] === \"Y\");\r",
							"    pm.expect(contractEnumYRow[\"Custom Measure 4\"]).to.eql(53771.600000000006);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"GroupByMeasures\": [\r\n        \"Custom Measure 4\"\r\n    ],\r\n    \"GroupByAttributes\": [\r\n        \"Contract Custom Enum 2\"\r\n    ],\r\n    \"includeAllBins\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "TIV/Carrier",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Accredited PL\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Accredited PL'\", () => {\r",
							"    const layerAccreditedPL = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Accredited PL\");\r",
							"    pm.expect(layerAccreditedPL[\"Percentage\"]).to.eql(8.606545939612129);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"Accredited PL\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'Accredited PL'\", () => {\r",
							"    const layerAccreditedPL = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Accredited PL\");\r",
							"    pm.expect(layerAccreditedPL[\"TIV\"]).to.eql(3157878820);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Beazley\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Beazley'\", () => {\r",
							"    const layerBeazley = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Beazley\");\r",
							"    pm.expect(layerBeazley[\"Percentage\"]).to.eql(3.1459903129262177);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"Beazley\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'Beazley'\", () => {\r",
							"    const layerBeazley = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Beazley\");\r",
							"    pm.expect(layerBeazley[\"TIV\"]).to.eql(1154313966);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Chaucer Ins Co\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Chaucer Ins Co'\", () => {\r",
							"    const layerChaucerInsCo = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Chaucer Ins Co\");\r",
							"    pm.expect(layerChaucerInsCo[\"Percentage\"]).to.eql(1.1742617506340498);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"Chaucer Ins Co\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'Chaucer Ins Co'\", () => {\r",
							"    const layerChaucerInsCo = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Chaucer Ins Co\");\r",
							"    pm.expect(layerChaucerInsCo[\"TIV\"]).to.eql(430855344);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Chubb Eur SE\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Chubb Eur SE'\", () => {\r",
							"    const layerChubbEurSE = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Chubb Eur SE\");\r",
							"    pm.expect(layerChubbEurSE[\"Percentage\"]).to.eql(1.0423965633994823);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"Chubb Eur SE\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'Chubb Eur SE'\", () => {\r",
							"    const layerChubbEurSE = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Chubb Eur SE\");\r",
							"    pm.expect(layerChubbEurSE[\"TIV\"]).to.eql(382471906);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lexington\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lexington'\", () => {\r",
							"    const layerLexington = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lexington\");\r",
							"    pm.expect(layerLexington[\"Percentage\"]).to.eql(3.249688320395225);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"Lexington\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'Lexington'\", () => {\r",
							"    const layerLexington = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lexington\");\r",
							"    pm.expect(layerLexington[\"TIV\"]).to.eql(1192362417);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyd's Pfrd\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyd's Pfrd'\", () => {\r",
							"    const layerLloydsPfrd = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyd's Pfrd\");\r",
							"    pm.expect(layerLloydsPfrd[\"Percentage\"]).to.eql(2.0840352392935046);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"Lloyd's Pfrd\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'Lloyd's Pfrd'\", () => {\r",
							"    const layerLloydsPfrd = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyd's Pfrd\");\r",
							"    pm.expect(layerLloydsPfrd[\"TIV\"]).to.eql(764665731);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyd-BA\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyd-BA'\", () => {\r",
							"    const layerLloydBA = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyd-BA\");\r",
							"    pm.expect(layerLloydBA[\"Percentage\"]).to.eql(2.8357330707559822);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"Lloyd-BA\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'Lloyd-BA'\", () => {\r",
							"    const layerLloydBA = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyd-BA\");\r",
							"    pm.expect(layerLloydBA[\"TIV\"]).to.eql(1040475641);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyds Chaucer\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyds Chaucer'\", () => {\r",
							"    const layerLloydsChaucer = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds Chaucer\");\r",
							"    pm.expect(layerLloydsChaucer[\"Percentage\"]).to.eql(3.0461861565482593);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"Lloyds Chaucer\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'Lloyds Chaucer'\", () => {\r",
							"    const layerLloydsChaucer = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds Chaucer\");\r",
							"    pm.expect(layerLloydsChaucer[\"TIV\"]).to.eql(1117694231);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyds RenRe\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyds RenRe'\", () => {\r",
							"    const layerLloydsRenRe = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds RenRe\");\r",
							"    pm.expect(layerLloydsRenRe[\"Percentage\"]).to.eql(2.530986597747526);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"Lloyds RenRe\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'Lloyds RenRe'\", () => {\r",
							"    const layerLloydsRenRe = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds RenRe\");\r",
							"    pm.expect(layerLloydsRenRe[\"TIV\"]).to.eql(928659305);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyds-Brit\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyds-Brit'\", () => {\r",
							"    const layerLloydsBrit = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds-Brit\");\r",
							"    pm.expect(layerLloydsBrit[\"Percentage\"]).to.eql(0.0036942522355007433);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"Lloyds-Brit\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'Lloyds-Brit'\", () => {\r",
							"    const layerLloydsBrit = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds-Brit\");\r",
							"    pm.expect(layerLloydsBrit[\"TIV\"]).to.eql(1355480);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyds-Can PL\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyds-Can PL'\", () => {\r",
							"    const layerLloydsCanPL = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds-Can PL\");\r",
							"    pm.expect(layerLloydsCanPL[\"Percentage\"]).to.eql(11.335458622806552);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"Lloyds-Can PL\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'Lloyds-Can PL'\", () => {\r",
							"    const layerLloydsCanPL = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds-Can PL\");\r",
							"    pm.expect(layerLloydsCanPL[\"TIV\"]).to.eql(4159160359);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyds-NE\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyds-NE'\", () => {\r",
							"    const layerLloydsNE = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds-NE\");\r",
							"    pm.expect(layerLloydsNE[\"Percentage\"]).to.eql(0.37237159602217645);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"Lloyds-NE\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'Lloyds-NE'\", () => {\r",
							"    const layerLloydsNE = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds-NE\");\r",
							"    pm.expect(layerLloydsNE[\"TIV\"]).to.eql(136629071);\r",
							"});\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"QBESIC\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'QBESIC'\", () => {\r",
							"    const layerQBESIC = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"QBESIC\");\r",
							"    pm.expect(layerQBESIC[\"Percentage\"]).to.eql(60.57265157762339);\r",
							"});\r",
							"\r",
							"// Validating TIV for Layer Custom Enum 1 \"QBESIC\"\r",
							"pm.test(\"Validating TIV for Layer Custom Enum 1 'QBESIC'\", () => {\r",
							"    const layerQBESIC = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"QBESIC\");\r",
							"    pm.expect(layerQBESIC[\"TIV\"]).to.eql(22225070874);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"GroupByMeasures\":[\"TIV\"],\"GroupByAttributes\":[\"Layer Custom Enum 1\"],\"includeAllBins\":true}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		},
		{
			"name": "Gross exposed limit/Carrier Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"const responseJson = pm.response.json();\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Accredited PL\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Accredited PL'\", () => {\r",
							"    const layerAccreditedPL = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Accredited PL\");\r",
							"    pm.expect(layerAccreditedPL[\"Percentage\"]).to.eql(8.599713411766082);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"Accredited PL\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'Accredited PL'\", () => {\r",
							"    const layerAccreditedPL = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Accredited PL\");\r",
							"    pm.expect(layerAccreditedPL[\"ContractLoss_Value All Types_EL\"]).to.eql(3142999320);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Beazley\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Beazley'\", () => {\r",
							"    const layerBeazley = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Beazley\");\r",
							"    pm.expect(layerBeazley[\"Percentage\"]).to.eql(3.1468964800911055);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"Beazley\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'Beazley'\", () => {\r",
							"    const layerBeazley = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Beazley\");\r",
							"    pm.expect(layerBeazley[\"ContractLoss_Value All Types_EL\"]).to.eql(1150118966);\r",
							"});\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Chaucer Ins Co\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Chaucer Ins Co'\", () => {\r",
							"    const layerChaucerInsCo = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Chaucer Ins Co\");\r",
							"    pm.expect(layerChaucerInsCo[\"Percentage\"]).to.eql(1.1737567341867063);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"Chaucer Ins Co\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'Chaucer Ins Co'\", () => {\r",
							"    const layerChaucerInsCo = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Chaucer Ins Co\");\r",
							"    pm.expect(layerChaucerInsCo[\"ContractLoss_Value All Types_EL\"]).to.eql(428981344);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Chubb Eur SE\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Chubb Eur SE'\", () => {\r",
							"    const layerChubbEurSE = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Chubb Eur SE\");\r",
							"    pm.expect(layerChubbEurSE[\"Percentage\"]).to.eql(1.042648867968853);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"Chubb Eur SE\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'Chubb Eur SE'\", () => {\r",
							"    const layerChubbEurSE = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Chubb Eur SE\");\r",
							"    pm.expect(layerChubbEurSE[\"ContractLoss_Value All Types_EL\"]).to.eql(381064406);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lexington\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lexington'\", () => {\r",
							"    const layerLexington = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lexington\");\r",
							"    pm.expect(layerLexington[\"Percentage\"]).to.eql(3.25040758638513);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"Lexington\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'Lexington'\", () => {\r",
							"    const layerLexington = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lexington\");\r",
							"    pm.expect(layerLexington[\"ContractLoss_Value All Types_EL\"]).to.eql(1187949917);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyd's Pfrd\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyd's Pfrd'\", () => {\r",
							"    const layerLloydsPfrd = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyd's Pfrd\");\r",
							"    pm.expect(layerLloydsPfrd[\"Percentage\"]).to.eql(2.0826215609096144);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"Lloyd's Pfrd\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'Lloyd's Pfrd'\", () => {\r",
							"    const layerLloydsPfrd = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyd's Pfrd\");\r",
							"    pm.expect(layerLloydsPfrd[\"ContractLoss_Value All Types_EL\"]).to.eql(761150731);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyd-BA\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyd-BA'\", () => {\r",
							"    const layerLloydBA = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyd-BA\");\r",
							"    pm.expect(layerLloydBA[\"Percentage\"]).to.eql(2.831629700620699);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"Lloyd-BA\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'Lloyd-BA'\", () => {\r",
							"    const layerLloydBA = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyd-BA\");\r",
							"    pm.expect(layerLloydBA[\"ContractLoss_Value All Types_EL\"]).to.eql(1034896141);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyds Chaucer\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyds Chaucer'\", () => {\r",
							"    const layerLloydsChaucer = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds Chaucer\");\r",
							"    pm.expect(layerLloydsChaucer[\"Percentage\"]).to.eql(3.0430986691947592);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"Lloyds Chaucer\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'Lloyds Chaucer'\", () => {\r",
							"    const layerLloydsChaucer = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds Chaucer\");\r",
							"    pm.expect(layerLloydsChaucer[\"ContractLoss_Value All Types_EL\"]).to.eql(1112183231);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyds RenRe\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyds RenRe'\", () => {\r",
							"    const layerLloydsRenRe = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds RenRe\");\r",
							"    pm.expect(layerLloydsRenRe[\"Percentage\"]).to.eql(2.5281666364185202);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"Lloyds RenRe\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'Lloyds RenRe'\", () => {\r",
							"    const layerLloydsRenRe = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds RenRe\");\r",
							"    pm.expect(layerLloydsRenRe[\"ContractLoss_Value All Types_EL\"]).to.eql(923987305);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyds-Brit\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyds-Brit'\", () => {\r",
							"    const layerLloydsBrit = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds-Brit\");\r",
							"    pm.expect(layerLloydsBrit[\"Percentage\"]).to.eql(0.0036951140569517708);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"Lloyds-Brit\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'Lloyds-Brit'\", () => {\r",
							"    const layerLloydsBrit = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds-Brit\");\r",
							"    pm.expect(layerLloydsBrit[\"ContractLoss_Value All Types_EL\"]).to.eql(1350480);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyds-Can PL\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyds-Can PL'\", () => {\r",
							"    const layerLloydsCanPL = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds-Can PL\");\r",
							"    pm.expect(layerLloydsCanPL[\"Percentage\"]).to.eql(11.327010748333064);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"Lloyds-Can PL\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'Lloyds-Can PL'\", () => {\r",
							"    const layerLloydsCanPL = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds-Can PL\");\r",
							"    pm.expect(layerLloydsCanPL[\"ContractLoss_Value All Types_EL\"]).to.eql(4139764359);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"Lloyds-NE\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'Lloyds-NE'\", () => {\r",
							"    const layerLloydsNE = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds-NE\");\r",
							"    pm.expect(layerLloydsNE[\"Percentage\"]).to.eql(0.37287979897549645);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"Lloyds-NE\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'Lloyds-NE'\", () => {\r",
							"    const layerLloydsNE = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"Lloyds-NE\");\r",
							"    pm.expect(layerLloydsNE[\"ContractLoss_Value All Types_EL\"]).to.eql(136279071);\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							"// Validating Percentage for Layer Custom Enum 1 \"QBESIC\"\r",
							"pm.test(\"Validating Percentage for Layer Custom Enum 1 'QBESIC'\", () => {\r",
							"    const layerQBESIC = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"QBESIC\");\r",
							"    pm.expect(layerQBESIC[\"Percentage\"]).to.eql(60.597474691093026);\r",
							"});\r",
							"\r",
							"// Validating ContractLoss_Value for Layer Custom Enum 1 \"QBESIC\"\r",
							"pm.test(\"Validating ContractLoss_Value for Layer Custom Enum 1 'QBESIC'\", () => {\r",
							"    const layerQBESIC = responseJson.Value.Analysis0.find(item => item[\"Layer Custom Enum 1\"] === \"QBESIC\");\r",
							"    pm.expect(layerQBESIC[\"ContractLoss_Value All Types_EL\"]).to.eql(22146996374);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"GroupByMeasures\":[\"ContractLoss_Value All Types_EL\"],\"GroupByAttributes\":[\"Layer Custom Enum 1\"],\"includeAllBins\":true}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://alpha-api.eigenrisk.com/get-contribution-details",
					"protocol": "https",
					"host": [
						"alpha-api",
						"eigenrisk",
						"com"
					],
					"path": [
						"get-contribution-details"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		}
	]
}